0001   0000                     ; üíæ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–µ—Ç –ø–µ—á–∞–ª—å–Ω–µ–µ –Ω–∞ —Å–≤–µ—Ç–µ
0002   0000                     ;    —á–µ–º –¥–µ–º–æ –æ –ª–µ—Ç–∞—é—â–µ–π –¥–∏—Å–∫–µ—Ç–µ
0003   0000                     ;
0004   0000                     ; svofski & ivagor 2025
0005   0000                     ;
0006   0000                     ; –í–µ–∫—Ç–æ—Ä-06—Ü –ë–õ–ö+–°–ë–†!
0007   0000                     ;
0008   0000             
0009   0000             ;#define FADE_IN
0010   0000             #define FADE_OUT
0011   0000             
0012   0000             ; show all the text messages before the main screen appears
0013   0000             ;#define MESSAGES_AT_ONCE
0014   0000             
0015   0000             LOGOY           .equ $d8
0016   0000             FISH_Y          .equ $60
0017   0000             FISH_BP         .equ $80
0018   0000             ;LOGOY           .equ $60
0019   0000             
0020   0000             NBOUNDS         .equ 7
0021   0000             BUTTPLANE       .equ $c0
0022   0000             BUTTPLANE_A     .equ $c0
0023   0000             BUTTPLANE_B     .equ $e0
0024   0000             PixTabA         .equ 7800h
0025   0000             PixTabB         .equ 7C00h
0026   0000             DEG90           .equ 256/4
0027   0000             
0028   0100                     .org $100
0029   0100 F3                  di
0030   0101 AF                  xra a
0031   0102 D3 10               out $10
0032   0104 31 00 01            lxi sp, $100
0033   0107 3E C9               mvi a, $c9
0034   0109 32 38 00            sta $38
0035   010C             
0036   010C 3E C3               mvi a, $c3
0037   010E 32 00 00            sta 0
0038   0111 21 00 01            lxi h, $100
0039   0114 22 01 00            shld 1
0040   0117                     
0041   0117 21 E5 38            lxi h, pal_0
0042   011A 22 36 09            shld setpal_select
0043   011D FB                  ei
0044   011E             
0045   011E                     ; clear zero initialized vars
0046   011E 21 40 39            lxi h, zero_init_end
0047   0121 3E 03               mvi a, (zero_init_end - zero_init_start) / 32
0048   0123 01 00 00            lxi b, 0
0049   0126 CD E1 05            call clear_array_backwards
0050   0129 21 01 27            lxi h, ngon_start
0051   012C 22 13 07            shld geometry_ptr
0052   012F             
0053   012F                     ;; fish init
0054   012F                     ;mvi a, $1e      ; fish appears in this column
0055   012F                     ;sta fish_col
0056   012F                     ;mvi a, 1
0057   012F                     ;sta fish_col_frac
0058   012F             
0059   012F 21 00 0B            lxi h, bounds_0
0060   0132 22 95 0A            shld bounds
0061   0135 22 99 0A            shld bounds1
0062   0138 21 00 12            lxi h, bounds_1
0063   013B 22 97 0A            shld bounds_b
0064   013E 22 9B 0A            shld bounds1_b
0065   0141             
0066   0141 21 00 19            lxi h, bounds_2
0067   0144 22 9D 0A            shld bounds2
0068   0147 21 00 20            lxi h, bounds_3
0069   014A 22 9F 0A            shld bounds2_b
0070   014D                     
0071   014D 2A 06 50            lhld songe
0072   0150 CD 00 50            call player_init    ; starts playback immediately
0073   0153             
0074   0153 CD A4 03            call clrscr
0075   0156 F3                  di
0076   0157 3E C3               mvi a,0C3h
0077   0159 32 38 00            sta 38h
0078   015C 21 4A 0A            lxi h,ISR
0079   015F 22 39 00            shld 39h
0080   0162 FB                  ei
0081   0163             
0082   0163 21 00 78            lxi h, PixTabA
0083   0166 3E C0               mvi a, BUTTPLANE_A
0084   0168 CD 59 03            call MakePixTab
0085   016B 21 00 7C            lxi h, PixTabB
0086   016E 3E E0               mvi a, BUTTPLANE_B
0087   0170 CD 59 03            call MakePixTab
0088   0173                             
0089   0173 3E 01               mvi a, 1
0090   0175 D3 02               out $2
0091   0177             
0092   0177 CD 36 29            call mathinit
0093   017A             
0094   017A                     ; clear all bounds arrays
0095   017A 21 00 27            lxi h, bounds_end
0096   017D 3E E0               mvi a, 4 * 256 * NBOUNDS / 32   
0097   017F 01 FF FF            lxi b, $ffff ; fill with ff
0098   0182 CD E1 05            call clear_array_backwards
0099   0185             
0100   0185 21 19 39            lxi h, pal_zero_end
0101   0188 3E 01               mvi a, 1
0102   018A~            #ifdef FADE_IN        
0103   018A~                    lxi b, 0
0104   018A             #else
0105   018A 01 FF FF            lxi b, $ffff
0106   018D             #endif
0107   018D CD E1 05            call clear_array_backwards
0108   0190                     
0109   0190                     
0110   0190 21 60 08            lxi h, $0860
0111   0193 CD 7E 3D            call gotoxy
0112   0196 21 AF 38            lxi h, msg_minus1
0113   0199 CD A8 3D            call puts
0114   019C             
0115   019C 21 6F 09            lxi h, pal_intro
0116   019F 22 36 09            shld setpal_select
0117   01A2             
0118   01A2 3E F0               mvi a, 240
0119   01A4             black_loop:
0120   01A4 76                  hlt
0121   01A5 3D                  dcr a
0122   01A6 C2 A4 01            jnz black_loop
0123   01A9             
0124   01A9 21 E5 38            lxi h, pal_0
0125   01AC 22 36 09            shld setpal_select
0126   01AF 76                  hlt
0127   01B0 CD A4 03            call clrscr
0128   01B3 76                  hlt
0129   01B4             
0130   01B4             
0131   01B4                     ; main part
0132   01B4             
0133   01B4                     ; –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –±–æ–ª—å—à—É—é –Ω–∞–¥–ø–∏—Å—å
0134   01B4 0E D8               mvi c, LOGOY
0135   01B6 3E 80               mvi a, $80    ; –ø–ª–æ—Å–∫–æ—Å—Ç—å $80
0136   01B8 32 13 02            sta varblit_plane
0137   01BB 11 40 39            lxi d, harzakc0
0138   01BE CD FC 01            call varblit
0139   01C1             
0140   01C1 0E D7               mvi c, LOGOY-1
0141   01C3 3E A0               mvi a, $a0    ; –ø–ª–æ—Å–∫–æ—Å—Ç—å $a0
0142   01C5 32 13 02            sta varblit_plane
0143   01C8 11 70 3B            lxi d, harzakc1
0144   01CB CD FC 01            call varblit
0145   01CE             
0146   01CE~            #ifdef MESSAGES_AT_ONCE
0147   01CE~            messages:
0148   01CE~                    lxi h, msg1
0149   01CE~            messages_lup:
0150   01CE~                    mov a, m
0151   01CE~                    cpi 255
0152   01CE~                    jz messages_done
0153   01CE~                    mov e, a
0154   01CE~                    inx h
0155   01CE~                    mov d, m
0156   01CE~                    inx h
0157   01CE~                    push h
0158   01CE~                      xchg
0159   01CE~                      call gotoxy
0160   01CE~                    pop h
0161   01CE~                    call puts
0162   01CE~                    lhld _puts_sptr
0163   01CE~                    inx h
0164   01CE~                    jmp messages_lup
0165   01CE~            messages_done:        
0166   01CE             #else
0167   01CE                     ; slow messages
0168   01CE 21 00 30            lxi h, msg1
0169   01D1 22 1C 39            shld slow_msg_ptr
0170   01D4 21 22 30            lxi h, msg_restart
0171   01D7 22 1E 39            shld slow_msg_loop
0172   01DA 3E 01               mvi a, 1
0173   01DC 32 1A 39            sta slowprint_enabled
0174   01DF 32 1B 39            sta slow_msg_state
0175   01E2             #endif
0176   01E2             
0177   01E2             
0178   01E2                     ; MAIN PART BEGINS
0179   01E2             
0180   01E2                     ; begin fade in -- make sure these pointers are initialised before oneframe()
0181   01E2 21 F9 38            lxi h, pal_fade_a
0182   01E5 22 F5 38            shld pal_a_ptr
0183   01E8 21 09 39            lxi h, pal_fade_b
0184   01EB 22 F7 38            shld pal_b_ptr
0185   01EE             
0186   01EE CD 1D 06            call oneframe
0187   01F1             
0188   01F1 3E 08               mvi a, 8
0189   01F3 32 19 39            sta fade_in_flag    ; enable fade in for 8 frames (see ISR)
0190   01F6             
0191   01F6                     ;mvi a, 1
0192   01F6                     ;sta fish_enabled
0193   01F6             
0194   01F6             forevs:
0195   01F6 CD 1D 06            call oneframe
0196   01F9 C3 F6 01            jmp forevs
0197   01FC             
0198   01FC                             ; –≤—ã–≤–æ–¥ —Å–ø—Ä–∞–π—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ varblit:
0199   01FC                             ; db first_column, jump offset = (16 - end) * 5, data
0200   01FC                             ; db 255, 255 ; end of data
0201   01FC                             ;
0202   01FC                             ; di
0203   01FC                             ; mvi c, $d0
0204   01FC                             ; mvi a, $c0
0205   01FC                             ; sta varblit_plane
0206   01FC                             ; lxi d, varplane0
0207   01FC                             ; call varblit
0208   01FC             varblit:
0209   01FC                             ;di
0210   01FC 21 00 00                    lxi h, 0
0211   01FF 39                          dad sp
0212   0200 22 54 03                    shld varblit_sp
0213   0203 EB                          xchg
0214   0204 79                          mov a,c
0215   0205 4E                          mov c,m
0216   0206 23                          inx h
0217   0207 46                          mov b,m
0218   0208 23                          inx h
0219   0209 F9                          sphl
0220   020A                     
0221   020A             ;                mov l, c
0222   020A 6F                          mov l,a
0223   020B FE                          .db 0FEh        ; cpi .. , skip pop b
0224   020C             vb_L0:                
0225   020C C1                          pop b       ; c = first column, b = premultiplied jump offset = (16-end) * 5
0226   020D 78                          mov a, b    ; end = 255, 255
0227   020E A1                          ana c
0228   020F FA 53 03                    jm vb_exit
0229   0212                             
0230   0212             varblit_plane   .equ $+1
0231   0212 3E C0                       mvi a, $c0 ; plane msb
0232   0214 81                          add c
0233   0215 67                          mov h, a        ; hl = screen addr
0234   0216             
0235   0216 78                          mov a, b ; b = precalculated offset into vbline_16
0236   0217 32 1B 02                    sta vb_M1+1
0237   021A C3 00 03    vb_M1:          jmp vbline_16
0238   021D             
0239   0300                             .org $100 + $ & $ff00
0240   0300 C1          vbline_16:      pop b \ mov m, c \ inr h \ mov m, b \ inr h
0240   0301 71          
0240   0302 24          
0240   0303 70          
0240   0304 24          
0241   0305 C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0241   0306 71          
0241   0307 24          
0241   0308 70          
0241   0309 24          
0242   030A C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0242   030B 71          
0242   030C 24          
0242   030D 70          
0242   030E 24          
0243   030F C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0243   0310 71          
0243   0311 24          
0243   0312 70          
0243   0313 24          
0244   0314 C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0244   0315 71          
0244   0316 24          
0244   0317 70          
0244   0318 24          
0245   0319 C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0245   031A 71          
0245   031B 24          
0245   031C 70          
0245   031D 24          
0246   031E C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0246   031F 71          
0246   0320 24          
0246   0321 70          
0246   0322 24          
0247   0323 C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0247   0324 71          
0247   0325 24          
0247   0326 70          
0247   0327 24          
0248   0328 C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0248   0329 71          
0248   032A 24          
0248   032B 70          
0248   032C 24          
0249   032D C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0249   032E 71          
0249   032F 24          
0249   0330 70          
0249   0331 24          
0250   0332 C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0250   0333 71          
0250   0334 24          
0250   0335 70          
0250   0336 24          
0251   0337 C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0251   0338 71          
0251   0339 24          
0251   033A 70          
0251   033B 24          
0252   033C C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0252   033D 71          
0252   033E 24          
0252   033F 70          
0252   0340 24          
0253   0341 C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0253   0342 71          
0253   0343 24          
0253   0344 70          
0253   0345 24          
0254   0346 C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0254   0347 71          
0254   0348 24          
0254   0349 70          
0254   034A 24          
0255   034B C1                          pop b \ mov m, c \ inr h \ mov m, b; \ inr h
0255   034C 71          
0255   034D 24          
0255   034E 70          
0256   034F                             
0257   034F             vb_L2:          ; next line
0258   034F 2D                          dcr l
0259   0350             
0260   0350                             ;mvi a, -$73
0261   0350                             ;add l             ; –ø–µ—Ä–µ–¥ —Å—Ç—Ä–æ–∫–æ–π 73 –æ—á–∏—Å—Ç–∏—Ç—å –∫—Ä–∞—è –≤–æ–∫—Ä—É–≥ –±—É–¥—Ç–æ –º–∞—Å–∫–∞
0262   0350                             ;jz troll_clearhook
0263   0350                             ;inr a
0264   0350                             ;jz troll_hook     ; –ø–æ—Å–ª–µ —Å—Ç—Ä–æ–∫–∏ 73 –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –±–µ–ª—ã–π –≥–æ—Ä–∏–∑–æ–Ω—Ç –≤–æ–∫—Ä—É–≥ –ø—Ç–µ—Ä–æ–∏–¥–∞
0265   0350             
0266   0350             vb_L3:
0267   0350 C3 0C 02                    jmp vb_L0
0268   0353             
0269   0353             vb_exit:                
0270   0353             varblit_sp      .equ $+1
0271   0353 31 00 00                    lxi sp, 0
0272   0356 C9                          ret
0273   0357             
0274   0357 00 00       vb_hl:          .dw 0
0275   0359             
0276   0359             
0277   0359             
0278   0359             MakePixTab:        
0279   0359             ;HiAdr - PixTab+0000h
0280   0359                             ;lxi h,PixTab
0281   0359                             ;mvi a,BUTTPLANE
0282   0359 06 20                       mvi b,32
0283   035B             MakePixTab2:
0284   035B 0E 08                       mvi c,8
0285   035D             MakePixTab1:
0286   035D 77                          mov m,a
0287   035E 23                          inx h
0288   035F 0D                          dcr c
0289   0360 C2 5D 03                    jnz MakePixTab1
0290   0363 3C                          inr a
0291   0364 05                          dcr b
0292   0365 C2 5B 03                    jnz MakePixTab2
0293   0368             
0294   0368             ;LeftMask - PixTab+0100h
0295   0368 06 08                       mvi b,8
0296   036A 3E 80                       mvi a,80h
0297   036C 57                          mov d,a
0298   036D             MakePixTab9:
0299   036D 0E 07                       mvi c,7
0300   036F 23                          inx h
0301   0370             MakePixTab8:
0302   0370 77                          mov m,a
0303   0371 0F                          rrc\ ora d
0303   0372 B2          
0304   0373 23                          inx h
0305   0374 0D                          dcr c
0306   0375 C2 70 03                    jnz MakePixTab8
0307   0378 AF                          xra a\ ora d\ rar\ mov d,a
0307   0379 B2          
0307   037A 1F          
0307   037B 57          
0308   037C 05                          dcr b
0309   037D C2 6D 03                    jnz MakePixTab9
0310   0380 2E 00                       mvi l,0
0311   0382 24                          inr h
0312   0383             
0313   0383             ;PixLeft - PixTab+0200h
0314   0383 06 20                       mvi b,32
0315   0385             MakePixTab7:
0316   0385 3E 08                       mvi a,8
0317   0387             MakePixTab6:
0318   0387 77                          mov m,a
0319   0388 23                          inx h
0320   0389 3D                          dcr a
0321   038A C2 87 03                    jnz MakePixTab6
0322   038D 05                          dcr b
0323   038E C2 85 03                    jnz MakePixTab7
0324   0391             
0325   0391             
0326   0391             ;PixMaskLeft - PixTab+0300h
0327   0391 06 20                       mvi b,32
0328   0393             MakePixTab5:
0329   0393 3E FF                       mvi a,255
0330   0395 0E 08                       mvi c,8
0331   0397             MakePixTab4:
0332   0397 77                          mov m,a
0333   0398 B7                          ora a\ rar
0333   0399 1F          
0334   039A 23                          inx h
0335   039B 0D                          dcr c
0336   039C C2 97 03                    jnz MakePixTab4
0337   039F 05                          dcr b
0338   03A0 C2 93 03                    jnz MakePixTab5
0339   03A3 C9                  ret
0340   03A4             
0341   03A4             clrscr:        
0342   03A4 21 00 80            lxi h, $8000
0343   03A7 06 00               mvi b, $0
0344   03A9             clrscrl:        
0345   03A9 70                  mov m, b \ inx h
0345   03AA 23          
0346   03AB 70                  mov m, b \ inx h
0346   03AC 23          
0347   03AD 70                  mov m, b \ inx h
0347   03AE 23          
0348   03AF 70                  mov m, b \ inx h
0348   03B0 23          
0349   03B1 7D                  mov a, l
0350   03B2 B4                  ora h
0351   03B3 C2 A9 03            jnz clrscrl
0352   03B6 C9                  ret
0353   03B7                   
0354   03B7             
0355   03B7 01          songe_enabled: .db 1
0356   03B8             
0357   03B8             ; —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∏–∫—Å–µ–ª—å –≤ –ø–ª–æ—Å–∫–æ—Å—Ç–∏ $80
0358   03B8             ; –≤—Ö–æ–¥:
0359   03B8             ; H - X
0360   03B8             ; L - Y
0361   03B8             setpixel:
0362   03B8                             ;mvi c, $c0
0363   03B8 16 04                       mvi d, PixelMask >> 8
0364   03BA             
0365   03BA 3E 07                       mvi a, 7
0366   03BC A4                          ana h
0367   03BD 5F                          mov e, a
0368   03BE AC                          xra h
0369   03BF 1F                          rar \ rar \ rar
0369   03C0 1F          
0369   03C1 1F          
0370   03C2             setpixel_bp     .equ $+1                
0371   03C2 C6 C0                       adi BUTTPLANE
0372   03C4 67                          mov h, a
0373   03C5             
0374   03C5 1A                          ldax d
0375   03C6 B6                          ora m
0376   03C7 77                          mov m, a
0377   03C8 C9                          ret
0378   03C9             
0379   0400                             .org 400h
0380   0400             PixelMask:
0381   0400 80                          .db 10000000b
0382   0401 40                          .db 01000000b
0383   0402 20                          .db 00100000b
0384   0403 10                          .db 00010000b
0385   0404 08                          .db 00001000b
0386   0405 04                          .db 00000100b
0387   0406 02                          .db 00000010b
0388   0407 01                          .db 00000001b
0389   0408                     
0390   0408             RightOrMask:
0391   0408 00                          .db 00000000b
0392   0409 80                          .db 10000000b
0393   040A C0                          .db 11000000b
0394   040B E0                          .db 11100000b
0395   040C F0                          .db 11110000b
0396   040D F8                          .db 11111000b
0397   040E FC                          .db 11111100b
0398   040F FE                          .db 11111110b
0399   0410             
0400   0410             RightAndMask:
0401   0410 FF                          .db 11111111b
0402   0411 7F                          .db 01111111b
0403   0412 3F                          .db 00111111b
0404   0413 1F                          .db 00011111b
0405   0414 0F                          .db 00001111b
0406   0415 07                          .db 00000111b
0407   0416 03                          .db 00000011b
0408   0417 01                          .db 00000001b
0409   0418             
0410   0418             
0411   0418 05 46       y1x1:   .db 5, 70
0412   041A C8 05       y2x2:   .db 200, 5
0413   041C             ;xinc:   .dw 0    
0414   041C             ;ydir:   .db 0
0415   041C             ;line_h: .db 0
0416   041C             ;line_y: .db 0
0417   041C                     ; x1,y1 - x2,y2
0418   041C                     ; vert increment always +1, horz increment variable
0419   041C             line:
0420   041C 2A 18 04            lhld y1x1
0421   041F EB                  xchg
0422   0420 2A 1A 04            lhld y2x2
0423   0423                     ; swap so that y2 - y1 is positive
0424   0423 7D                  mov a, l
0425   0424 93                  sub e           ; a = y2 - y1
0426   0425 C8                  rz      ; dy = 0, nothing to do
0427   0426 D2 32 04            jnc line_2
0428   0429 22 18 04            shld y1x1
0429   042C EB                  xchg
0430   042D 22 1A 04            shld y2x2
0431   0430 7D                  mov a, l
0432   0431 93                  sub e           ; a = y2 - y1
0433   0432                     
0434   0432             line_2:
0435   0432 32 5D 04            sta line_h      ; height = y2 - y1
0436   0435             
0437   0435 7B                          mov a,e
0438   0436 32 70 04            sta line_y        ; line_y = y1
0439   0439             
0440   0439 7C                  mov a, h
0441   043A BA                  cmp d           ; x2 - x1
0442   043B D2 48 04            jnc line_xplus
0443   043E             line_xminus:
0444   043E 3E 37               mvi a, $37 ; stc
0445   0440 32 62 04            sta line_xsgn
0446   0443                     
0447   0443                     ; xinc = ((x1 - x2) << 7) / dy, negate after division
0448   0443 7A                  mov a, d
0449   0444 94                  sub h   ; a = x1 - x2
0450   0445 C3 4F 04            jmp line_shl7
0451   0448             line_xplus:
0452   0448                     ; positive xinc = ((x2 - x1) << 7) / dy
0453   0448 3E B7               mvi a, $b7 ; ora a
0454   044A 32 62 04            sta line_xsgn
0455   044D                     
0456   044D 7C                  mov a, h
0457   044E 92                  sub d   ; a = x2 - x1
0458   044F             line_shl7:        
0459   044F 1F                  rar     ; a = a >> 1
0460   0450 32 50 05            sta xinc+1
0461   0453 3E 00               mvi a, 0
0462   0455 1F                  rar
0463   0456 32 4F 05            sta xinc
0464   0459             
0465   0459             line_3:
0466   0459                     ; xinc = xinc / dy
0467   0459 2A 4F 05            lhld xinc
0468   045C             line_h  .equ $+1
0469   045C 0E 00                       mvi c,0
0470   045E AF                  xra a
0471   045F CD 7B 08            call udiv16248  ; hl = ahl/c
0472   0462             ;        xchg            ; -> de
0473   0462                     
0474   0462             line_xsgn:        
0475   0462 B7                  ora a ; ORA A = positive xinc | STC = negative xinc
0476   0463 D2 6C 04            jnc line_ldx1
0477   0466             line_negxing:
0478   0466                     ; xinc = -xinc
0479   0466 AF                          xra a\ sub l\ mov l,a
0479   0467 95          
0479   0468 6F          
0480   0469 9C                          sbb h\ sub l\ mov h,a
0480   046A 95          
0480   046B 67          
0481   046C                     
0482   046C             line_ldx1:
0483   046C 22 4F 05            shld xinc
0484   046F                             
0485   046F                     ; main loop
0486   046F             ;        call setbounds_setup
0487   046F             ;setbounds_setup:
0488   046F             line_y  .equ $+1
0489   046F 01 00 00            lxi b,0
0490   0472 60                  mov h,b
0491   0473 69                  mov l,c
0492   0474 09                  dad b
0493   0475 09                  dad b
0494   0476 29                  dad h
0495   0477 09                  dad b
0496   0478 EB                  xchg
0497   0479 2A 95 0A            lhld bounds
0498   047C 19                  dad d           ; hl = &bounds[y][0]
0499   047D             ;        shld setbounds_ptr
0500   047D EB                  xchg
0501   047E             
0502   047E 3A 19 04            lda y1x1+1      ; x1
0503   0481 B7                  ora a
0504   0482 1F                  rar
0505   0483 67                  mov h, a
0506   0484 3E 00               mvi a, 0
0507   0486 1F                  rar
0508   0487 6F                  mov l, a        ; hl = x1 << 7
0509   0488                             
0510   0488             line_4:        
0511   0488                     ; d = y, hl = x << 7
0512   0488             line_putpixel:
0513   0488 E5                  push h
0514   0489 29                  dad h \ mov a, h ; a = floor(x)
0514   048A 7C          
0515   048B                     
0516   048B                     ;push d \ push h \ push b \ push psw
0517   048B                     ;mov h, a
0518   048B                     ;call setpixel ; h=x, l=y
0519   048B                     ;pop psw \ pop b \ pop h \ pop d
0520   048B                           
0521   048B             ;        call setbounds
0522   048B                     ; insert coordinate a to bounds[l][0], maintain ascending order
0523   048B             setbounds:
0524   048B 21 07 00            lxi h, NBOUNDS
0525   048E 19                  dad d
0526   048F             ;                                   ; 20+4+12+12+20=68
0527   048F                                                                                             ; hl = &bounds[y][7]
0528   048F EB                  xchg
0529   0490 BE                  cmp m   ; bounds[i] - x, x < bounds[i] if no carry
0530   0491 D2 CD 04            jnc sbins_k1     ; if x >= bounds[k] -> next k
0531   0494                     ;x<bounds[0]
0532   0494 46                  mov b,m
0533   0495 77                  mov m,a
0534   0496 04                  inr b
0535   0497 CA 49 05            jz after_setbounds                              ; if 255 == bounds[k] bounds[k] = x, return
0536   049A                     ; else insert
0537   049A 05                  dcr b
0538   049B 23                  inx h\ inx h\ inx h\ inx h              ; hl = &bounds[y][4]
0538   049C 23          
0538   049D 23          
0538   049E 23          
0539   049F 3E FF               mvi a,255
0540   04A1                     
0541   04A1                     ; scan empty space before committing to memmove
0542   04A1                     ;k = 4 
0543   04A1 BE                  cmp m \ jnz insx44 \ dcx h     ; --> 348088 ( -1260)
0543   04A2 C2 B7 04    
0543   04A5 2B          
0544   04A6 BE                  cmp m \ jnz insx43 \ dcx h
0544   04A7 C2 BC 04    
0544   04AA 2B          
0545   04AB BE                  cmp m \ jnz insx42 \ dcx h
0545   04AC C2 C1 04    
0545   04AF 2B          
0546   04B0             ;       cmp m \ jnz insx41
0547   04B0             ;       mov m,b
0548   04B0 BE                  cmp m\ jz after_setbounds_
0548   04B1 CA 48 05    
0549   04B4 C3 C6 04            jmp insx41
0550   04B7                             
0551   04B7 7E          insx44: mov a,m \ inx h \ mov m,a \ dcx h \ dcx h ; k = 4, d[k+1] = d[k], k = 3
0551   04B8 23          
0551   04B9 77          
0551   04BA 2B          
0551   04BB 2B          
0552   04BC 7E          insx43: mov a,m \ inx h \ mov m,a \ dcx h \ dcx h ; k = 3, d[k+1] = d[k], k = 2
0552   04BD 23          
0552   04BE 77          
0552   04BF 2B          
0552   04C0 2B          
0553   04C1 7E          insx42: mov a,m \ inx h \ mov m,a \ dcx h \ dcx h ; k = 2, d[k+1] = d[k], k = 1
0553   04C2 23          
0553   04C3 77          
0553   04C4 2B          
0553   04C5 2B          
0554   04C6 7E          insx41: mov a,m \ mov m,b\ inx h \ mov m,a ; k = 1, d[k+1] = d[k], k = 0
0554   04C7 70          
0554   04C8 23          
0554   04C9 77          
0555   04CA                     ; k = 0, d[k+1] = d[k], k = 1
0556   04CA C3 49 05            jmp after_setbounds
0557   04CD                     
0558   04CD             sbins_k1:
0559   04CD 23                  inx h
0560   04CE BE                  cmp m   ; bounds[i] - x, x < bounds[i] if no carry
0561   04CF D2 00 05            jnc sbins_k2     ; if x >= bounds[k] -> next k
0562   04D2 46                  mov b,m
0563   04D3 77                  mov m,a
0564   04D4 04                  inr b
0565   04D5 CA 49 05            jz after_setbounds                              ; if 255 == bounds[k] bounds[k] = x, return
0566   04D8                     ; else insert
0567   04D8 05                  dcr b
0568   04D9 23                  inx h\ inx h\ inx h             ; hl = &bounds[y][4]
0568   04DA 23          
0568   04DB 23          
0569   04DC 3E FF               mvi a,255
0570   04DE                     
0571   04DE                     ; scan empty space before committing to memmove
0572   04DE                     ;k = 4 
0573   04DE BE                  cmp m \ jnz insx34 \ dcx h     ; -> 347784 ( -304)
0573   04DF C2 EF 04    
0573   04E2 2B          
0574   04E3 BE                  cmp m \ jnz insx33 \ dcx h
0574   04E4 C2 F4 04    
0574   04E7 2B          
0575   04E8             ;        cmp m \ jnz insx32
0576   04E8             ;               mov m,b
0577   04E8 BE                  cmp m\ jz after_setbounds_
0577   04E9 CA 48 05    
0578   04EC C3 F9 04            jmp insx32
0579   04EF                     
0580   04EF 7E          insx34: mov a,m \ inx h \ mov m,a \ dcx h \ dcx h ; k = 4, d[k+1] = d[k], k = 3
0580   04F0 23          
0580   04F1 77          
0580   04F2 2B          
0580   04F3 2B          
0581   04F4 7E          insx33: mov a,m \ inx h \ mov m,a \ dcx h \ dcx h ; k = 3, d[k+1] = d[k], k = 2
0581   04F5 23          
0581   04F6 77          
0581   04F7 2B          
0581   04F8 2B          
0582   04F9 7E          insx32: mov a,m \ mov m,b\ inx h \ mov m,a ; k = 2, d[k+1] = d[k], k = 1
0582   04FA 70          
0582   04FB 23          
0582   04FC 77          
0583   04FD C3 49 05            jmp after_setbounds
0584   0500                     
0585   0500             sbins_k2:        
0586   0500 23                  inx h
0587   0501 BE                  cmp m
0588   0502 D2 17 05            jnc sbins_k3     ; if x >= bounds[k] -> next k
0589   0505 46                  mov b,m
0590   0506 77                  mov m,a
0591   0507 04                  inr b
0592   0508 CA 49 05            jz after_setbounds                       ; if 255 == bounds[k] bounds[k] = x, return
0593   050B                     ; else insert
0594   050B 05                  dcr b
0595   050C                     ;k = 2
0596   050C 23                  inx h                 ; k = 2, d[k+1] = d[k], k = 3
0597   050D 7E                  mov a,m \ mov m,b\ inx h                 ; k = 3, d[k+1] = d[k], k = 4
0597   050E 70          
0597   050F 23          
0598   0510 46                  mov b,m \ mov m,a\ inx h \ mov m,b                 ; k = 4, d[k+1] = d[k], k = 5
0598   0511 77          
0598   0512 23          
0598   0513 70          
0599   0514 C3 49 05            jmp after_setbounds
0600   0517                     
0601   0517             sbins_k3:        
0602   0517 23                  inx h
0603   0518 BE                  cmp m
0604   0519 D2 2B 05            jnc sbins_k4     ; if x >= bounds[k] -> next k
0605   051C 46                  mov b,m
0606   051D 77                  mov m,a
0607   051E 04                  inr b
0608   051F CA 49 05            jz after_setbounds                       ; if 255 == bounds[k] bounds[k] = x, return
0609   0522                     ; else insert
0610   0522 05                  dcr b
0611   0523                     ;k = 3
0612   0523 23                  inx h                 ; k = 3, d[k+1] = d[k], k = 4
0613   0524 7E                  mov a,m \ mov m,b\ inx h \ mov m,a                 ; k = 4, d[k+1] = d[k], k = 5
0613   0525 70          
0613   0526 23          
0613   0527 77          
0614   0528 C3 49 05            jmp after_setbounds
0615   052B                     
0616   052B             
0617   052B             sbins_k4:
0618   052B 23                  inx h
0619   052C BE                  cmp m
0620   052D D2 3C 05            jnc sbins_k5     ; if x >= bounds[k] -> next k
0621   0530 46                  mov b,m
0622   0531 77                  mov m,a
0623   0532 04                  inr b
0624   0533 CA 49 05            jz after_setbounds                       ; if 255 == bounds[k] bounds[k] = x, return
0625   0536                     ; else insert
0626   0536 05                  dcr b
0627   0537                     ;k = 4 
0628   0537 23                  inx h \ mov m,b                 ; k = 4, d[k+1] = d[k], k = 5
0628   0538 70          
0629   0539 C3 49 05            jmp after_setbounds
0630   053C             
0631   053C             sbins_k5:
0632   053C 23                  inx h
0633   053D BE                  cmp m
0634   053E D2 49 05            jnc after_setbounds      ; if x >= bounds[k] -> return
0635   0541 46                  mov b,m
0636   0542 04                  inr b
0637   0543 C2 49 05            jnz after_setbounds         ; if 255 == bounds[k] bounds[k] = x, return
0638   0546 77                  mov m, a
0639   0547             
0640   0547 FE                  .db 0FEh                                ;cpi ...
0641   0548             after_setbounds_:
0642   0548 70                  mov m,b
0643   0549             after_setbounds:
0644   0549 21 5D 04            lxi h,line_h
0645   054C 35                  dcr m
0646   054D E1                  pop h
0647   054E             xinc    .equ $+1
0648   054E 01 00 00            lxi b,0
0649   0551 09                  dad b   ; x += xinc
0650   0552             line_nexty:
0651   0552 C2 88 04            jnz line_4
0652   0555 C9                  ret
0653   0556                     
0654   0556                     ; double-buffa
0655   0556                     ; frame & 1 == 0:
0656   0556                     ;    bounds, bounds_b = bounds_1, bounds_2
0657   0556                     ; frame & 1 == 1:
0658   0556                     ;    bounds, bounds_b = bounds_3, bounds_4
0659   0556             next_bounds:
0660   0556                     ; swap a/b
0661   0556 2A 95 0A            lhld bounds
0662   0559 EB                  xchg
0663   055A 2A 97 0A            lhld bounds_b
0664   055D 22 95 0A            shld bounds
0665   0560 EB                  xchg
0666   0561 22 97 0A            shld bounds_b
0667   0564             
0668   0564 3A E3 38            lda frame_no
0669   0567 1F                  rar
0670   0568 DA A6 05            jc nb_bbb
0671   056B                     
0672   056B                     ;lxi h, pal_a
0673   056B 2A F5 38            lhld pal_a_ptr
0674   056E 22 36 09            shld setpal_select
0675   0571             
0676   0571 2A 95 0A            lhld bounds
0677   0574 22 99 0A            shld bounds1
0678   0577 2A 97 0A            lhld bounds_b
0679   057A 22 9B 0A            shld bounds1_b
0680   057D 2A 9D 0A            lhld bounds2
0681   0580 22 95 0A            shld bounds
0682   0583 2A 9F 0A            lhld bounds2_b
0683   0586 22 97 0A            shld bounds_b
0684   0589                     
0685   0589 3E C0               mvi a, BUTTPLANE_A
0686   058B 32 C3 03            sta setpixel_bp
0687   058E 3E 78               mvi a, PixTabA >> 8
0688   0590 32 B3 07            sta hline_pixtab_plus_0
0689   0593 32 1F 08            sta hwipe_pixtab_plus_0
0690   0596 C6 02               adi 2
0691   0598 32 B0 07            sta hline_pixtab_plus_2
0692   059B 32 1C 08            sta hwipe_pixtab_plus_2
0693   059E 3C                  inr a
0694   059F 32 BA 07            sta hline_pixtab_plus_3
0695   05A2 32 BA 07            sta hline_pixtab_plus_3
0696   05A5             
0697   05A5 C9                  ret
0698   05A6                     
0699   05A6             nb_bbb:
0700   05A6 2A 95 0A            lhld bounds
0701   05A9 22 9D 0A            shld bounds2
0702   05AC 2A 97 0A            lhld bounds_b
0703   05AF 22 9F 0A            shld bounds2_b
0704   05B2 2A 99 0A            lhld bounds1
0705   05B5 22 95 0A            shld bounds
0706   05B8 2A 9B 0A            lhld bounds1_b
0707   05BB 22 97 0A            shld bounds_b
0708   05BE                     
0709   05BE                     ;lxi h, pal_b
0710   05BE 2A F7 38            lhld pal_b_ptr
0711   05C1 22 36 09            shld setpal_select
0712   05C4             
0713   05C4 3E E0               mvi a, BUTTPLANE_B
0714   05C6 32 C3 03            sta setpixel_bp
0715   05C9 3E 7C               mvi a, PixTabB >> 8
0716   05CB 32 B3 07            sta hline_pixtab_plus_0
0717   05CE 32 1F 08            sta hwipe_pixtab_plus_0
0718   05D1 C6 02               adi 2
0719   05D3 32 B0 07            sta hline_pixtab_plus_2
0720   05D6 32 1C 08            sta hwipe_pixtab_plus_2
0721   05D9 3C                  inr a
0722   05DA 32 BA 07            sta hline_pixtab_plus_3
0723   05DD 32 BA 07            sta hline_pixtab_plus_3
0724   05E0             
0725   05E0 C9                  ret     ; bounds are cleared on read
0726   05E1                     
0727   05E1                     ; quick wipe array in hl backwards c * 32 bytes
0728   05E1             clear_array_backwards:
0729   05E1 EB                  xchg
0730   05E2                     
0731   05E2 21 00 00            lxi h, 0
0732   05E5 39                  dad sp
0733   05E6 22 1A 06            shld clrbounds_sp
0734   05E9             ;        di
0735   05E9 EB                  xchg
0736   05EA F9                  sphl    ; sp = bounds_b + $600
0737   05EB 3D                  dcr a
0738   05EC CA 03 06            jz clrbounds_final
0739   05EF             clrbounds_pushkin:        
0740   05EF C5                  push b \ push b \ push b \ push b       ; 32 bytes
0740   05F0 C5          
0740   05F1 C5          
0740   05F2 C5          
0741   05F3 C5                  push b \ push b \ push b \ push b
0741   05F4 C5          
0741   05F5 C5          
0741   05F6 C5          
0742   05F7 C5                  push b \ push b \ push b \ push b
0742   05F8 C5          
0742   05F9 C5          
0742   05FA C5          
0743   05FB C5                  push b \ push b \ push b \ push b
0743   05FC C5          
0743   05FD C5          
0743   05FE C5          
0744   05FF 3D                  dcr a
0745   0600 C2 EF 05            jnz clrbounds_pushkin
0746   0603             clrbounds_final:
0747   0603 C5                  push b \ push b \ push b \ push b       ; 30+2 bytes
0747   0604 C5          
0747   0605 C5          
0747   0606 C5          
0748   0607 C5                  push b \ push b \ push b \ push b
0748   0608 C5          
0748   0609 C5          
0748   060A C5          
0749   060B C5                  push b \ push b \ push b \ push b
0749   060C C5          
0749   060D C5          
0749   060E C5          
0750   060F C5                  push b \ push b \ push b
0750   0610 C5          
0750   0611 C5          
0751   0612 21 FF FF            lxi h,-1
0752   0615 39                  dad sp
0753   0616 70                  mov m,b
0754   0617 2B                  dcx h
0755   0618 71                  mov m,c
0756   0619             clrbounds_sp    .equ $+1
0757   0619 31 00 00            lxi sp, 0
0758   061C             ;        ei
0759   061C C9                  ret
0760   061D                     
0761   061D             oneframe:
0762   061D CD 56 05            call next_bounds
0763   0620 3A E2 38            lda frametime
0764   0623 AF                  xra a
0765   0624 32 E2 38            sta frametime
0766   0627                     
0767   0627 CD 3A 06            call transform_geometry
0768   062A CD 15 07            call draw_geometry
0769   062D CD 4F 07            call fill_bounds
0770   0630 21 E3 38            lxi h, frame_no
0771   0633 34                  inr m
0772   0634 7E                  mov a, m
0773   0635 32 E4 38            sta anim_pos
0774   0638             
0775   0638                     ;for benchmark
0776   0638 C0                  rnz 
0777   0639             
0778   0639 C9                  ret
0779   063A                             
0780   063A             transform_geometry:
0781   063A                     ; in the future, the geometry will be transformed
0782   063A                     ; 12.05.2025 the future is now
0783   063A 3A E4 38            lda anim_pos; frame_no
0784   063D 32 22 29            sta rotx
0785   0640 47                  mov b, a
0786   0641 87                  add a
0787   0642 32 23 29            sta roty
0788   0645 80                  add b
0789   0646 32 24 29            sta rotz
0790   0649 CD 3D 28            call rotmatrix
0791   064C CD 34 27            call calc_projection
0792   064F                     ; prepare data for draw_geometry: 
0793   064F                     ;   4, xy1 xy2 xy3 xy4 xy1 [5]
0794   064F                     ;   8, xy1...xy8 xy1 [9]
0795   064F                     ;   8, xy1...xy8 xy1 [9]
0796   064F                     ;   0
0797   064F 11 13 28            lxi d, points_proj      ; raw array of x,y
0798   0652 21 01 27            lxi h, ngon1            ; formatted ngon data for draw_geometry
0799   0655 36 04               mvi m, 4 \ inx h
0799   0657 23          
0800   0658 1A                    ldax d \ mov c, a \ inx d \ mov m, a \ inx h
0800   0659 4F          
0800   065A 13          
0800   065B 77          
0800   065C 23          
0801   065D 1A                    ldax d \ mov b, a \ inx d \ mov m, a \ inx h
0801   065E 47          
0801   065F 13          
0801   0660 77          
0801   0661 23          
0802   0662 1A                    ldax d \ inx d \ mov m, a \ inx h
0802   0663 13          
0802   0664 77          
0802   0665 23          
0803   0666 1A                    ldax d \ inx d \ mov m, a \ inx h
0803   0667 13          
0803   0668 77          
0803   0669 23          
0804   066A 1A                    ldax d \ inx d \ mov m, a \ inx h
0804   066B 13          
0804   066C 77          
0804   066D 23          
0805   066E 1A                    ldax d \ inx d \ mov m, a \ inx h
0805   066F 13          
0805   0670 77          
0805   0671 23          
0806   0672 1A                    ldax d \ inx d \ mov m, a \ inx h
0806   0673 13          
0806   0674 77          
0806   0675 23          
0807   0676 1A                    ldax d \ inx d \ mov m, a \ inx h
0807   0677 13          
0807   0678 77          
0807   0679 23          
0808   067A 71                    mov m, c \ inx h \ mov m, b \ inx h
0808   067B 23          
0808   067C 70          
0808   067D 23          
0809   067E                       
0810   067E 36 08               mvi m, 8 \ inx h  
0810   0680 23          
0811   0681 1A                    ldax d \ mov c, a \ inx d \ mov m, a \ inx h
0811   0682 4F          
0811   0683 13          
0811   0684 77          
0811   0685 23          
0812   0686 1A                    ldax d \ mov b, a \ inx d \ mov m, a \ inx h
0812   0687 47          
0812   0688 13          
0812   0689 77          
0812   068A 23          
0813   068B 1A                    ldax d \ inx d \ mov m, a \ inx h
0813   068C 13          
0813   068D 77          
0813   068E 23          
0814   068F 1A                    ldax d \ inx d \ mov m, a \ inx h
0814   0690 13          
0814   0691 77          
0814   0692 23          
0815   0693 1A                    ldax d \ inx d \ mov m, a \ inx h
0815   0694 13          
0815   0695 77          
0815   0696 23          
0816   0697 1A                    ldax d \ inx d \ mov m, a \ inx h
0816   0698 13          
0816   0699 77          
0816   069A 23          
0817   069B 1A                    ldax d \ inx d \ mov m, a \ inx h
0817   069C 13          
0817   069D 77          
0817   069E 23          
0818   069F 1A                    ldax d \ inx d \ mov m, a \ inx h
0818   06A0 13          
0818   06A1 77          
0818   06A2 23          
0819   06A3 1A                    ldax d \ inx d \ mov m, a \ inx h
0819   06A4 13          
0819   06A5 77          
0819   06A6 23          
0820   06A7 1A                    ldax d \ inx d \ mov m, a \ inx h
0820   06A8 13          
0820   06A9 77          
0820   06AA 23          
0821   06AB 1A                    ldax d \ inx d \ mov m, a \ inx h
0821   06AC 13          
0821   06AD 77          
0821   06AE 23          
0822   06AF 1A                    ldax d \ inx d \ mov m, a \ inx h
0822   06B0 13          
0822   06B1 77          
0822   06B2 23          
0823   06B3 1A                    ldax d \ inx d \ mov m, a \ inx h
0823   06B4 13          
0823   06B5 77          
0823   06B6 23          
0824   06B7 1A                    ldax d \ inx d \ mov m, a \ inx h
0824   06B8 13          
0824   06B9 77          
0824   06BA 23          
0825   06BB 1A                    ldax d \ inx d \ mov m, a \ inx h
0825   06BC 13          
0825   06BD 77          
0825   06BE 23          
0826   06BF 1A                    ldax d \ inx d \ mov m, a \ inx h
0826   06C0 13          
0826   06C1 77          
0826   06C2 23          
0827   06C3 71                    mov m, c \ inx h \ mov m, b \ inx h
0827   06C4 23          
0827   06C5 70          
0827   06C6 23          
0828   06C7             
0829   06C7 36 08               mvi m, 8 \ inx h  
0829   06C9 23          
0830   06CA 1A                    ldax d \ mov c, a \ inx d \ mov m, a \ inx h
0830   06CB 4F          
0830   06CC 13          
0830   06CD 77          
0830   06CE 23          
0831   06CF 1A                    ldax d \ mov b, a \ inx d \ mov m, a \ inx h
0831   06D0 47          
0831   06D1 13          
0831   06D2 77          
0831   06D3 23          
0832   06D4 1A                    ldax d \ inx d \ mov m, a \ inx h
0832   06D5 13          
0832   06D6 77          
0832   06D7 23          
0833   06D8 1A                    ldax d \ inx d \ mov m, a \ inx h
0833   06D9 13          
0833   06DA 77          
0833   06DB 23          
0834   06DC 1A                    ldax d \ inx d \ mov m, a \ inx h
0834   06DD 13          
0834   06DE 77          
0834   06DF 23          
0835   06E0 1A                    ldax d \ inx d \ mov m, a \ inx h
0835   06E1 13          
0835   06E2 77          
0835   06E3 23          
0836   06E4 1A                    ldax d \ inx d \ mov m, a \ inx h
0836   06E5 13          
0836   06E6 77          
0836   06E7 23          
0837   06E8 1A                    ldax d \ inx d \ mov m, a \ inx h
0837   06E9 13          
0837   06EA 77          
0837   06EB 23          
0838   06EC 1A                    ldax d \ inx d \ mov m, a \ inx h
0838   06ED 13          
0838   06EE 77          
0838   06EF 23          
0839   06F0 1A                    ldax d \ inx d \ mov m, a \ inx h
0839   06F1 13          
0839   06F2 77          
0839   06F3 23          
0840   06F4 1A                    ldax d \ inx d \ mov m, a \ inx h
0840   06F5 13          
0840   06F6 77          
0840   06F7 23          
0841   06F8 1A                    ldax d \ inx d \ mov m, a \ inx h
0841   06F9 13          
0841   06FA 77          
0841   06FB 23          
0842   06FC 1A                    ldax d \ inx d \ mov m, a \ inx h
0842   06FD 13          
0842   06FE 77          
0842   06FF 23          
0843   0700 1A                    ldax d \ inx d \ mov m, a \ inx h
0843   0701 13          
0843   0702 77          
0843   0703 23          
0844   0704 1A                    ldax d \ inx d \ mov m, a \ inx h
0844   0705 13          
0844   0706 77          
0844   0707 23          
0845   0708 1A                    ldax d \ inx d \ mov m, a \ inx h
0845   0709 13          
0845   070A 77          
0845   070B 23          
0846   070C 71                    mov m, c \ inx h \ mov m, b \ inx h
0846   070D 23          
0846   070E 70          
0846   070F 23          
0847   0710 36 00               mvi m, 0
0848   0712 C9                  ret
0849   0713                             
0850   0713                             
0851   0713 01 27       geometry_ptr:      .dw ngon_start
0852   0715             
0853   0715             draw_geometry:
0854   0715                     ; contour 1
0855   0715 2A 13 07            lhld geometry_ptr
0856   0718                     
0857   0718                     ; check if geometry available and die
0858   0718 7E                  mov a, m
0859   0719 B7                  ora a
0860   071A C2 23 07            jnz dg_next_ngon
0861   071D                     
0862   071D 21 01 27            lxi h, ngon_start
0863   0720 22 13 07            shld geometry_ptr
0864   0723             
0865   0723             dg_next_ngon:
0866   0723 7E                  mov a, m        ; line count
0867   0724 B7                  ora a
0868   0725 23                  inx h
0869   0726 C2 2D 07            jnz dg_line
0870   0729 22 13 07            shld geometry_ptr
0871   072C C9                  ret
0872   072D                     
0873   072D                     
0874   072D             dg_line:        
0875   072D 56                  mov d, m \ inx h \ mov e, m \ inx h
0875   072E 23          
0875   072F 5E          
0875   0730 23          
0876   0731 EB                  xchg
0877   0732 22 18 04            shld y1x1
0878   0735 EB                  xchg
0879   0736 56                  mov d, m \ inx h \ mov e, m \ inx h
0879   0737 23          
0879   0738 5E          
0879   0739 23          
0880   073A EB                  xchg
0881   073B 22 1A 04            shld y2x2
0882   073E EB                  xchg
0883   073F                     
0884   073F F5                  push psw
0885   0740 E5                  push h
0886   0741 CD 1C 04            call line
0887   0744 E1                  pop h
0888   0745 F1                  pop psw
0889   0746                     
0890   0746 3D                  dcr a
0891   0747 CA 23 07            jz dg_next_ngon
0892   074A 2B                  dcx h \ dcx h
0892   074B 2B          
0893   074C C3 2D 07            jmp dg_line
0894   074F                     ;;
0895   074F             
0896   074F             ;         ; loop continue without push/pop
0897   074F             ; fb_bounds_loop_cont:
0898   074F             ;         lxi b, NBOUNDS
0899   074F             ;         dad b
0900   074F             ;         xchg
0901   074F             ;         dad b
0902   074F             ;         xchg
0903   074F             ;         jmp fb_bounds_loop_nexty
0904   074F             
0905   074F             
0906   074F             fill_bounds:
0907   074F 2A 97 0A            lhld bounds_b
0908   0752 EB                  xchg
0909   0753 2A 95 0A            lhld bounds     ; hl = &bounds[0]       -- draw
0910   0756                                     ; de = &bounds_b[0]     -- wipe (normalized and sorted on previous step)
0911   0756                     
0912   0756 3E FF               mvi a, 255      ; current line, y
0913   0758 32 72 08            sta fb_y
0914   075B             fb_lines_loop:
0915   075B                     ; if [hl] == 255 && [de] == 255 continue to the next line
0916   075B 1A                  ldax d
0917   075C A6                  ana m
0918   075D 3C                  inr a
0919   075E CA 6A 08            jz fb_bounds_loop_cont
0920   0761             
0921   0761 E5                  push h
0922   0762 D5                  push d
0923   0763             
0924   0763 AF                  xra a
0925   0764 32 9C 07            sta fb_state
0926   0767 32 71 07            sta fb_next
0927   076A C3 75 07            jmp fb_bounds_loop
0928   076D             
0929   076D                     ; when the state is advanced without draw or wipe
0930   076D             fb_nextstate:
0931   076D             ;        lda fb_state - –ª–∏—à–Ω—è—è –∫–æ–º–∞–Ω–¥–∞
0932   076D 32 FB 07            sta fb_prev
0933   0770             ;        lda fb_next
0934   0770             fb_next .equ $+1
0935   0770 3E 00                       mvi a,0
0936   0772 32 9C 07            sta fb_state    ; 16+8+16=40
0937   0775             
0938   0775                     ;; inner loop that iterates max 6 + 6 bounds
0939   0775             fb_bounds_loop:   
0940   0775                     ; x1 = x2
0941   0775 41                  mov b, c
0942   0776                     
0943   0776 1A                  ldax d          ; a = xb[ib]
0944   0777             ;        cpi 255
0945   0777             ;        jz fb_if_else   ; if xbib == 255...
0946   0777                    
0947   0777                     ; if actr == 0 || x2 < xa[ia]
0948   0777 BE                  cmp m           ; xb - xa
0949   0778 D2 8B 07            jnc fb_if_else
0950   077B 4F                  mov c, a
0951   077C             ;fb_sel_xb:
0952   077C             
0953   077C 3A 71 07            lda fb_next
0954   077F EE 40               xri $40         ; next_b = !state_b
0955   0781 32 71 07            sta fb_next
0956   0784                     
0957   0784                     ;# expermimental wipe on read
0958   0784 3E FF               mvi a, 255
0959   0786 12                  stax d
0960   0787                     ;#
0961   0787                     
0962   0787 13                  inx d           ; ++ib          
0963   0788                             
0964   0788             ;               cmp c
0965   0788             ;        jnz fb_if_done
0966   0788             ;               jmp fb_bounds_loop_break        ;–∑–¥–µ—Å—å –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, —Ç.–∫. –≤ —ç—Ç—É –≤–µ—Ç–∫—É –Ω–µ –º–æ–∂–µ–º –ø–æ–ø–∞—Å—Ç—å –ø—Ä–∏ xb[ib]=255
0967   0788             
0968   0788 C3 9B 07                    jmp fb_if_done
0969   078B             
0970   078B             fb_if_else:
0971   078B 4E                  mov c, m
0972   078C             ;fb_if_done:
0973   078C                     ; if x2 == 255 break
0974   078C 3E FF               mvi a,255
0975   078E B9                  cmp c
0976   078F CA 68 08            jz fb_bounds_loop_break
0977   0792 23                  inx h
0978   0793 3A 71 07            lda fb_next
0979   0796 EE 80               xri $80         ; next_a = !state_a
0980   0798 32 71 07            sta fb_next
0981   079B                     
0982   079B                     ; if (state_a ^ state_b == 0)
0983   079B                     
0984   079B             fb_if_done:
0985   079B             ;        lda fb_state
0986   079B             fb_state .equ $+1
0987   079B 3E 00               mvi a,0
0988   079D B7                  ora a           ; $00 -> Z=1                    -> continue
0989   079E                                     ; $80 -> Z=0, S=1, P=0          -> A (fill)
0990   079E                                     ; $C0 -> Z=0, S=1, P=1          -> continue
0991   079E                                     ; $40 -> Z=0, S=0, P=0          -> B (wipe)
0992   079E             ;        jz fb_nextstate ; !state_a & !state_b
0993   079E EA 6D 07            jpe fb_nextstate
0994   07A1             ;        jm fb_fillline
0995   07A1             ;        jmp fb_wipeline
0996   07A1 F2 FA 07            jp fb_wipeline
0997   07A4                     
0998   07A4             fb_fillline:        
0999   07A4                     ; this.hfill(x1, x2, y, INK);
1000   07A4                     ; a = y
1001   07A4                     ; b = x1, c = x2
1002   07A4 D5                  push d
1003   07A5 E5                  push h
1004   07A6 3A 72 08            lda fb_y
1005   07A9             
1006   07A9             ;        call hline_xy
1007   07A9                     ;; fast fill horizontal segment
1008   07A9                     ;; a = y
1009   07A9                     ;; b = x1, c = x2
1010   07A9             ;hline_xy:           
1011   07A9 5F                  mov e, a
1012   07AA 68                  mov l,b
1013   07AB                     ; c - b = count
1014   07AB 79                  mov a, c
1015   07AC 90                  sub b
1016   07AD 3C                  inr a
1017   07AE 47                  mov b, a
1018   07AF             hline_pixtab_plus_2 .equ $+1            
1019   07AF 26 7A               mvi h,(PixTabA>>8)+2
1020   07B1 96                  sub m
1021   07B2             hline_pixtab_plus_0 .equ $+1            
1022   07B2 26 78               mvi h,(PixTabA>>8)
1023   07B4 56                  mov d,m                         ;HiAdr
1024   07B5             ;       jnc hline_xy_LeftBlock
1025   07B5 DA DD 07            jc hline_xy_LeftBlock
1026   07B8                             
1027   07B8 47                  mov b,a
1028   07B9             hline_pixtab_plus_3 .equ $+1            
1029   07B9 26 7B               mvi h,(PixTabA>>8)+3
1030   07BB 7E                  mov a,m
1031   07BC EB                  xchg
1032   07BD B6                  ora m
1033   07BE 77                  mov m,a
1034   07BF AF                  xra a
1035   07C0 B0                  ora b
1036   07C1 CA E9 07            jz hline_xy_end
1037   07C4             hline_xy_L3:
1038   07C4 24                  inr h           ; next column
1039   07C5 D6 08               sui 8
1040   07C7 D2 D5 07            jnc hline_xy_L4
1041   07CA C6 10               adi (RightOrMask&255)+8
1042   07CC 5F                  mov e,a
1043   07CD 16 04               mvi d,RightOrMask>>8
1044   07CF 1A                  ldax d
1045   07D0 B6                  ora m
1046   07D1 77                  mov m,a
1047   07D2 C3 E9 07            jmp hline_xy_end
1048   07D5             
1049   07D5             hline_xy_L4:
1050   07D5                     ; fill in chunks
1051   07D5 36 FF               mvi m, 255
1052   07D7 C2 C4 07            jnz hline_xy_L3
1053   07DA C3 E9 07            jmp hline_xy_end
1054   07DD             
1055   07DD             hline_xy_LeftBlock:
1056   07DD 3E 07               mvi a,7
1057   07DF A5                  ana l
1058   07E0 07                  rlc\ rlc\ rlc
1058   07E1 07          
1058   07E2 07          
1059   07E3 B0                  ora b
1060   07E4 6F                  mov l,a
1061   07E5 24                  inr h                           ;to LeftMask
1062   07E6 1A                  ldax d
1063   07E7 B6                  ora m
1064   07E8 12                  stax d
1065   07E9             
1066   07E9             hline_xy_end:
1067   07E9                     ; [prev, state] = [state, next]
1068   07E9             ;        lhld fb_state   
1069   07E9             ;        shld fb_prev    ; 20+20 = 40 (+28 = 68, but!)
1070   07E9 3A 9C 07            lda fb_state
1071   07EC 32 FB 07            sta fb_prev
1072   07EF 3A 71 07            lda fb_next
1073   07F2 32 9C 07            sta fb_state
1074   07F5             
1075   07F5 E1                  pop h
1076   07F6 D1                  pop d
1077   07F7 C3 75 07            jmp fb_bounds_loop
1078   07FA             fb_wipeline:  
1079   07FA                     ; ; if (prev_a == 1) ++x1
1080   07FA             ;        lda fb_prev
1081   07FA             ;        ora a
1082   07FA             fb_prev .equ $+1
1083   07FA F6 00               ori 0           ;—Å—é–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏–º —Å A7=0, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –±–∏—Ç—ã –Ω–µ –≤—ã–∂–Ω—ã
1084   07FC FA 0C 08            jm fb_3
1085   07FF                     ; else if (next_a == 1) --x2
1086   07FF 3A 71 07            lda fb_next
1087   0802 B7                  ora a
1088   0803 F2 0D 08            jp fb_5_
1089   0806 3E FF               mvi a,-1
1090   0808 81                  add c
1091   0809 C3 0E 08            jmp fb_5
1092   080C             fb_3:
1093   080C 04                  inr b
1094   080D             fb_5_:
1095   080D 79                  mov a,c
1096   080E             fb_5:
1097   080E                     ; c - b = count
1098   080E 90                  sub b
1099   080F DA 59 08            jc fb_4
1100   0812             
1101   0812 E5                  push h
1102   0813 D5                  push d
1103   0814 58                  mov e,b
1104   0815 3C                  inr a
1105   0816 47                  mov b, a
1106   0817             
1107   0817 2A 72 08            lhld fb_y
1108   081A EB                  xchg
1109   081B             
1110   081B             ;        call hwipe_xy
1111   081B                     ;; fast wipe horizontal segment
1112   081B                     ;; e = y
1113   081B                             ;; l= x1
1114   081B                     ;; b = x2-x1+1
1115   081B             ;hwipe_xy:           
1116   081B             hwipe_pixtab_plus_2 .equ $+1
1117   081B 26 7A               mvi h,(PixTabA>>8)+2
1118   081D 96                  sub m
1119   081E             hwipe_pixtab_plus_0 .equ $+1            
1120   081E 26 78               mvi h,(PixTabA>>8)
1121   0820 56                  mov d,m                         ;HiAdr
1122   0821 DA 4A 08            jc hwipe_xy_LeftBlock
1123   0824                             
1124   0824 47                  mov b,a
1125   0825             hwipe_pixtab_plus_3 .equ $+1            
1126   0825 26 7B               mvi h,(PixTabA>>8)+3
1127   0827 7E                  mov a,m
1128   0828 EB                  xchg
1129   0829 2F                  cma
1130   082A A6                  ana m
1131   082B 77                  mov m,a
1132   082C AF                  xra a
1133   082D B0                  ora b
1134   082E CA 57 08            jz hwipe_xy_end
1135   0831             hwipe_xy_L3:
1136   0831 24                  inr h           ; next column
1137   0832 D6 08               sui 8
1138   0834 D2 42 08            jnc hwipe_xy_L4
1139   0837 C6 18               adi (RightAndMask&255)+8
1140   0839 5F                  mov e,a
1141   083A 16 04               mvi d,RightAndMask>>8
1142   083C 1A                  ldax d
1143   083D A6                  ana m
1144   083E 77                  mov m,a
1145   083F C3 57 08            jmp hwipe_xy_end
1146   0842             
1147   0842             hwipe_xy_L4:
1148   0842                     ; do in chunks
1149   0842 36 00               mvi m, 0
1150   0844 C2 31 08            jnz hwipe_xy_L3
1151   0847 C3 57 08            jmp hwipe_xy_end
1152   084A             
1153   084A             hwipe_xy_LeftBlock:             
1154   084A 3E 07               mvi a,7
1155   084C A5                  ana l
1156   084D 07                  rlc\ rlc\ rlc
1156   084E 07          
1156   084F 07          
1157   0850 B0                  ora b
1158   0851 6F                  mov l,a
1159   0852 24                  inr h                           ;to LeftMask
1160   0853 1A                  ldax d
1161   0854 B6                  ora m
1162   0855 AE                  xra m
1163   0856 12                  stax d
1164   0857             
1165   0857             hwipe_xy_end:
1166   0857 D1                  pop d
1167   0858 E1                  pop h
1168   0859             fb_4:        
1169   0859                     ; [prev, state] = [state, next]
1170   0859             ;        lhld fb_state   
1171   0859             ;        shld fb_prev    ; 20+20 = 40 (+28 = 68, but!)
1172   0859 3A 9C 07            lda fb_state
1173   085C 32 FB 07            sta fb_prev
1174   085F 3A 71 07            lda fb_next
1175   0862 32 9C 07            sta fb_state
1176   0865                     
1177   0865 C3 75 07            jmp fb_bounds_loop
1178   0868             
1179   0868             fb_bounds_loop_break:        
1180   0868                     ; next line..
1181   0868                     ; ...
1182   0868                     ; bounds += 6, bounds_b += 6
1183   0868 D1                  pop d
1184   0869 E1                  pop h
1185   086A                     ; loop continue without push/pop
1186   086A             fb_bounds_loop_cont:
1187   086A 01 07 00            lxi b, NBOUNDS
1188   086D 09                  dad b
1189   086E EB                  xchg
1190   086F 09                  dad b
1191   0870 EB                  xchg
1192   0871             fb_bounds_loop_nexty:        
1193   0871             ;        lda fb_y
1194   0871             fb_y    .equ $+1
1195   0871 3E 00               mvi a,0
1196   0873 3D                  dcr a
1197   0874             
1198   0874                     ; lfsr for line shuffling, but we need to update bounds/bounds_b by the same law, too much effort
1199   0874                     ;         ral
1200   0874                     ;         jnc lfsr_nofeedback
1201   0874                     ;         xri $1d
1202   0874                     ; lfsr_nofeedback:        
1203   0874                     ;         cpi 1
1204   0874                     
1205   0874 32 72 08            sta fb_y
1206   0877 C2 5B 07            jnz fb_lines_loop
1207   087A C9                  ret
1208   087B             ;         ; loop continue without push/pop
1209   087B             ; fb_bounds_loop_cont:
1210   087B             ;         lxi b, NBOUNDS
1211   087B             ;         dad b
1212   087B             ;         xchg
1213   087B             ;         dad b
1214   087B             ;         xchg
1215   087B             ;         jmp fb_bounds_loop_nexty
1216   087B             
1217   087B             
1218   087B             ;–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –¥–µ–ª–∏–º–æ–µ AHL=FEFFFF
1219   087B             ;HL=AHL/C
1220   087B             ;A=AHL%C
1221   087B             ;16=24/8
1222   087B             udiv16248:
1223   087B 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1223   087C 8F          
1223   087D DA 84 08    
1223   0880 B9          
1223   0881 DA 86 08    
1223   0884 91          
1223   0885 2C          
1224   0886 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1224   0887 8F          
1224   0888 DA 8F 08    
1224   088B B9          
1224   088C DA 91 08    
1224   088F 91          
1224   0890 2C          
1225   0891 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1225   0892 8F          
1225   0893 DA 9A 08    
1225   0896 B9          
1225   0897 DA 9C 08    
1225   089A 91          
1225   089B 2C          
1226   089C 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1226   089D 8F          
1226   089E DA A5 08    
1226   08A1 B9          
1226   08A2 DA A7 08    
1226   08A5 91          
1226   08A6 2C          
1227   08A7             
1228   08A7 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1228   08A8 8F          
1228   08A9 DA B0 08    
1228   08AC B9          
1228   08AD DA B2 08    
1228   08B0 91          
1228   08B1 2C          
1229   08B2 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1229   08B3 8F          
1229   08B4 DA BB 08    
1229   08B7 B9          
1229   08B8 DA BD 08    
1229   08BB 91          
1229   08BC 2C          
1230   08BD 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1230   08BE 8F          
1230   08BF DA C6 08    
1230   08C2 B9          
1230   08C3 DA C8 08    
1230   08C6 91          
1230   08C7 2C          
1231   08C8 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1231   08C9 8F          
1231   08CA DA D1 08    
1231   08CD B9          
1231   08CE DA D3 08    
1231   08D1 91          
1231   08D2 2C          
1232   08D3             
1233   08D3 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1233   08D4 8F          
1233   08D5 DA DC 08    
1233   08D8 B9          
1233   08D9 DA DE 08    
1233   08DC 91          
1233   08DD 2C          
1234   08DE 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1234   08DF 8F          
1234   08E0 DA E7 08    
1234   08E3 B9          
1234   08E4 DA E9 08    
1234   08E7 91          
1234   08E8 2C          
1235   08E9 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1235   08EA 8F          
1235   08EB DA F2 08    
1235   08EE B9          
1235   08EF DA F4 08    
1235   08F2 91          
1235   08F3 2C          
1236   08F4 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1236   08F5 8F          
1236   08F6 DA FD 08    
1236   08F9 B9          
1236   08FA DA FF 08    
1236   08FD 91          
1236   08FE 2C          
1237   08FF             
1238   08FF 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1238   0900 8F          
1238   0901 DA 08 09    
1238   0904 B9          
1238   0905 DA 0A 09    
1238   0908 91          
1238   0909 2C          
1239   090A 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1239   090B 8F          
1239   090C DA 13 09    
1239   090F B9          
1239   0910 DA 15 09    
1239   0913 91          
1239   0914 2C          
1240   0915 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1240   0916 8F          
1240   0917 DA 1E 09    
1240   091A B9          
1240   091B DA 20 09    
1240   091E 91          
1240   091F 2C          
1241   0920 29                  dad h\ adc a\ jc $+5\ cmp c\ rc\ sub c\ inr l
1241   0921 8F          
1241   0922 DA 27 09    
1241   0925 B9          
1241   0926 D8          
1241   0927 91          
1241   0928 2C          
1242   0929 C9                  ret
1243   092A                   
1244   092A                 ; –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–ª–∏—Ç—Ä—ã
1245   092A             set_palette_pp:
1246   092A 3E 88               mvi a, $88
1247   092C D3 00               out 0
1248   092E 3E FF               mvi a, 255
1249   0930 D3 03               out 3
1250   0932 01 00 00            lxi b, 0
1251   0935             setpal_select .equ $+1          
1252   0935 11 5F 09            lxi d, pal_b
1253   0938             _setpal_pp_1:
1254   0938 79                  mov a, c
1255   0939 D3 02               out 2
1256   093B 1A                  ldax d
1257   093C D3 0C               out $c
1258   093E E3                  xthl
1259   093F D3 0C               out $c
1260   0941 E3                  xthl
1261   0942 13                  inx d
1262   0943 0C                  inr c
1263   0944 00                  nop \ nop
1263   0945 00          
1264   0946 D3 0C               out $c
1265   0948             setpal_top .equ $+1             ; set to 3 to only program first 3 colors
1266   0948 3E 10               mvi a,$10
1267   094A B9                  cmp c
1268   094B C2 38 09            jnz _setpal_pp_1
1269   094E C9                  ret
1270   094F             
1271   094F             ; light floppy theme
1272   094F             
1273   094F             ;CLRA    .equ 243q
1274   094F             ;CLRB    .equ 243q
1275   094F             ;BLKC    .equ 121q
1276   094F             ;WHTC    .equ 377q    
1277   094F             ;
1278   094F             ;pal_a: ; $e0  
1279   094F             ;    ;    0    1    2    3    4    5    6    7    8    9    a    b    c    d    e    f
1280   094F             ;    .db  BLKC,CLRA,BLKC,CLRA,WHTC,WHTC,WHTC,WHTC,000q,000q,000q,000q,000q,000q,000q,BLKC
1281   094F             ;pal_b: ; $c0    
1282   094F             ;    .db  BLKC,BLKC,CLRB,CLRB,WHTC,WHTC,WHTC,WHTC,000q,000q,000q,000q,000q,000q,000q,BLKC
1283   094F             
1284   094F             ; goth floppy theme
1285   094F             
1286   094F             CLRA    .equ 000q
1287   094F             CLRB    .equ 000q
1288   094F             
1289   094F             BLKC    .equ 232q
1290   094F             WHTC    .equ 377q    
1291   094F             XXXC    .equ 110q
1292   094F             
1293   094F             ;;;; semi-transparent
1294   094F             ;WHTCt    .equ 377q-011q
1295   094F             ;
1296   094F             ;pal_a: ; $e0  
1297   094F             ;    ;    0    1    2    3    4    5    6    7    8    9    a    b    c    d    e    f
1298   094F             ;    .db  BLKC,CLRA,BLKC,CLRA,WHTC,WHTCt,WHTC,WHTCt,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,BLKC
1299   094F             ;pal_b: ; $c0    
1300   094F             ;    .db  BLKC,BLKC,CLRB,CLRB,WHTC,WHTC,WHTCt,WHTCt,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,BLKC
1301   094F             ;;;;
1302   094F             
1303   094F             pal_a: ; $e0  
1304   094F                 ;    0    1    2    3    4    5    6    7    8    9    a    b    c    d    e    f
1305   094F 9A 00 9A 00     .db  BLKC,CLRA,BLKC,CLRA,WHTC,WHTC,WHTC,WHTC,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,BLKC
1305   0953 FF FF FF FF 
1305   0957 48 48 48 48 
1305   095B 48 48 48 9A 
1306   095F             pal_b: ; $c0    
1307   095F 9A 9A 00 00     .db  BLKC,BLKC,CLRB,CLRB,WHTC,WHTC,WHTC,WHTC,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,BLKC
1307   0963 FF FF FF FF 
1307   0967 48 48 48 48 
1307   096B 48 48 48 9A 
1308   096F             pal_intro: 
1309   096F                 ;    0    1    2    3    4    5    6    7    8    9    a    b    c    d    e    f
1310   096F 00 00 00 00     .db  0,0,0,0,WHTC,WHTC,WHTC,WHTC,0,0,0,0,0,0,0,0
1310   0973 FF FF FF FF 
1310   0977 00 00 00 00 
1310   097B 00 00 00 00 
1311   097F             
1312   097F             do_fade_in:
1313   097F 3A 19 39            lda fade_in_flag
1314   0982 3D                  dcr a
1315   0983 32 19 39            sta fade_in_flag
1316   0986 11 4F 09            lxi d, pal_a        ; goal
1317   0989 21 F9 38            lxi h, pal_fade_a   ; work
1318   098C~            #ifdef FADE_IN
1319   098C~                    call fade_in
1320   098C             #else
1321   098C CD 99 09            call fade_out
1322   098F             #endif
1323   098F 11 5F 09            lxi d, pal_b        ; goal
1324   0992 21 09 39            lxi h, pal_fade_b   ; work
1325   0995~            #ifdef FADE_IN
1326   0995~                    call fade_in
1327   0995             #else
1328   0995 CD 99 09            call fade_out
1329   0998             #endif
1330   0998 C9                  ret
1331   0999             
1332   0999~            #ifdef FADE_IN
1333   0999~                    ; de=goal, hl=work (start with zeroes)
1334   0999~                    ; work < goal (start with 000q)
1335   0999~            fade_in:
1336   0999~                    mvi c, 16
1337   0999~            fade_in_loop:
1338   0999~                    ldax d          ; goal
1339   0999~                    push d
1340   0999~            
1341   0999~                    sub m           ; goal - work (work < goal)
1342   0999~                    mov d, a
1343   0999~                    mvi e, 0
1344   0999~                    ani 007q
1345   0999~                    jz $+5
1346   0999~                    mvi e, 001q
1347   0999~                    mov a, d
1348   0999~                    ani 070q
1349   0999~                    jz $+7
1350   0999~                    mvi a, 010q
1351   0999~                    ora e
1352   0999~                    mov e, a
1353   0999~                    mov a, d
1354   0999~                    ani 300q
1355   0999~                    jz $+7
1356   0999~                    mvi a, 100q
1357   0999~                    ora e
1358   0999~                    mov e, a
1359   0999~                    
1360   0999~                    mov a, m
1361   0999~                    add e
1362   0999~                    mov m, a
1363   0999~                    pop d
1364   0999~                    inx h
1365   0999~                    inx d
1366   0999~                    dcr c
1367   0999~                    jnz fade_in_loop
1368   0999~                    ret
1369   0999             #endif
1370   0999             #ifdef FADE_OUT
1371   0999                     ; de=goal, hl=work (start with 377q)
1372   0999                     ; work > goal (start with 377q)
1373   0999             fade_out:
1374   0999 0E 10               mvi c, 16
1375   099B EB                  xchg            ; hl=goal, de=work
1376   099C             fade_out_loop:
1377   099C 1A                  ldax d          ; work
1378   099D D5                  push d
1379   099E 96                  sub m           ; work - goal
1380   099F 57                  mov d, a
1381   09A0 06 00               mvi b, 0
1382   09A2 E6 07               ani 007q
1383   09A4 CA A9 09            jz $+5
1384   09A7 06 01               mvi b, 001q
1385   09A9 7A                  mov a, d
1386   09AA E6 38               ani 070q
1387   09AC CA B3 09            jz $+7
1388   09AF 3E 08               mvi a, 010q
1389   09B1 B0                  ora b
1390   09B2 47                  mov b, a
1391   09B3 7A                  mov a, d
1392   09B4 E6 C0               ani 300q
1393   09B6 CA BD 09            jz $+7
1394   09B9 3E 40               mvi a, 100q
1395   09BB B0                  ora b
1396   09BC 47                  mov b, a
1397   09BD D1                  pop d
1398   09BE             
1399   09BE 1A                  ldax d
1400   09BF 90                  sub b
1401   09C0 12                  stax d
1402   09C1 23                  inx h
1403   09C2 13                  inx d
1404   09C3 0D                  dcr c
1405   09C4 C2 9C 09            jnz fade_out_loop
1406   09C7 C9                  ret
1407   09C8             #endif
1408   09C8             
1409   09C8             slowprint:
1410   09C8 2A 1C 39            lhld slow_msg_ptr
1411   09CB 3A 1B 39            lda slow_msg_state
1412   09CE B7                  ora a                 ; state == 0 :-> print
1413   09CF CA E2 09            jz slop_nextbyte
1414   09D2 3D                  dcr a
1415   09D3 32 1B 39            sta slow_msg_state
1416   09D6                     ;xra a
1417   09D6                     ;sta slow_msg_state
1418   09D6 B7                  ora a                 ; state was 1 now 0 :-> new line
1419   09D7 C0                  rnz                   ; otherwise just delay
1420   09D8                     ; y, x
1421   09D8 5E                  mov e, m \ inx h
1421   09D9 23          
1422   09DA 56                  mov d, m \ inx h
1422   09DB 23          
1423   09DC E5                  push h
1424   09DD EB                  xchg
1425   09DE CD 7E 3D            call gotoxy
1426   09E1 E1                  pop h
1427   09E2             slop_nextbyte:
1428   09E2 7E                  mov a, m
1429   09E3 22 B2 3D            shld _puts_sptr
1430   09E6 23                  inx h
1431   09E7 22 1C 39            shld slow_msg_ptr
1432   09EA FE FD               cpi 253
1433   09EC CA 24 0A            jz delay_line
1434   09EF FE FE               cpi 254
1435   09F1 CA 11 0A            jz launch_fish
1436   09F4 FE FF               cpi 255
1437   09F6 CA 05 0A            jz slop_wraparound
1438   09F9 B7                  ora a
1439   09FA C2 02 0A            jnz slop_char
1440   09FD                     ; 0, next line in group
1441   09FD 3C                  inr a
1442   09FE 32 1B 39            sta slow_msg_state
1443   0A01 C9                  ret ; next time get the coords
1444   0A02             slop_char:
1445   0A02 C3 B6 3D            jmp _putchar
1446   0A05             slop_wraparound:
1447   0A05 2A 1E 39            lhld slow_msg_loop
1448   0A08 22 1C 39            shld slow_msg_ptr
1449   0A0B 3E 01               mvi a, 1
1450   0A0D 32 1B 39            sta slow_msg_state
1451   0A10 C9                  ret
1452   0A11             launch_fish:
1453   0A11 3E 01               mvi a, 1
1454   0A13 32 1B 39            sta slow_msg_state
1455   0A16 3E 1E               mvi a, $1e      ; fish appears in this column
1456   0A18 32 22 39            sta fish_col
1457   0A1B 3E 01               mvi a, 1
1458   0A1D 32 21 39            sta fish_col_frac
1459   0A20 32 23 39            sta fish_enabled
1460   0A23 C9                  ret
1461   0A24             delay_line:
1462   0A24 3E 21               mvi a, 33
1463   0A26 32 1B 39            sta slow_msg_state
1464   0A29 C9                  ret
1465   0A2A             
1466   0A2A             
1467   0A2A             
1468   0A2A             ISRstack:
1469   0A2A                     .ds 32
1470   0A4A             ISRstackEnd:
1471   0A4A             ISR:
1472   0A4A 22 8F 0A            shld ISRsetHL+1
1473   0A4D E1                  pop h
1474   0A4E 22 93 0A            shld ISRsetRet+1
1475   0A51 F5                  push psw
1476   0A52 21 02 00            lxi h,2
1477   0A55 39                  dad sp
1478   0A56 22 8C 0A            shld ISRsetSP+1
1479   0A59 69                  mov l,c
1480   0A5A 60                  mov h,b
1481   0A5B E3                  xthl
1482   0A5C 31 4A 0A            lxi sp,ISRstackEnd
1483   0A5F E5                  push h                          ;push psw
1484   0A60 C5                  push b
1485   0A61 D5                  push d
1486   0A62             
1487   0A62 CD 2A 09            call set_palette_pp
1488   0A65             
1489   0A65 3A 19 39            lda fade_in_flag
1490   0A68 B7                  ora a
1491   0A69 C4 7F 09            cnz do_fade_in
1492   0A6C             
1493   0A6C 3A 23 39            lda fish_enabled
1494   0A6F B7                  ora a
1495   0A70 C4 5B 47            cnz dumbshift
1496   0A73             
1497   0A73             
1498   0A73 2A E0 38            lhld intcount
1499   0A76 23                  inx h
1500   0A77 22 E0 38            shld intcount
1501   0A7A                     
1502   0A7A 3A B7 03            lda songe_enabled
1503   0A7D B7                  ora a
1504   0A7E C4 03 50            cnz player_tick               ; play songe from the interrupt
1505   0A81             
1506   0A81 3A 1A 39            lda slowprint_enabled
1507   0A84 B7                  ora a
1508   0A85 C4 C8 09            cnz slowprint
1509   0A88             
1510   0A88 D1                  pop d
1511   0A89 C1                  pop b
1512   0A8A F1                  pop psw
1513   0A8B             ISRsetSP:
1514   0A8B 31 00 00            lxi sp,0
1515   0A8E             ISRsetHL:
1516   0A8E 21 00 00            lxi h,0
1517   0A91 FB                  ei
1518   0A92             ISRsetRet:
1519   0A92 C3 00 00            jmp 0
1520   0A95                     
1521   0A95                     ; active bounds
1522   0A95 00 0B       bounds:         .dw bounds_0
1523   0A97 00 12       bounds_b:       .dw bounds_1
1524   0A99             
1525   0A99                     ; bounds even
1526   0A99 00 0B       bounds1:        .dw bounds_0
1527   0A9B 00 12       bounds1_b:      .dw bounds_1
1528   0A9D                     ; bounds odd
1529   0A9D 00 19       bounds2:        .dw bounds_2
1530   0A9F 00 20       bounds2_b:      .dw bounds_3
1531   0AA1             
1532   0AA1                             .ds 2
1533   0AA3             
1534   0AA3                     ; polygon bounds array
1535   0B00                     .org 0100h + $ & 0ff00h  ; ALIGN 256
1536   0B00             bounds_0:
1537   0B00 01                  .db 1
1538   1200                     .org bounds_0 + (NBOUNDS * 256)
1539   1200             bounds_1:
1540   1200 01                  .db 1
1541   1900                     .org bounds_1 + (NBOUNDS * 256)
1542   1900             bounds_2:
1543   1900 01                  .db 1
1544   2000                     .org bounds_2 + (NBOUNDS * 256)
1545   2000             bounds_3:
1546   2000 01                  .db 1
1547   2700                     .org bounds_3 + (NBOUNDS * 256)
1548   2700                     
1549   2700                     
1550   2700             bounds_end:
1551   2700 00                  .db 0
1552   2701             
1553   2701             ngon_start:
1554   2701             
1555   2701             ngon1:
1556   2701                     .ds 48
1557   2731 00 00 00            .db 0, 0, 0
1558   2734             
1559   2734             ;; .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
1560   2734             ;; -    -      -      -    -     -     -     -- -
1561   2734             ;; -  -    -     -             -  -       -   - -
1562   2734             ;; -------------- - -- maths -- ---- ------------
1563   2734             ;; ---------------- --- --- --- -----------------
1564   2734             ;; ==============================================
1565   2734             ;; ==============================================
1566   2734             ;; ‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°
1567   2734             calc_projection:
1568   2734 21 E9 27            lxi h, points_xy
1569   2737 11 13 28            lxi d, points_proj
1570   273A             
1571   273A             rot_loop:
1572   273A E5                  push h
1573   273B D5                  push d
1574   273C 46                    mov b, m \ inx h        ; b = x
1574   273D 23          
1575   273E 4E                    mov c, m                ; c = y
1576   273F                       
1577   273F                       ; just use (0,0) as end marker because floppies have holes in the middle
1578   273F 78                    mov a, b
1579   2740 B1                    ora c
1580   2741 CA E3 27              jz rot_loop_end
1581   2744                       
1582   2744 3A 2B 29              lda mat_axx
1583   2747 5F                    mov e, a
1584   2748 50                    mov d,b
1585   2749 CD FB 28              call muls8s8shr7    ; d = a = d * e >> 7
1586   274C 32 E6 27              sta rot_px
1587   274F 3A 2C 29              lda mat_axy
1588   2752 57                    mov d, a
1589   2753 59                    mov e,c
1590   2754 CD FB 28              call muls8s8shr7      ; d = a = d * e >> 7
1591   2757 3A E6 27              lda rot_px
1592   275A 82                    add d
1593   275B 32 E6 27              sta rot_px            ; rot_px = Axx * px + Axy * py        =c5, 
1594   275E                                             ; but here -60 ($c4) * 126 ($7e) =-59 (c4*7e=$c5)
1595   275E                                             ; expected -57, got -56.. meh
1596   275E 3A 2E 29              lda mat_ayx
1597   2761 5F                    mov e, a
1598   2762 50                    mov d,b
1599   2763 CD FB 28              call muls8s8shr7          ; -3
1600   2766 32 E7 27              sta rot_py
1601   2769 3A 2F 29              lda mat_ayy
1602   276C 57                    mov d, a
1603   276D 59                    mov e,c
1604   276E CD FB 28              call muls8s8shr7
1605   2771 3A E7 27              lda rot_py
1606   2774 82                    add d
1607   2775 32 E7 27              sta rot_py          ; rot_py = Ayx * px + Ayy * py
1608   2778                       
1609   2778 3A 31 29              lda mat_azx
1610   277B 5F                    mov e, a
1611   277C 50                    mov d,b
1612   277D CD FB 28              call muls8s8shr7    ; =1
1613   2780 32 E8 27              sta rot_pz
1614   2783 3A 32 29              lda mat_azy
1615   2786 57                    mov d, a
1616   2787 59                    mov e,c
1617   2788 CD FB 28              call muls8s8shr7
1618   278B 3A E8 27              lda rot_pz
1619   278E 82                    add d
1620   278F 32 E8 27              sta rot_pz            ; rot_pz = Azx * px + Azy * py
1621   2792             
1622   2792 C6 55                 adi 85        ; make sure z > 0
1623   2794 B7                    ora a \ rar \ ora a \ rar     ; (z + 85) >> 2  =$15
1623   2795 1F          
1623   2796 B7          
1623   2797 1F          
1624   2798 57                    mov d, a ; d = z_tmp
1625   2799                       
1626   2799 3A E4 38              lda anim_pos; frame_no
1627   279C 87                    add a
1628   279D CD 48 29              call sincosa ; c = cos(2 * frame_no)
1629   27A0                       ; calc cos / 4 (signed)
1630   27A0 AF                    xra a
1631   27A1 B1                    ora c
1632   27A2 F2 AF 27              jp locm1
1633   27A5 2F                    cma \ inr a
1633   27A6 3C          
1634   27A7 1F                    rar \ ora a \ rar
1634   27A8 B7          
1634   27A9 1F          
1635   27AA 2F                    cma \ inr a
1635   27AB 3C          
1636   27AC C3 B2 27              jmp locm2
1637   27AF                               
1638   27AF             locm1:
1639   27AF 1F                    rar \ ora a \ rar
1639   27B0 B7          
1639   27B1 1F          
1640   27B2             ;          inr c
1641   27B2             ;          dcr c         ;test sign
1642   27B2             ;          jp $+5
1643   27B2             ;          cma \ inr a   ; a = cos(2 * frame) / 4
1644   27B2             locm2:
1645   27B2 C6 1C                 adi 58-30        ; a += 58 - ZINV_MIN       ; =$59
1646   27B4 82                    add d         ; a = full z
1647   27B5                       
1648   27B5 CD 59 2A              call bzinva    ; b = zinv[z - ZINV_MIN] ; =$26
1649   27B8                       ;mov a, b \ ora a \ rar \ mov b, a
1650   27B8                       
1651   27B8                       ; clamp b at 127
1652   27B8                       ;mov a, b
1653   27B8                       ;ora a
1654   27B8                       ;jp $+5
1655   27B8                       ;mvi b, $7f
1656   27B8                       ;mvi b, $b0
1657   27B8                       
1658   27B8                       
1659   27B8             ;         push b
1660   27B8 3A E6 27              lda rot_px
1661   27BB 5F                    mov e, a
1662   27BC 50                    mov d,b
1663   27BD CD EB 28              call muls8u8shr7
1664   27C0 C6 80                 adi $80     ; +128
1665   27C2 32 E6 27              sta rot_px  ; rot_px = x * zinv[z - ZINV_MIN] >> 7
1666   27C5             ;         pop b
1667   27C5 3A E7 27              lda rot_py
1668   27C8 5F                    mov e, a
1669   27C9 50                    mov d,b
1670   27CA CD EB 28              call muls8u8shr7
1671   27CD C6 80                 adi $80     ; +128
1672   27CF 32 E7 27              sta rot_py    ; rot_py = y * zinv[z - ZINV_MIN] >> 7
1673   27D2                       ; kek
1674   27D2                       
1675   27D2 D1                  pop d
1676   27D3 3A E6 27            lda rot_px \ stax d \ inx d
1676   27D6 12          
1676   27D7 13          
1677   27D8 3A E7 27            lda rot_py \ stax d \ inx d
1677   27DB 12          
1677   27DC 13          
1678   27DD E1                  pop h
1679   27DE 23                  inx h \ inx h
1679   27DF 23          
1680   27E0 C3 3A 27            jmp rot_loop
1681   27E3             
1682   27E3             rot_loop_end:
1683   27E3 F1                  pop psw
1684   27E4 F1                  pop psw
1685   27E5 C9                  ret
1686   27E6                     
1687   27E6 00          rot_px:         .db 0
1688   27E7 00          rot_py:         .db 0
1689   27E8 00          rot_pz:         .db 0
1690   27E9                     
1691   27E9 C4 C4 3C C4 points_xy:  .db $c4,$c4, $3c,$c4, $3c,$3c, $c4,$3c, $12,$00,$0d,$0d,$00,$12,$f3,$0d,$ee,$00,$f3,$f3,$00,$ee,$0d,$f3,$06,$35,$03,$3a,$fd,$3a,$fa,$35
1691   27ED 3C 3C C4 3C 
1691   27F1 12 00 0D 0D 
1691   27F5 00 12 F3 0D 
1691   27F9 EE 00 F3 F3 
1691   27FD 00 EE 0D F3 
1691   2801 06 35 03 3A 
1691   2805 FD 3A FA 35 
1692   2809 FA 1D FD 18             .db $fa,$1d,$fd,$18,$03,$18,$06,$1d,
1692   280D 03 18 06 1D 
1693   2811 00 00                   .db 0, 0
1694   2813                         
1695   2813             points_proj: .ds 21*2
1696   283D             
1697   283D             rotmatrix:
1698   283D 3A 24 29            lda rotz
1699   2840 CD 48 29            call sincosa
1700   2843 60                  mov h, b
1701   2844 69                  mov l, c
1702   2845 22 25 29            shld cos_a
1703   2848 3A 22 29            lda rotx
1704   284B CD 48 29            call sincosa
1705   284E 60                  mov h, b
1706   284F 69                  mov l, c
1707   2850 22 27 29            shld cos_b
1708   2853 3A 23 29            lda roty
1709   2856 CD 48 29            call sincosa
1710   2859 60                  mov h, b
1711   285A 69                  mov l, c
1712   285B 22 29 29            shld cos_c
1713   285E                     
1714   285E                     ; axx = mul(cosa, cosb) >> 7
1715   285E 3A 25 29            lda cos_a
1716   2861 57                  mov d, a
1717   2862 3A 27 29            lda cos_b
1718   2865 5F                  mov e, a
1719   2866 CD FB 28            call muls8s8shr7
1720   2869 32 2B 29            sta mat_axx
1721   286C                     ;        t2   t1                                         t4 t3
1722   286C                     ; axy = (emul(emul(cosa, sinb) >> SHITF, sinc) >> SHITF) - (emul(sina, cosc) >> SHITF);
1723   286C 3A 25 29            lda cos_a
1724   286F 57                  mov d, a
1725   2870 3A 28 29            lda sin_b
1726   2873 5F                  mov e, a
1727   2874 CD FB 28            call muls8s8shr7        ; a = emul(cosa, sinb) >> SHITF
1728   2877 32 34 29            sta cosa_x_sinb         ; =2
1729   287A 57                  mov d, a
1730   287B 3A 2A 29            lda sin_c
1731   287E 5F                  mov e, a
1732   287F CD FB 28            call muls8s8shr7        ; a = emul(t1, sinc) >> SHITF  =0
1733   2882 32 2C 29            sta mat_axy             ; temporary t2
1734   2885 3A 26 29            lda sin_a
1735   2888 57                  mov d, a
1736   2889 3A 29 29            lda cos_c
1737   288C 5F                  mov e, a
1738   288D CD FB 28            call muls8s8shr7
1739   2890 2F                  cma
1740   2891 3C                  inr a
1741   2892 47                  mov b, a
1742   2893 3A 2C 29            lda mat_axy
1743   2896 80                  add b
1744   2897 32 2C 29            sta mat_axy             ; =f8
1745   289A                     
1746   289A                     ; Axz is not used
1747   289A                     ; ;        t1                                                t2
1748   289A                     ; ; axz = (emul(emul(cosa, sinb) >> SHITF, cosc) >> SHITF) - (emul(sina, sinc) >> SHITF);
1749   289A                     ; lda cosa_x_sinb
1750   289A                     ; mov b, a
1751   289A                     ; lda cos_c
1752   289A                     ; mov c, a
1753   289A                     ; call muls8s8shr7
1754   289A                     ; sta mat_axz ; temporary
1755   289A                     
1756   289A                     ; lda sin_a
1757   289A                     ; mov b, a
1758   289A                     ; lda sin_c
1759   289A                     ; mov c, a
1760   289A                     ; call muls8s8shr7
1761   289A                     ; cma
1762   289A                     ; inr a
1763   289A                     ; mov b, a
1764   289A                     ; lda mat_axz
1765   289A                     ; add b
1766   289A                     ; sta mat_axz             ; =01
1767   289A                     
1768   289A                     ; ayx = emul(sina, cosb) >> SHITF;
1769   289A 3A 26 29            lda sin_a
1770   289D 57                  mov d, a
1771   289E 3A 27 29            lda cos_b
1772   28A1 5F                  mov e, a
1773   28A2 CD FB 28            call muls8s8shr7
1774   28A5 32 2E 29            sta mat_ayx             ; =08
1775   28A8                     
1776   28A8                     ; ayy = (emul(emul(sina, sinb) >> SHITF, sinc) >> SHITF) + (emul(cosa, cosc) >> SHITF);
1777   28A8 3A 26 29            lda sin_a
1778   28AB 57                  mov d, a
1779   28AC 3A 28 29            lda sin_b
1780   28AF 5F                  mov e, a
1781   28B0 CD FB 28            call muls8s8shr7
1782   28B3 32 35 29            sta sina_x_sinb
1783   28B6 57                  mov d, a
1784   28B7 3A 2A 29            lda sin_c
1785   28BA 5F                  mov e, a
1786   28BB CD FB 28            call muls8s8shr7
1787   28BE 32 2F 29            sta mat_ayy ; tmp
1788   28C1 3A 25 29            lda cos_a
1789   28C4 57                  mov d, a
1790   28C5 3A 29 29            lda cos_c
1791   28C8 5F                  mov e, a
1792   28C9 CD FB 28            call muls8s8shr7
1793   28CC 47                  mov b, a
1794   28CD 3A 2F 29            lda mat_ayy
1795   28D0 80                  add b
1796   28D1 32 2F 29            sta mat_ayy             ; =7e
1797   28D4                     
1798   28D4                     ; Ayz is not used
1799   28D4                     ; ; ayz = (emul(emul(sina, sinb) >> SHITF, cosc) >> SHITF) - (emul(cosa, sinc) >> SHITF);
1800   28D4                     ; lda sina_x_sinb
1801   28D4                     ; mov b, a
1802   28D4                     ; lda cos_c
1803   28D4                     ; mov c, a
1804   28D4                     ; call muls8s8shr7
1805   28D4                     ; sta mat_ayz     ; tmp
1806   28D4                     
1807   28D4                     ; lda cos_a
1808   28D4                     ; mov b, a
1809   28D4                     ; lda sin_c
1810   28D4                     ; mov c, a
1811   28D4                     ; call muls8s8shr7
1812   28D4                     ; cma
1813   28D4                     ; inr a
1814   28D4                     ; mov b, a
1815   28D4                     ; lda mat_ayz
1816   28D4                     ; add b
1817   28D4                     ; sta mat_ayz             ; =fb
1818   28D4                     
1819   28D4                     ; Azx = -sinb;
1820   28D4 3A 28 29            lda sin_b
1821   28D7 2F                  cma
1822   28D8 3C                  inr a
1823   28D9 32 31 29            sta mat_azx             ; =fd
1824   28DC                     
1825   28DC                     ; Azy = emul(cosb, sinc) >> SHITF;
1826   28DC 3A 27 29            lda cos_b
1827   28DF 57                  mov d, a
1828   28E0 3A 2A 29            lda sin_c
1829   28E3 5F                  mov e, a
1830   28E4 CD FB 28            call muls8s8shr7
1831   28E7 32 32 29            sta mat_azy             ; =05
1832   28EA             
1833   28EA                     ; Azz is not used        
1834   28EA                     ; ; Azz = emul(cosb, cosc) >> SHITF;
1835   28EA                     ; lda cos_b
1836   28EA                     ; mov b, a
1837   28EA                     ; lda cos_c
1838   28EA                     ; mov c, a
1839   28EA                     ; call muls8s8shr7
1840   28EA                     ; sta mat_azz             ; =
1841   28EA             
1842   28EA             
1843   28EA C9                  ret
1844   28EB             
1845   28EB                     ; a = d = ((signed) e * (unsigned) d) >> 7
1846   28EB             muls8u8shr7:
1847   28EB AF                          xra a
1848   28EC 93                          sub e
1849   28ED FA F7 28            jm muls8u8shr7pos
1850   28F0             ;muls8u8shr7neg
1851   28F0 5F                  mov e, a
1852   28F1 CD 51 29            call mul8
1853   28F4                     ; a = de >> 7
1854   28F4             ;       xchg
1855   28F4             ;       dad h
1856   28F4 AF                  xra a
1857   28F5 92                  sub d
1858   28F6 C9                  ret
1859   28F7             
1860   28F7             muls8u8shr7pos:
1861   28F7 CD 51 29            call mul8
1862   28FA                     ; a = de >> 7
1863   28FA             ;       xchg
1864   28FA             ;       dad h
1865   28FA             ;       mov a, d
1866   28FA C9                  ret
1867   28FB             
1868   28FB             
1869   28FB             ;         ; a = l = ((signed) c * (unsigned) b) >> 7
1870   28FB             ; muls8u8shr7:
1871   28FB             ;         mvi d, 0
1872   28FB             ;         mov e, b
1873   28FB             ;         mov b, d
1874   28FB             ;         mov a, c
1875   28FB             ;         ora a
1876   28FB             ;         jp $+7
1877   28FB             ;         cma \ inr a \ dcr b
1878   28FB             ;         mov c, a
1879   28FB                     
1880   28FB             ;         call MulAHL_A_DE
1881   28FB             ;         ; a = hl >> 7
1882   28FB             ;         mov a, l
1883   28FB             ;         ral
1884   28FB             ;         mov a, h
1885   28FB             ;         ral
1886   28FB             ;         mov l, a
1887   28FB                     
1888   28FB             ;         mov a, b
1889   28FB             ;         ora a
1890   28FB             ;         mov a, l
1891   28FB             ;         rz
1892   28FB             ;         cma
1893   28FB             ;         inr a
1894   28FB             ;         mov l, a
1895   28FB             ;         ret
1896   28FB                     
1897   28FB             ;–£–º–Ω–æ–∂–µ–Ω–∏–µ AHL=A*DE
1898   28FB             ;MulAHL_A_DE:
1899   28FB             ;       mvi c,0
1900   28FB             ;       mov h,d\ mov l,e
1901   28FB             ;       add a\ jc xxMUL1
1902   28FB             ;       add a\ jc xxMUL2+2
1903   28FB             ;       add a\ jc xxMUL3+2
1904   28FB             ;       add a\ jc xxMUL4+2
1905   28FB             ;       add a\ jc xxMUL5+2
1906   28FB             ;       add a\ jc xxMUL6+2
1907   28FB             ;       add a\ jc xxMUL7+2
1908   28FB             ;       add a\ rc
1909   28FB             ;       lxi h,0
1910   28FB             ;       ret
1911   28FB             ;
1912   28FB             ;xxMUL1: dad h\ adc a\ jnc xxMUL2+2
1913   28FB             ;xxMUL2: dad d\ adc c\ dad h\ adc a\ jnc xxMUL3+2
1914   28FB             ;xxMUL3: dad d\ adc c\ dad h\ adc a\ jnc xxMUL4+2
1915   28FB             ;xxMUL4: dad d\ adc c\ dad h\ adc a\ jnc xxMUL5+2
1916   28FB             ;xxMUL5: dad d\ adc c\ dad h\ adc a\ jnc xxMUL6+2
1917   28FB             ;xxMUL6: dad d\ adc c\ dad h\ adc a\ jnc xxMUL7+2
1918   28FB             ;xxMUL7: dad d\ adc c\ dad h\ adc a\ rnc
1919   28FB             ;xxMUL8: dad d\ adc c
1920   28FB             ;       ret        
1921   28FB             
1922   28FB                     ; a=d = (d * e) >> 7 signed
1923   28FB             muls8s8shr7:
1924   28FB 7A                          mov a,d
1925   28FC AB                          xra e
1926   28FD FA 0E 29                    jm muls8s8shr7neg
1927   2900             ;muls8s8shr7pos
1928   2900 AB                          xra e
1929   2901 F2 0A 29                    jp muls8s8shr7pos2
1930   2904 AF                          xra a
1931   2905 93                          sub e
1932   2906 5F                          mov e,a
1933   2907 AF                          xra a
1934   2908 92                          sub d
1935   2909 57                          mov d,a
1936   290A             muls8s8shr7pos2:
1937   290A CD 51 29                    call mul8
1938   290D             ;               xchg
1939   290D             ;               dad h
1940   290D             ;               mov a,d
1941   290D C9                          ret
1942   290E                             
1943   290E             muls8s8shr7neg:
1944   290E AB                          xra e
1945   290F F2 15 29                    jp muls8s8shr7neg1
1946   2912 AF                          xra a
1947   2913 92                          sub d
1948   2914 57                          mov d,a
1949   2915             muls8s8shr7neg1:
1950   2915 AF                          xra a
1951   2916 93                          sub e
1952   2917 FA 1B 29                    jm muls8s8shr7neg2
1953   291A 5F                          mov e,a
1954   291B             muls8s8shr7neg2:
1955   291B CD 51 29                    call mul8
1956   291E             ;               xchg
1957   291E             ;               dad h
1958   291E AF                          xra a
1959   291F             ;               sub h
1960   291F             ;               mov h,a
1961   291F 92                          sub d
1962   2920 57                          mov d,a
1963   2921 C9                          ret
1964   2922             
1965   2922 00          rotx:           .db 0
1966   2923 00          roty:           .db 0
1967   2924 00          rotz:           .db 0
1968   2925             
1969   2925 00          cos_a:          .db 0
1970   2926 00          sin_a:          .db 0
1971   2927 00          cos_b:          .db 0
1972   2928 00          sin_b:          .db 0
1973   2929 00          cos_c:          .db 0
1974   292A 00          sin_c:          .db 0
1975   292B             
1976   292B 00          mat_axx:        .db      0
1977   292C 00          mat_axy:        .db      0
1978   292D 00          mat_axz:        .db      0
1979   292E 00          mat_ayx:        .db      0
1980   292F 00          mat_ayy:        .db      0
1981   2930 00          mat_ayz:        .db      0
1982   2931 00          mat_azx:        .db      0
1983   2932 00          mat_azy:        .db      0
1984   2933 00          mat_azz:        .db      0
1985   2934             
1986   2934 00          cosa_x_sinb:    .db 0
1987   2935 00          sina_x_sinb:    .db 0
1988   2936             
1989   2936             mathinit:
1990   2936 01 FF FF            lxi b,-1
1991   2939 AF                  xra a
1992   293A 57                  mov d, a
1993   293B 5F                  mov e, a
1994   293C 21 00 2C            lxi h, MULTAB
1995   293F CD 82 29            call GenSQRtab
1996   2942 24                  inr h
1997   2943 24                  inr h
1998   2944 CD 82 29            call GenSQRtab
1999   2947 C9                  ret
2000   2948             
2001   2948                     ; b = sin(a), c = cos(a)
2002   2948             sincosa:
2003   2948 26 2B               mvi h, costbl >> 8
2004   294A 6F                  mov l, a
2005   294B 4E                  mov c, m        ; c = cos
2006   294C D6 40               sui DEG90
2007   294E 6F                  mov l, a
2008   294F 46                  mov b, m        ; b = sin
2009   2950 C9                  ret
2010   2951                  
2011   2951                     ; from raytracing8080_vXsource/mul8bit.asm
2012   2951                     ; de = (d * e)<<1
2013   2951                     ; clobbers: everything
2014   2951             mul8:
2015   2951 7A                  mov a, d
2016   2952 93                  sub e                   ;A=D-E
2017   2953 26 2D               mvi h, 1+(MULTAB>>8)
2018   2955 D2 6E 29            jnc m8_GetDif2
2019   2958 2F                  cma
2020   2959 3C                  inr a                   ;A=E-D
2021   295A             ;m8_GetDif:
2022   295A 6F                  mov l, a
2023   295B 82                  add d
2024   295C 82                  add d                   ;A=E+D
2025   295D 56                  mov d, m
2026   295E 25                  dcr h
2027   295F 5E                  mov e, m
2028   2960 D2 65 29            jnc m8_GetSum
2029   2963 26 2E               mvi h, 2+(MULTAB>>8)
2030   2965             m8_GetSum:
2031   2965 6F                  mov l, a
2032   2966 7E                  mov a, m
2033   2967 93                  sub e
2034   2968 5F                  mov e, a
2035   2969 24                  inr h
2036   296A 7E                  mov a, m
2037   296B 9A                  sbb d
2038   296C 57                  mov d, a
2039   296D C9                  ret
2040   296E             
2041   296E             m8_GetDif2:
2042   296E 6F                  mov l, a
2043   296F 56                  mov d, m
2044   2970 25                  dcr h
2045   2971 83                  add e
2046   2972 83                  add e                   ;A=D+E
2047   2973 5E                  mov e, m
2048   2974 D2 79 29            jnc m8_GetSum2
2049   2977 26 2E               mvi h, 2+(MULTAB>>8)
2050   2979             m8_GetSum2:
2051   2979 6F                  mov l, a
2052   297A 7E                  mov a, m
2053   297B 93                  sub e
2054   297C 5F                  mov e, a
2055   297D 24                  inr h
2056   297E 7E                  mov a, m
2057   297F 9A                  sbb d
2058   2980 57                  mov d, a
2059   2981 C9                  ret
2060   2982             
2061   2982             
2062   2982             GenSQRtab:
2063   2982 D5                  push d
2064   2983 F5                  push psw
2065   2984 1F                  rar
2066   2985 F5                  push psw
2067   2986 7A                  mov a, d
2068   2987 1F                  rar
2069   2988 57                  mov d, a
2070   2989 7B                  mov a, e
2071   298A 1F                  rar
2072   298B 5F                  mov e, a
2073   298C F1                  pop psw
2074   298D             ;       rar
2075   298D 7A                  mov a, d
2076   298E             ;       rar
2077   298E 24                  inr h
2078   298F 77                  mov m,a
2079   2990 25                  dcr h
2080   2991 7B                  mov a, e
2081   2992             ;       rar
2082   2992 77                  mov m, a
2083   2993 F1                  pop psw
2084   2994 D1                  pop d
2085   2995 03                  inx b
2086   2996 03                  inx b
2087   2997 EB                  xchg
2088   2998 09                  dad b
2089   2999 EB                  xchg
2090   299A CE 00               aci 0
2091   299C 2C                  inr l
2092   299D C2 82 29            jnz GenSQRtab
2093   29A0 C9                  ret
2094   29A1             
2095   2A00                     .org 0100h + $ & 0ff00h  ; ALIGN 256
2096   2A00             zinvtbl:
2097   2A00 FF FF F8 F1                 .db $ff,$ff,$f8,$f1,$ea,$e3,$dd,$d7,$d2,$cd,$c8,$c3,$be,$ba,$b6,$b2,$ae,$aa,$a7,$a4,$a0,$9d,$9a,$97,$95,$92,$8f,$8d,$8b,$88,$86,$84,
2097   2A04 EA E3 DD D7 
2097   2A08 D2 CD C8 C3 
2097   2A0C BE BA B6 B2 
2097   2A10 AE AA A7 A4 
2097   2A14 A0 9D 9A 97 
2097   2A18 95 92 8F 8D 
2097   2A1C 8B 88 86 84 
2098   2A20 82 80 7E 7C         .db $82,$80,$7e,$7c,$7a,$78,$76,$75,$73,$72,$70,$6e,$6d,$6c,$6a,$69,$67,$66,$65,$64,$62,$61,$60,$5f,$5e,$5d,$5c,$5b,$5a,$59,$58,$57,
2098   2A24 7A 78 76 75 
2098   2A28 73 72 70 6E 
2098   2A2C 6D 6C 6A 69 
2098   2A30 67 66 65 64 
2098   2A34 62 61 60 5F 
2098   2A38 5E 5D 5C 5B 
2098   2A3C 5A 59 58 57 
2099   2A40 56 55 54 53         .db $56,$55,$54,$53,$52,$52,$51,$50,$4f,$4f,$4e,$4d,$4c,$4c,$4b,$4a,$4a,$49,$48,$48,$47,$46,$46,$45,$45
2099   2A44 52 52 51 50 
2099   2A48 4F 4F 4E 4D 
2099   2A4C 4C 4C 4B 4A 
2099   2A50 4A 49 48 48 
2099   2A54 47 46 46 45 
2099   2A58 45 
2100   2A59             
2101   2A59                     ; b = 8192/(31+a)
2102   2A59             bzinva:
2103   2A59 26 2A               mvi h, zinvtbl >> 8
2104   2A5B 6F                  mov l, a
2105   2A5C 46                  mov b, m
2106   2A5D C9                  ret
2107   2A5E             
2108   2B00                     .org 0100h + $ & 0ff00h  ; ALIGN 256
2109   2B00             costbl:
2110   2B00 7F 7F 7F 7F         .db $7f,$7f,$7f,$7f,$7e,$7e,$7e,$7d,$7d,$7c,$7b,$7a,$7a,$79,$78,$76,$75,$74,$73,$71,$70,$6f,$6d,$6b,$6a,$68,$66,$64,$62,$60,$5e,$5c
2110   2B04 7E 7E 7E 7D 
2110   2B08 7D 7C 7B 7A 
2110   2B0C 7A 79 78 76 
2110   2B10 75 74 73 71 
2110   2B14 70 6F 6D 6B 
2110   2B18 6A 68 66 64 
2110   2B1C 62 60 5E 5C 
2111   2B20 5A 58 55 53         .db $5a,$58,$55,$53,$51,$4e,$4c,$49,$47,$44,$41,$3f,$3c,$39,$36,$33,$31,$2e,$2b,$28,$25,$22,$1f,$1c,$19,$16,$13,$10,$0c,$09,$06,$03
2111   2B24 51 4E 4C 49 
2111   2B28 47 44 41 3F 
2111   2B2C 3C 39 36 33 
2111   2B30 31 2E 2B 28 
2111   2B34 25 22 1F 1C 
2111   2B38 19 16 13 10 
2111   2B3C 0C 09 06 03 
2112   2B40 00 FD FA F7         .db $00,$fd,$fa,$f7,$f4,$f0,$ed,$ea,$e7,$e4,$e1,$de,$db,$d8,$d5,$d2,$cf,$cd,$ca,$c7,$c4,$c1,$bf,$bc,$b9,$b7,$b4,$b2,$af,$ad,$ab,$a8
2112   2B44 F4 F0 ED EA 
2112   2B48 E7 E4 E1 DE 
2112   2B4C DB D8 D5 D2 
2112   2B50 CF CD CA C7 
2112   2B54 C4 C1 BF BC 
2112   2B58 B9 B7 B4 B2 
2112   2B5C AF AD AB A8 
2113   2B60 A6 A4 A2 A0         .db $a6,$a4,$a2,$a0,$9e,$9c,$9a,$98,$96,$95,$93,$91,$90,$8f,$8d,$8c,$8b,$8a,$88,$87,$86,$86,$85,$84,$83,$83,$82,$82,$82,$81,$81,$81
2113   2B64 9E 9C 9A 98 
2113   2B68 96 95 93 91 
2113   2B6C 90 8F 8D 8C 
2113   2B70 8B 8A 88 87 
2113   2B74 86 86 85 84 
2113   2B78 83 83 82 82 
2113   2B7C 82 81 81 81 
2114   2B80 81 81 81 81         .db $81,$81,$81,$81,$82,$82,$82,$83,$83,$84,$85,$86,$86,$87,$88,$8a,$8b,$8c,$8d,$8f,$90,$91,$93,$95,$96,$98,$9a,$9c,$9e,$a0,$a2,$a4
2114   2B84 82 82 82 83 
2114   2B88 83 84 85 86 
2114   2B8C 86 87 88 8A 
2114   2B90 8B 8C 8D 8F 
2114   2B94 90 91 93 95 
2114   2B98 96 98 9A 9C 
2114   2B9C 9E A0 A2 A4 
2115   2BA0 A6 A8 AB AD         .db $a6,$a8,$ab,$ad,$af,$b2,$b4,$b7,$b9,$bc,$bf,$c1,$c4,$c7,$ca,$cd,$cf,$d2,$d5,$d8,$db,$de,$e1,$e4,$e7,$ea,$ed,$f0,$f4,$f7,$fa,$fd
2115   2BA4 AF B2 B4 B7 
2115   2BA8 B9 BC BF C1 
2115   2BAC C4 C7 CA CD 
2115   2BB0 CF D2 D5 D8 
2115   2BB4 DB DE E1 E4 
2115   2BB8 E7 EA ED F0 
2115   2BBC F4 F7 FA FD 
2116   2BC0 00 03 06 09         .db $00,$03,$06,$09,$0c,$10,$13,$16,$19,$1c,$1f,$22,$25,$28,$2b,$2e,$31,$33,$36,$39,$3c,$3f,$41,$44,$47,$49,$4c,$4e,$51,$53,$55,$58
2116   2BC4 0C 10 13 16 
2116   2BC8 19 1C 1F 22 
2116   2BCC 25 28 2B 2E 
2116   2BD0 31 33 36 39 
2116   2BD4 3C 3F 41 44 
2116   2BD8 47 49 4C 4E 
2116   2BDC 51 53 55 58 
2117   2BE0 5A 5C 5E 60         .db $5a,$5c,$5e,$60,$62,$64,$66,$68,$6a,$6b,$6d,$6f,$70,$71,$73,$74,$75,$76,$78,$79,$7a,$7a,$7b,$7c,$7d,$7d,$7e,$7e,$7e,$7f,$7f,$7f
2117   2BE4 62 64 66 68 
2117   2BE8 6A 6B 6D 6F 
2117   2BEC 70 71 73 74 
2117   2BF0 75 76 78 79 
2117   2BF4 7A 7A 7B 7C 
2117   2BF8 7D 7D 7E 7E 
2117   2BFC 7E 7F 7F 7F 
2118   2C00             
2119   2C00             MULTAB: .ds 1024
2120   3000             
2121   3000             TOPLINE .equ $a0
2122   3000             LINEH   .equ 14
2123   3000             msg1:   
2124   3000 82 04 48 54         .db TOPLINE - 30, 4, "HTTPS://CAGLRC.CC/SCALAR", 0
2124   3004 54 50 53 3A 
2124   3008 2F 2F 43 41 
2124   300C 47 4C 52 43 
2124   3010 2E 43 43 2F 
2124   3014 53 43 41 4C 
2124   3018 41 52 00 
2125   301B 0A 0E 32 30         .db 10, 14, "2025", 0
2125   301F 32 35 00 
2126   3022             ;                                         "                                "
2127   3022             msg_restart:
2128   3022 A0 04 4B 41         .db TOPLINE -  0, 4, "KARTOTEKA FOR VECTOR-06C", 0
2128   3026 52 54 4F 54 
2128   302A 45 4B 41 20 
2128   302E 46 4F 52 20 
2128   3032 56 45 43 54 
2128   3036 4F 52 2D 30 
2128   303A 36 43 00 
2129   303D 96 04 2D 2D         .db TOPLINE - 10, 4, "------------------------", 0
2129   3041 2D 2D 2D 2D 
2129   3045 2D 2D 2D 2D 
2129   3049 2D 2D 2D 2D 
2129   304D 2D 2D 2D 2D 
2129   3051 2D 2D 2D 2D 
2129   3055 2D 2D 00 
2130   3058 50 00 20 56         .db TOPLINE - 80, 0,              " VISIT FOR GIGAZ OF V-06C WAREZ ", 0
2130   305C 49 53 49 54 
2130   3060 20 46 4F 52 
2130   3064 20 47 49 47 
2130   3068 41 5A 20 4F 
2130   306C 46 20 56 2D 
2130   3070 30 36 43 20 
2130   3074 57 41 52 45 
2130   3078 5A 20 00 
2131   307B 42 00 20 20         .db TOPLINE - 80 - LINEH, 0,      "     GAMEZ, DEMOS  AND DOCS     ", 0
2131   307F 20 20 20 47 
2131   3083 41 4D 45 5A 
2131   3087 2C 20 44 45 
2131   308B 4D 4F 53 20 
2131   308F 20 41 4E 44 
2131   3093 20 44 4F 43 
2131   3097 53 20 20 20 
2131   309B 20 20 00 
2132   309E 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "       RECENT & HISTORICAL      ", 0
2132   30A2 20 20 20 20 
2132   30A6 20 52 45 43 
2132   30AA 45 4E 54 20 
2132   30AE 26 20 48 49 
2132   30B2 53 54 4F 52 
2132   30B6 49 43 41 4C 
2132   30BA 20 20 20 20 
2132   30BE 20 20 00 
2133   30C1             
2134   30C1                     ;.db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0
2135   30C1                     ;.db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0
2136   30C1 01 01 FD            .db 1, 1, 253
2137   30C4 01 01 FD            .db 1, 1, 253
2138   30C7                     
2139   30C7 50 00 20 20         .db TOPLINE - 80, 0,              "      COME AND LEARN ABOUT      ", 0
2139   30CB 20 20 20 20 
2139   30CF 43 4F 4D 45 
2139   30D3 20 41 4E 44 
2139   30D7 20 4C 45 41 
2139   30DB 52 4E 20 41 
2139   30DF 42 4F 55 54 
2139   30E3 20 20 20 20 
2139   30E7 20 20 00 
2140   30EA 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "         -- -- -- -- --         ", 0
2140   30EE 20 20 20 20 
2140   30F2 20 20 20 2D 
2140   30F6 2D 20 2D 2D 
2140   30FA 20 2D 2D 20 
2140   30FE 2D 2D 20 2D 
2140   3102 2D 20 20 20 
2140   3106 20 20 20 20 
2140   310A 20 20 00 
2141   310D 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "            -- -- --            ", 0
2141   3111 20 20 20 20 
2141   3115 20 20 20 20 
2141   3119 20 20 2D 2D 
2141   311D 20 2D 2D 20 
2141   3121 2D 2D 20 20 
2141   3125 20 20 20 20 
2141   3129 20 20 20 20 
2141   312D 20 20 00 
2142   3130 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "           VECTOR-06C           ", 0
2142   3134 20 20 20 20 
2142   3138 20 20 20 20 
2142   313C 20 56 45 43 
2142   3140 54 4F 52 2D 
2142   3144 30 36 43 20 
2142   3148 20 20 20 20 
2142   314C 20 20 20 20 
2142   3150 20 20 00 
2143   3153             
2144   3153                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2145   3153                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2146   3153 01 01 FD            .db 1, 1, 253
2147   3156 01 01 FD            .db 1, 1, 253
2148   3159             
2149   3159 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "                                ", 0   ; wipe previous
2149   315D 20 20 20 20 
2149   3161 20 20 20 20 
2149   3165 20 20 20 20 
2149   3169 20 20 20 20 
2149   316D 20 20 20 20 
2149   3171 20 20 20 20 
2149   3175 20 20 20 20 
2149   3179 20 20 00 
2150   317C 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "                                ", 0
2150   3180 20 20 20 20 
2150   3184 20 20 20 20 
2150   3188 20 20 20 20 
2150   318C 20 20 20 20 
2150   3190 20 20 20 20 
2150   3194 20 20 20 20 
2150   3198 20 20 20 20 
2150   319C 20 20 00 
2151   319F 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0
2151   31A3 20 20 20 20 
2151   31A7 20 20 20 20 
2151   31AB 20 20 20 20 
2151   31AF 20 20 20 20 
2151   31B3 20 20 20 20 
2151   31B7 20 20 20 20 
2151   31BB 20 20 20 20 
2151   31BF 20 20 00 
2152   31C2             
2153   31C2 50 00 20 20         .db TOPLINE - 80, 0,              "  CODE NEW DEMOS AND GAMES FOR  ", 0
2153   31C6 43 4F 44 45 
2153   31CA 20 4E 45 57 
2153   31CE 20 44 45 4D 
2153   31D2 4F 53 20 41 
2153   31D6 4E 44 20 47 
2153   31DA 41 4D 45 53 
2153   31DE 20 46 4F 52 
2153   31E2 20 20 00 
2154   31E5 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "           BEKTOP-06",20,"           ", 0
2154   31E9 20 20 20 20 
2154   31ED 20 20 20 20 
2154   31F1 20 42 45 4B 
2154   31F5 54 4F 50 2D 
2154   31F9 30 36 14 20 
2154   31FD 20 20 20 20 
2154   3201 20 20 20 20 
2154   3205 20 20 00 
2155   3208 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "   FOR ITS POWERFUL 8080A CPU   ", 0
2155   320C 20 46 4F 52 
2155   3210 20 49 54 53 
2155   3214 20 50 4F 57 
2155   3218 45 52 46 55 
2155   321C 4C 20 38 30 
2155   3220 38 30 41 20 
2155   3224 43 50 55 20 
2155   3228 20 20 00 
2156   322B 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "      (BEAUTIFUL MNEMONICS)     ", 0
2156   322F 20 20 20 20 
2156   3233 28 42 45 41 
2156   3237 55 54 49 46 
2156   323B 55 4C 20 4D 
2156   323F 4E 45 4D 4F 
2156   3243 4E 49 43 53 
2156   3247 29 20 20 20 
2156   324B 20 20 00 
2157   324E                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2158   324E                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2159   324E 01 01 FD            .db 1, 1, 253
2160   3251 01 01 FD            .db 1, 1, 253
2161   3254             
2162   3254 50 00 20 20         .db TOPLINE - 80, 0,              "                                ", 0
2162   3258 20 20 20 20 
2162   325C 20 20 20 20 
2162   3260 20 20 20 20 
2162   3264 20 20 20 20 
2162   3268 20 20 20 20 
2162   326C 20 20 20 20 
2162   3270 20 20 20 20 
2162   3274 20 20 00 
2163   3277 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "                                ", 0   ; wipe previous
2163   327B 20 20 20 20 
2163   327F 20 20 20 20 
2163   3283 20 20 20 20 
2163   3287 20 20 20 20 
2163   328B 20 20 20 20 
2163   328F 20 20 20 20 
2163   3293 20 20 20 20 
2163   3297 20 20 00 
2164   329A 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "                                ", 0
2164   329E 20 20 20 20 
2164   32A2 20 20 20 20 
2164   32A6 20 20 20 20 
2164   32AA 20 20 20 20 
2164   32AE 20 20 20 20 
2164   32B2 20 20 20 20 
2164   32B6 20 20 20 20 
2164   32BA 20 20 00 
2165   32BD 18 00 20 20         .db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2165   32C1 20 20 20 20 
2165   32C5 20 20 20 20 
2165   32C9 20 20 20 20 
2165   32CD 20 20 20 20 
2165   32D1 20 20 20 20 
2165   32D5 20 20 20 20 
2165   32D9 20 20 20 20 
2165   32DD 20 20 00 
2166   32E0             
2167   32E0 5E 00 20 20         .db TOPLINE - 80 + (LINEH*1), 0,  "     XCHG                       ", 0
2167   32E4 20 20 20 58 
2167   32E8 43 48 47 20 
2167   32EC 20 20 20 20 
2167   32F0 20 20 20 20 
2167   32F4 20 20 20 20 
2167   32F8 20 20 20 20 
2167   32FC 20 20 20 20 
2167   3300 20 20 00 
2168   3303 5E 00 20 20         .db TOPLINE - 80 + (LINEH*1), 0,  "                      DAD SP    ", 0
2168   3307 20 20 20 20 
2168   330B 20 20 20 20 
2168   330F 20 20 20 20 
2168   3313 20 20 20 20 
2168   3317 20 20 20 20 
2168   331B 44 41 44 20 
2168   331F 53 50 20 20 
2168   3323 20 20 00 
2169   3326 5E 00 20 20         .db TOPLINE - 80 + (LINEH*1), 0,  "            XTHL                ", 0
2169   332A 20 20 20 20 
2169   332E 20 20 20 20 
2169   3332 20 20 58 54 
2169   3336 48 4C 20 20 
2169   333A 20 20 20 20 
2169   333E 20 20 20 20 
2169   3342 20 20 20 20 
2169   3346 20 20 00 
2170   3349 5E 00 20 20         .db TOPLINE - 80 + (LINEH*1), 0,  "        SPHL                    ", 0
2170   334D 20 20 20 20 
2170   3351 20 20 53 50 
2170   3355 48 4C 20 20 
2170   3359 20 20 20 20 
2170   335D 20 20 20 20 
2170   3361 20 20 20 20 
2170   3365 20 20 20 20 
2170   3369 20 20 00 
2171   336C 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0     ; wipe "beautiful mnemonics"
2171   3370 20 20 20 20 
2171   3374 20 20 20 20 
2171   3378 20 20 20 20 
2171   337C 20 20 20 20 
2171   3380 20 20 20 20 
2171   3384 20 20 20 20 
2171   3388 20 20 20 20 
2171   338C 20 20 00 
2172   338F 5E 00 20 20         .db TOPLINE - 80 + (LINEH*1), 0,  "                                ", 0
2172   3393 20 20 20 20 
2172   3397 20 20 20 20 
2172   339B 20 20 20 20 
2172   339F 20 20 20 20 
2172   33A3 20 20 20 20 
2172   33A7 20 20 20 20 
2172   33AB 20 20 20 20 
2172   33AF 20 20 00 
2173   33B2 5E 00 20 20         .db TOPLINE - 80 + (LINEH*1), 0,  "                FHTAGN          ", 0
2173   33B6 20 20 20 20 
2173   33BA 20 20 20 20 
2173   33BE 20 20 20 20 
2173   33C2 20 20 46 48 
2173   33C6 54 41 47 4E 
2173   33CA 20 20 20 20 
2173   33CE 20 20 20 20 
2173   33D2 20 20 00 
2174   33D5 5E 00 20 20         .db TOPLINE - 80 + (LINEH*1), 0,  "                                ", 0
2174   33D9 20 20 20 20 
2174   33DD 20 20 20 20 
2174   33E1 20 20 20 20 
2174   33E5 20 20 20 20 
2174   33E9 20 20 20 20 
2174   33ED 20 20 20 20 
2174   33F1 20 20 20 20 
2174   33F5 20 20 00 
2175   33F8             
2176   33F8             
2177   33F8 A0 04 20 20         .db TOPLINE -  0, 4, "  KAPTOTEKA BEKTOPA-06",20,"  ", 0
2177   33FC 4B 41 50 54 
2177   3400 4F 54 45 4B 
2177   3404 41 20 42 45 
2177   3408 4B 54 4F 50 
2177   340C 41 2D 30 36 
2177   3410 14 20 20 00 
2178   3414             
2179   3414 50 00 20 20         .db TOPLINE - 80, 0,              "    WRITE MASSIVE TUNES  FOR    ", 0
2179   3418 20 20 57 52 
2179   341C 49 54 45 20 
2179   3420 4D 41 53 53 
2179   3424 49 56 45 20 
2179   3428 54 55 4E 45 
2179   342C 53 20 20 46 
2179   3430 4F 52 20 20 
2179   3434 20 20 00 
2180   3437 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "          THE AMAZING           ", 0
2180   343B 20 20 20 20 
2180   343F 20 20 20 20 
2180   3443 54 48 45 20 
2180   3447 41 4D 41 5A 
2180   344B 49 4E 47 20 
2180   344F 20 20 20 20 
2180   3453 20 20 20 20 
2180   3457 20 20 00 
2181   345A 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "         THE INCREDIBLE         ", 0
2181   345E 20 20 20 20 
2181   3462 20 20 20 54 
2181   3466 48 45 20 49 
2181   346A 4E 43 52 45 
2181   346E 44 49 42 4C 
2181   3472 45 20 20 20 
2181   3476 20 20 20 20 
2181   347A 20 20 00 
2182   347D 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "       THE SECOND TO NONE       ", 0
2182   3481 20 20 20 20 
2182   3485 20 54 48 45 
2182   3489 20 53 45 43 
2182   348D 4F 4E 44 20 
2182   3491 54 4F 20 4E 
2182   3495 4F 4E 45 20 
2182   3499 20 20 20 20 
2182   349D 20 20 00 
2183   34A0 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "           8253 (VI53)          ", 0
2183   34A4 20 20 20 20 
2183   34A8 20 20 20 20 
2183   34AC 20 38 32 35 
2183   34B0 33 20 28 56 
2183   34B4 49 35 33 29 
2183   34B8 20 20 20 20 
2183   34BC 20 20 20 20 
2183   34C0 20 20 00 
2184   34C3 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "         SOUND GENERATOR        ", 0
2184   34C7 20 20 20 20 
2184   34CB 20 20 20 53 
2184   34CF 4F 55 4E 44 
2184   34D3 20 47 45 4E 
2184   34D7 45 52 41 54 
2184   34DB 4F 52 20 20 
2184   34DF 20 20 20 20 
2184   34E3 20 20 00 
2185   34E6             
2186   34E6                     ;.db 1, 1, 254 ; launch fish
2187   34E6             
2188   34E6                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2189   34E6                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2190   34E6 01 01 FD            .db 1, 1, 253 ; delay
2191   34E9 01 01 FD            .db 1, 1, 253 ; delay
2192   34EC             
2193   34EC 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "                                ", 0   ; wipe previous
2193   34F0 20 20 20 20 
2193   34F4 20 20 20 20 
2193   34F8 20 20 20 20 
2193   34FC 20 20 20 20 
2193   3500 20 20 20 20 
2193   3504 20 20 20 20 
2193   3508 20 20 20 20 
2193   350C 20 20 00 
2194   350F 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "                                ", 0
2194   3513 20 20 20 20 
2194   3517 20 20 20 20 
2194   351B 20 20 20 20 
2194   351F 20 20 20 20 
2194   3523 20 20 20 20 
2194   3527 20 20 20 20 
2194   352B 20 20 20 20 
2194   352F 20 20 00 
2195   3532 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0
2195   3536 20 20 20 20 
2195   353A 20 20 20 20 
2195   353E 20 20 20 20 
2195   3542 20 20 20 20 
2195   3546 20 20 20 20 
2195   354A 20 20 20 20 
2195   354E 20 20 20 20 
2195   3552 20 20 00 
2196   3555             
2197   3555 50 00 20 20         .db TOPLINE - 80, 0,              "    WIN OLDSKOOL COMPOS WITH    ", 0
2197   3559 20 20 57 49 
2197   355D 4E 20 4F 4C 
2197   3561 44 53 4B 4F 
2197   3565 4F 4C 20 43 
2197   3569 4F 4D 50 4F 
2197   356D 53 20 57 49 
2197   3571 54 48 20 20 
2197   3575 20 20 00 
2198   3578 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "         -- -- -- -- --         ", 0
2198   357C 20 20 20 20 
2198   3580 20 20 20 2D 
2198   3584 2D 20 2D 2D 
2198   3588 20 2D 2D 20 
2198   358C 2D 2D 20 2D 
2198   3590 2D 20 20 20 
2198   3594 20 20 20 20 
2198   3598 20 20 00 
2199   359B 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "            -- -- --            ", 0
2199   359F 20 20 20 20 
2199   35A3 20 20 20 20 
2199   35A7 20 20 2D 2D 
2199   35AB 20 2D 2D 20 
2199   35AF 2D 2D 20 20 
2199   35B3 20 20 20 20 
2199   35B7 20 20 20 20 
2199   35BB 20 20 00 
2200   35BE 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "        BEKTOP-06",20," PRODS        ", 0
2200   35C2 20 20 20 20 
2200   35C6 20 20 42 45 
2200   35CA 4B 54 4F 50 
2200   35CE 2D 30 36 14 
2200   35D2 20 50 52 4F 
2200   35D6 44 53 20 20 
2200   35DA 20 20 20 20 
2200   35DE 20 20 00 
2201   35E1             
2202   35E1                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2203   35E1                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2204   35E1 01 01 FD            .db 1, 1, 253
2205   35E4 01 01 FD            .db 1, 1, 253
2206   35E7             
2207   35E7 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "                                ", 0   ; wipe previous
2207   35EB 20 20 20 20 
2207   35EF 20 20 20 20 
2207   35F3 20 20 20 20 
2207   35F7 20 20 20 20 
2207   35FB 20 20 20 20 
2207   35FF 20 20 20 20 
2207   3603 20 20 20 20 
2207   3607 20 20 00 
2208   360A 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "                                ", 0
2208   360E 20 20 20 20 
2208   3612 20 20 20 20 
2208   3616 20 20 20 20 
2208   361A 20 20 20 20 
2208   361E 20 20 20 20 
2208   3622 20 20 20 20 
2208   3626 20 20 20 20 
2208   362A 20 20 00 
2209   362D 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0
2209   3631 20 20 20 20 
2209   3635 20 20 20 20 
2209   3639 20 20 20 20 
2209   363D 20 20 20 20 
2209   3641 20 20 20 20 
2209   3645 20 20 20 20 
2209   3649 20 20 20 20 
2209   364D 20 20 00 
2210   3650             
2211   3650                     ;.db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0
2212   3650 01 01 FD            .db 1, 1, 253
2213   3653 50 00 20 20         .db TOPLINE - 80,             0,  "             CREDITS            ", 0
2213   3657 20 20 20 20 
2213   365B 20 20 20 20 
2213   365F 20 20 20 43 
2213   3663 52 45 44 49 
2213   3667 54 53 20 20 
2213   366B 20 20 20 20 
2213   366F 20 20 20 20 
2213   3673 20 20 00 
2214   3676 34 00 20 43         .db TOPLINE - 80 - (LINEH*2), 0,  " CODE, GFX, MUSIC ..... SVOFSKI ", 0
2214   367A 4F 44 45 2C 
2214   367E 20 47 46 58 
2214   3682 2C 20 4D 55 
2214   3686 53 49 43 20 
2214   368A 2E 2E 2E 2E 
2214   368E 2E 20 53 56 
2214   3692 4F 46 53 4B 
2214   3696 49 20 00 
2215   3699 26 00 20 4D         .db TOPLINE - 80 - (LINEH*3), 0,  " MAD CODE & BASS ....... IVAGOR ", 0
2215   369D 41 44 20 43 
2215   36A1 4F 44 45 20 
2215   36A5 26 20 42 41 
2215   36A9 53 53 20 2E 
2215   36AD 2E 2E 2E 2E 
2215   36B1 2E 2E 20 49 
2215   36B5 56 41 47 4F 
2215   36B9 52 20 00 
2216   36BC             
2217   36BC                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2218   36BC 01 01 FD            .db 1, 1, 253
2219   36BF             
2220   36BF 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "                                ", 0   ; wipe previous
2220   36C3 20 20 20 20 
2220   36C7 20 20 20 20 
2220   36CB 20 20 20 20 
2220   36CF 20 20 20 20 
2220   36D3 20 20 20 20 
2220   36D7 20 20 20 20 
2220   36DB 20 20 20 20 
2220   36DF 20 20 00 
2221   36E2 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "                                ", 0
2221   36E6 20 20 20 20 
2221   36EA 20 20 20 20 
2221   36EE 20 20 20 20 
2221   36F2 20 20 20 20 
2221   36F6 20 20 20 20 
2221   36FA 20 20 20 20 
2221   36FE 20 20 20 20 
2221   3702 20 20 00 
2222   3705 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0
2222   3709 20 20 20 20 
2222   370D 20 20 20 20 
2222   3711 20 20 20 20 
2222   3715 20 20 20 20 
2222   3719 20 20 20 20 
2222   371D 20 20 20 20 
2222   3721 20 20 20 20 
2222   3725 20 20 00 
2223   3728                     
2224   3728 42 00 20 45         .db TOPLINE - 80 - (LINEH*1), 0,  " ECHOING.MOD VARIATION FOR VI53 ", 0
2224   372C 43 48 4F 49 
2224   3730 4E 47 2E 4D 
2224   3734 4F 44 20 56 
2224   3738 41 52 49 41 
2224   373C 54 49 4F 4E 
2224   3740 20 46 4F 52 
2224   3744 20 56 49 35 
2224   3748 33 20 00 
2225   374B 34 00 20 42         .db TOPLINE - 80 - (LINEH*2), 0,  " BY SVOFSKI FEAT IVAGOR ON BEHS ", 0
2225   374F 59 20 53 56 
2225   3753 4F 46 53 4B 
2225   3757 49 20 46 45 
2225   375B 41 54 20 49 
2225   375F 56 41 47 4F 
2225   3763 52 20 4F 4E 
2225   3767 20 42 45 48 
2225   376B 53 20 00 
2226   376E 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "     - OG AUTHOR UNKNOWN -      ", 0
2226   3772 20 20 20 2D 
2226   3776 20 4F 47 20 
2226   377A 41 55 54 48 
2226   377E 4F 52 20 55 
2226   3782 4E 4B 4E 4F 
2226   3786 57 4E 20 2D 
2226   378A 20 20 20 20 
2226   378E 20 20 00 
2227   3791             
2228   3791                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2229   3791 01 01 FD            .db 1, 1, 253
2230   3794             
2231   3794 A0 04 20 20         .db TOPLINE -  0, 4, "  KPOTOTEKA", 0
2231   3798 4B 50 4F 54 
2231   379C 4F 54 45 4B 
2231   37A0 41 00 
2232   37A2             
2233   37A2 50 00 20 20         .db TOPLINE - 80 - (LINEH*0), 0,  "                                ", 0
2233   37A6 20 20 20 20 
2233   37AA 20 20 20 20 
2233   37AE 20 20 20 20 
2233   37B2 20 20 20 20 
2233   37B6 20 20 20 20 
2233   37BA 20 20 20 20 
2233   37BE 20 20 20 20 
2233   37C2 20 20 00 
2234   37C5 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "                                ", 0   ; wipe previous
2234   37C9 20 20 20 20 
2234   37CD 20 20 20 20 
2234   37D1 20 20 20 20 
2234   37D5 20 20 20 20 
2234   37D9 20 20 20 20 
2234   37DD 20 20 20 20 
2234   37E1 20 20 20 20 
2234   37E5 20 20 00 
2235   37E8 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "                                ", 0
2235   37EC 20 20 20 20 
2235   37F0 20 20 20 20 
2235   37F4 20 20 20 20 
2235   37F8 20 20 20 20 
2235   37FC 20 20 20 20 
2235   3800 20 20 20 20 
2235   3804 20 20 20 20 
2235   3808 20 20 00 
2236   380B 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0
2236   380F 20 20 20 20 
2236   3813 20 20 20 20 
2236   3817 20 20 20 20 
2236   381B 20 20 20 20 
2236   381F 20 20 20 20 
2236   3823 20 20 20 20 
2236   3827 20 20 20 20 
2236   382B 20 20 00 
2237   382E             
2238   382E 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "      GREETINGS OUTLINE \\o/     ", 0
2238   3832 20 20 20 20 
2238   3836 47 52 45 45 
2238   383A 54 49 4E 47 
2238   383E 53 20 4F 55 
2238   3842 54 4C 49 4E 
2238   3846 45 20 5C 6F 
2238   384A 2F 20 20 20 
2238   384E 20 20 00 
2239   3851 01 01 FD            .db 1, 1, 253
2240   3854 01 01 FE            .db 1, 1, 254 ; launch fish
2241   3857 01 01 FD            .db 1, 1, 253
2242   385A 01 01 FD            .db 1, 1, 253
2243   385D 01 01 FD            .db 1, 1, 253
2244   3860 01 01 FD            .db 1, 1, 253
2245   3863 01 01 FD            .db 1, 1, 253
2246   3866 01 01 FD            .db 1, 1, 253
2247   3869                     
2248   3869                     ;.db TOPLINE - 80 - (LINEH*0), 0,  "                                ", 0
2249   3869                     ;.db TOPLINE - 80 - (LINEH*0), 0,  "                                ", 0
2250   3869                     ;.db TOPLINE - 80 - (LINEH*0), 0,  "                                ", 0
2251   3869                     ;.db TOPLINE - 80 - (LINEH*1), 0,  "                                ", 0   ; wipe previous
2252   3869                     ;.db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0
2253   3869 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "                                ", 0
2253   386D 20 20 20 20 
2253   3871 20 20 20 20 
2253   3875 20 20 20 20 
2253   3879 20 20 20 20 
2253   387D 20 20 20 20 
2253   3881 20 20 20 20 
2253   3885 20 20 20 20 
2253   3889 20 20 00 
2254   388C             
2255   388C 01 01 FF            .db 1, 1, 255
2256   388F             
2257   388F                     .ds 32  ; there's a bug with alignment somewhere!
2258   38AF             
2259   38AF 53 56 4F 46 msg_minus1: .db "SVOFSKI & IVAGOR", 0
2259   38B3 53 4B 49 20 
2259   38B7 26 20 49 56 
2259   38BB 41 47 4F 52 
2259   38BF 00 
2260   38C0             
2261   38C0             
2262   38E0                     .org 020h + ($ & 0ffe0h)  ; ALIGN 32
2263   38E0             zero_init_start:
2264   38E0             
2265   38E0 00 00       intcount:   .dw 0
2266   38E2 00          frametime:  .db 0 ; interrupts between oneframe
2267   38E3 00          frame_no:   .db 0
2268   38E4 00          anim_pos:   .db 0
2269   38E5             
2270   38E5             pal_0:
2271   38E5 00 00 00 00             .db 0, 0, 0, 0
2272   38E9 00 00 00 00             .db 0, 0, 0, 0
2273   38ED 00 00 00 00             .db 0, 0, 0, 0
2274   38F1 00 00 00 00             .db 0, 0, 0, 0
2275   38F5 00 00       pal_a_ptr:  .dw 0
2276   38F7 00 00       pal_b_ptr:  .dw 0
2277   38F9             pal_fade_a: .ds 16
2278   3909             pal_fade_b: .ds 16
2279   3919             pal_zero_end:
2280   3919             
2281   3919 00          fade_in_flag:       .db 0
2282   391A 00          slowprint_enabled:  .db 0
2283   391B 00          slow_msg_state:     .db 0
2284   391C 00 00       slow_msg_ptr:       .dw 0
2285   391E 00 00       slow_msg_loop:      .dw 0
2286   3920             
2287   3920             ; fish vars
2288   3920 00          fish_wraparound_flag:   .db 0
2289   3921             ;msgseq_end_flag:        .db 0
2290   3921                             ; ORDER IMPORTANT
2291   3921 00          fish_col_frac:    .db 0
2292   3922 00          fish_col:         .db 0
2293   3923 00          fish_enabled:     .db 0
2294   3924             
2295   3924             
2296   3940                     .org 020h + ($ & 0ffe0h)  ; ALIGN 32
2297   3940             zero_init_end:
2298   3940             
2299   3940                     ; big logo
2300   3940                     .include "blksbr.inc"
0001+  3940             ; Opened image graphics/blksbr.png 128x32
0002+  3940             ;                                                                                                                                  
0003+  3940             ;                                                                                                                                  
0004+  3940             ;              111111     1111       11111       111111                    1111111              11111 11111111         1111        
0005+  3940             ;           1112222221   122221     1222221     12222221                  122222221 1111111111112222212222222111      122221       
0006+  3940             ;     1111112222111121   121121     1211121     12111121                 1221111122122222222222221112111111122211    1221121       
0007+  3940             ;    12222222111111121   1211221    1211121     12111121                122111111122121111111111111121211111112221   1211121       
0008+  3940             ;    12111111111121221   1211121    1211121     1211121                1221111111112212111211221121221112222111121   1211121       
0009+  3940             ;    1211211222222221    12111221   1211121    1221121                12212111111112212122122112222221212111221121   1211121       
0010+  3940             ;    121222211111111    122111121   1212121    121121                112122121212122122222222222222212221   1211221  1212121       
0011+  3940             ;    1212121            1211111121  1211121   1221221                12221222222322122221221111111112121    1222321  1221221       
0012+  3940             ;    1222221            1211121221  1211121 11221221      1111      112212211112221222122221     1222221    1232221  1222221       
0013+  3940             ;    1212121           122122221121 121222112212221      122221     1221221    1211222222211     1221221   11222121  121221        
0014+  3940             ;    1222221   1111    122221222221 12221212222211       122221     1212221    111122221221      1212121  112221221  122221        
0015+  3940             ;    1221221  122221   1212121221221122222221121     111111221111   122211      1 121222221 11111122121111221212221  122221        
0016+  3940             ;    1212221 12212221  122222122222122212222221      1222222222221 1222221        122222211122222121222222222222211  122121        
0017+  3940             ;    12222211221212211 212222112212212221212211      1222222222221 1222221        12222121122212221222122121222221   122221        
0018+  3940             ;    122212122222222212221221 121222122222221221    1222222222221  1222221       12222222222222222212222222222221    12221         
0019+  3940             ;    122222221112221212222221  122121122212222221   1222222222221  1222221       1222222222112222221222122222211     12221         
0020+  3940             ;    12222221   1222212222221  1222222122222222221   11112221111   1222221       12222221111122222212222211111       12221         
0021+  3940             ;    1222221    122221222221    1222212222222222221    122221      1222221       12222221   1222222122221            12221         
0022+  3940             ;    1222221    122221222221    12222122222122222221   122221      11222221   11 12222221   1222222122221            12221         
0023+  3940             ;    1222221  11222221222221     12222122221122222221   1111        122222211122112222221   1222222122221            1221          
0024+  3940             ;    1222221112222221222221      122222122211122222221              122222222222112222221 112222222122221             11           
0025+  3940             ;    1222222222222221222221      12222212221  122222221             1122222222222122222211122222221222221                          
0026+  3940             ;    1222222222222212222221       1222221221   122222221             122222222222122222222222222221222221             111          
0027+  3940             ;    122222222222212222221        1222222121    122222221             12222222222212222222222222111222221            12221         
0028+  3940             ;    1222222221111 1222221         122222111     12222221              12222222221122222222222111 1222221           122221         
0029+  3940             ;    1222111111    1112221          1111111       122211                112222221  111111111111   1222221           12221          
0030+  3940             ;     111             111                          111                   1111111                   11111             111           
0031+  3940             ;                                                                                                                                  
0032+  3940             ;                                                                                                                                  
0033+  3940             ;                                                                                                                                  
0034+  3940             harzakc0:
0035+  3940 09 2D 00 00 .db 9, 45 ,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0035+  3944 00 00 00 00 
0035+  3948 00 00 00 00 
0035+  394C 00 00 00 00 
0036+  3950 09 28 00 00 .db 9, 40 ,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0036+  3954 00 00 00 00 
0036+  3958 00 00 00 00 
0036+  395C 00 00 00 00 
0036+  3960 00 00 
0037+  3962 08 28 00 0F .db 8, 40 ,$00,$0f,$c1,$e0,$3e,$03,$f0,$00,$00,$fe,$00,$07,$df,$e0,$0f,$00
0037+  3966 C1 E0 3E 03 
0037+  396A F0 00 00 FE 
0037+  396E 00 07 DF E0 
0037+  3972 0F 00 
0038+  3974 08 28 00 70 .db 8, 40 ,$00,$70,$22,$10,$41,$04,$08,$00,$01,$01,$7f,$f8,$20,$38,$10,$80
0038+  3978 22 10 41 04 
0038+  397C 08 00 01 01 
0038+  3980 7F F8 20 38 
0038+  3984 10 80 
0039+  3986 08 28 1F 87 .db 8, 40 ,$1f,$87,$a2,$d0,$5d,$05,$e8,$00,$02,$7c,$80,$03,$bf,$8c,$26,$80
0039+  398A A2 D0 5D 05 
0039+  398E E8 00 02 7C 
0039+  3992 80 03 BF 8C 
0039+  3996 26 80 
0040+  3998 08 28 20 3F .db 8, 40 ,$20,$3f,$a2,$c8,$5d,$05,$e8,$00,$04,$fe,$5f,$ff,$af,$e2,$2e,$80
0040+  399C A2 C8 5D 05 
0040+  39A0 E8 00 04 FE 
0040+  39A4 5F FF AF E2 
0040+  39A8 2E 80 
0041+  39AA 08 28 2F FD .db 8, 40 ,$2f,$fd,$22,$e8,$5d,$05,$d0,$00,$09,$ff,$2e,$cd,$38,$7a,$2e,$80
0041+  39AE 22 E8 5D 05 
0041+  39B2 D0 00 09 FF 
0041+  39B6 2E CD 38 7A 
0041+  39BA 2E 80 
0042+  39BC 08 28 2D 80 .db 8, 40 ,$2d,$80,$42,$e4,$5d,$09,$a0,$00,$12,$ff,$29,$30,$2b,$9a,$2e,$80
0042+  39C0 42 E4 5D 09 
0042+  39C4 A0 00 12 FF 
0042+  39C8 29 30 2B 9A 
0042+  39CC 2E 80 
0043+  39CE 08 28 28 7F .db 8, 40 ,$28,$7f,$84,$f4,$55,$0b,$40,$00,$34,$aa,$40,$00,$44,$59,$2a,$80
0043+  39D2 84 F4 55 0B 
0043+  39D6 40 00 34 AA 
0043+  39DA 40 00 44 59 
0043+  39DE 2A 80 
0044+  39E0 08 28 2A 80 .db 8, 40 ,$2a,$80,$05,$fa,$5d,$12,$40,$00,$22,$04,$84,$ff,$a8,$45,$24,$80
0044+  39E4 05 FA 5D 12 
0044+  39E8 40 00 22 04 
0044+  39EC 84 FF A8 45 
0044+  39F0 24 80 
0045+  39F2 08 28 20 80 .db 8, 40 ,$20,$80,$05,$d2,$5d,$64,$81,$e0,$64,$f1,$10,$82,$08,$51,$20,$80
0045+  39F6 05 D2 5D 64 
0045+  39FA 81 E0 64 F1 
0045+  39FE 10 82 08 51 
0045+  3A02 20 80 
0046+  3A04 08 28 2A 80 .db 8, 40 ,$2a,$80,$09,$0d,$51,$91,$02,$10,$49,$0b,$01,$82,$48,$c5,$29,$00
0046+  3A08 09 0D 51 91 
0046+  3A0C 02 10 49 0B 
0046+  3A10 01 82 48 C5 
0046+  3A14 29 00 
0047+  3A16 08 28 20 8F .db 8, 40 ,$20,$8f,$08,$41,$45,$06,$02,$10,$51,$0f,$09,$02,$a9,$89,$21,$00
0047+  3A1A 08 41 45 06 
0047+  3A1E 02 10 51 0F 
0047+  3A22 09 02 A9 89 
0047+  3A26 21 00 
0048+  3A28 08 28 24 90 .db 8, 40 ,$24,$90,$8a,$a4,$c0,$68,$3f,$3c,$46,$05,$41,$7e,$5e,$51,$21,$00
0048+  3A2C 8A A4 C0 68 
0048+  3A30 3F 3C 46 05 
0048+  3A34 41 7E 5E 51 
0048+  3A38 21 00 
0049+  3A3A 08 28 28 A4 .db 8, 40 ,$28,$a4,$48,$20,$88,$10,$20,$02,$82,$01,$03,$82,$80,$03,$25,$00
0049+  3A3E 48 20 88 10 
0049+  3A42 20 02 82 01 
0049+  3A46 03 82 80 03 
0049+  3A4A 25 00 
0050+  3A4C 08 28 20 CA .db 8, 40 ,$20,$ca,$64,$32,$45,$30,$20,$02,$82,$01,$0b,$11,$12,$82,$21,$00
0050+  3A50 64 32 45 30 
0050+  3A54 20 02 82 01 
0050+  3A58 0B 11 12 82 
0050+  3A5C 21 00 
0051+  3A5E 08 28 22 80 .db 8, 40 ,$22,$80,$22,$54,$40,$48,$40,$04,$82,$02,$00,$00,$80,$04,$22,$00
0051+  3A62 22 54 40 48 
0051+  3A66 40 04 82 02 
0051+  3A6A 00 00 80 04 
0051+  3A6E 22 00 
0052+  3A70 08 28 20 38 .db 8, 40 ,$20,$38,$a0,$49,$62,$04,$40,$04,$82,$02,$00,$c0,$88,$18,$22,$00
0052+  3A74 A0 49 62 04 
0052+  3A78 40 04 82 02 
0052+  3A7C 00 C0 88 18 
0052+  3A80 22 00 
0053+  3A82 08 28 20 44 .db 8, 40 ,$20,$44,$20,$48,$10,$02,$3c,$78,$82,$02,$07,$c0,$83,$e0,$22,$00
0053+  3A86 20 48 10 02 
0053+  3A8A 3C 78 82 02 
0053+  3A8E 07 C0 83 E0 
0053+  3A92 22 00 
0054+  3A94 08 28 20 84 .db 8, 40 ,$20,$84,$20,$84,$20,$01,$08,$40,$82,$02,$04,$40,$84,$00,$22,$00
0054+  3A98 20 84 20 01 
0054+  3A9C 08 40 82 02 
0054+  3AA0 04 40 84 00 
0054+  3AA4 22 00 
0055+  3AA6 08 28 20 84 .db 8, 40 ,$20,$84,$20,$84,$20,$80,$88,$40,$c1,$1a,$04,$40,$84,$00,$22,$00
0055+  3AAA 20 84 20 80 
0055+  3AAE 88 40 C1 1A 
0055+  3AB2 04 40 84 00 
0055+  3AB6 22 00 
0056+  3AB8 08 28 20 98 .db 8, 40 ,$20,$98,$20,$82,$10,$c0,$47,$80,$40,$e6,$04,$40,$84,$00,$24,$00
0056+  3ABC 20 82 10 C0 
0056+  3AC0 47 80 40 E6 
0056+  3AC4 04 40 84 00 
0056+  3AC8 24 00 
0057+  3ACA 08 28 20 E0 .db 8, 40 ,$20,$e0,$41,$02,$08,$e0,$20,$00,$40,$06,$05,$80,$84,$00,$18,$00
0057+  3ACE 41 02 08 E0 
0057+  3AD2 20 00 40 06 
0057+  3AD6 05 80 84 00 
0057+  3ADA 18 00 
0058+  3ADC 08 28 20 00 .db 8, 40 ,$20,$00,$41,$02,$08,$90,$10,$00,$60,$02,$07,$01,$04,$00,$00,$00
0058+  3AE0 41 02 08 90 
0058+  3AE4 10 00 60 02 
0058+  3AE8 07 01 04 00 
0058+  3AEC 00 00 
0059+  3AEE 08 28 20 00 .db 8, 40 ,$20,$00,$81,$01,$04,$88,$08,$00,$20,$02,$00,$01,$04,$00,$1c,$00
0059+  3AF2 81 01 04 88 
0059+  3AF6 08 00 20 02 
0059+  3AFA 00 01 04 00 
0059+  3AFE 1C 00 
0060+  3B00 08 28 20 01 .db 8, 40 ,$20,$01,$02,$01,$02,$84,$04,$00,$10,$01,$00,$07,$04,$00,$22,$00
0060+  3B04 02 01 02 84 
0060+  3B08 04 00 10 01 
0060+  3B0C 00 07 04 00 
0060+  3B10 22 00 
0061+  3B12 08 28 20 1E .db 8, 40 ,$20,$1e,$82,$00,$83,$82,$04,$00,$08,$03,$00,$1d,$04,$00,$42,$00
0061+  3B16 82 00 83 82 
0061+  3B1A 04 00 08 03 
0061+  3B1E 00 1D 04 00 
0061+  3B22 42 00 
0062+  3B24 08 28 23 F0 .db 8, 40 ,$23,$f0,$e2,$00,$7f,$01,$18,$00,$06,$04,$ff,$f1,$04,$00,$44,$00
0062+  3B28 E2 00 7F 01 
0062+  3B2C 18 00 06 04 
0062+  3B30 FF F1 04 00 
0062+  3B34 44 00 
0063+  3B36 08 28 1C 00 .db 8, 40 ,$1c,$00,$1c,$00,$00,$00,$e0,$00,$03,$f8,$00,$00,$f8,$00,$38,$00
0063+  3B3A 1C 00 00 00 
0063+  3B3E E0 00 03 F8 
0063+  3B42 00 00 F8 00 
0063+  3B46 38 00 
0064+  3B48 08 28 00 00 .db 8, 40 ,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0064+  3B4C 00 00 00 00 
0064+  3B50 00 00 00 00 
0064+  3B54 00 00 00 00 
0064+  3B58 00 00 
0065+  3B5A 08 28 00 00 .db 8, 40 ,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0065+  3B5E 00 00 00 00 
0065+  3B62 00 00 00 00 
0065+  3B66 00 00 00 00 
0065+  3B6A 00 00 
0066+  3B6C 18 50       .db 24, 80 
0067+  3B6E FF FF       .db 255, 255 ; end of plane data
0068+  3B70             harzakc1:
0069+  3B70 18 50       .db 24, 80 
0070+  3B72 09 2D 00 00 .db 9, 45 ,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0070+  3B76 00 00 00 00 
0070+  3B7A 00 00 00 00 
0070+  3B7E 00 00 00 00 
0071+  3B82 09 2D 00 00 .db 9, 45 ,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0071+  3B86 00 00 00 00 
0071+  3B8A 00 00 00 00 
0071+  3B8E 00 00 00 00 
0072+  3B92 08 28 00 0F .db 8, 40 ,$00,$0f,$c1,$e0,$3e,$03,$f0,$00,$00,$fe,$00,$07,$df,$c0,$0f,$00
0072+  3B96 C1 E0 3E 03 
0072+  3B9A F0 00 00 FE 
0072+  3B9E 00 07 DF C0 
0072+  3BA2 0F 00 
0073+  3BA4 08 28 00 78 .db 8, 40 ,$00,$78,$41,$20,$22,$02,$10,$00,$01,$83,$7f,$fc,$40,$70,$19,$00
0073+  3BA8 41 20 22 02 
0073+  3BAC 10 00 01 83 
0073+  3BB0 7F FC 40 70 
0073+  3BB4 19 00 
0074+  3BB6 08 28 1F C0 .db 8, 40 ,$1f,$c0,$41,$30,$22,$02,$10,$00,$03,$01,$a0,$00,$50,$1c,$11,$00
0074+  3BBA 41 30 22 02 
0074+  3BBE 10 00 03 01 
0074+  3BC2 A0 00 50 1C 
0074+  3BC6 11 00 
0075+  3BC8 08 28 10 02 .db 8, 40 ,$10,$02,$c1,$10,$22,$02,$20,$00,$06,$00,$d1,$32,$c7,$84,$11,$00
0075+  3BCC C1 10 22 02 
0075+  3BD0 20 00 06 00 
0075+  3BD4 D1 32 C7 84 
0075+  3BD8 11 00 
0076+  3BDA 08 28 12 7F .db 8, 40 ,$12,$7f,$81,$18,$22,$06,$40,$00,$0d,$00,$d6,$cf,$d4,$64,$11,$00
0076+  3BDE 81 18 22 06 
0076+  3BE2 40 00 0D 00 
0076+  3BE6 D6 CF D4 64 
0076+  3BEA 11 00 
0077+  3BEC 08 28 17 80 .db 8, 40 ,$17,$80,$03,$08,$2a,$04,$80,$00,$0b,$55,$bf,$ff,$b8,$26,$15,$00
0077+  3BF0 03 08 2A 04 
0077+  3BF4 80 00 0B 55 
0077+  3BF8 BF FF B8 26 
0077+  3BFC 15 00 
0078+  3BFE 08 28 15 00 .db 8, 40 ,$15,$00,$02,$04,$22,$0d,$80,$00,$1d,$ff,$7b,$00,$50,$3e,$1b,$00
0078+  3C02 02 04 22 0D 
0078+  3C06 80 00 1D FF 
0078+  3C0A 7B 00 50 3E 
0078+  3C0E 1B 00 
0079+  3C10 08 28 1F 00 .db 8, 40 ,$1f,$00,$02,$2c,$22,$1b,$00,$00,$1b,$0e,$ef,$01,$f0,$3e,$1f,$00
0079+  3C14 02 2C 22 1B 
0079+  3C18 00 00 1B 0E 
0079+  3C1C EF 01 F0 3E 
0079+  3C20 1F 00 
0080+  3C22 08 28 15 00 .db 8, 40 ,$15,$00,$06,$f2,$2e,$6e,$01,$e0,$36,$04,$fe,$01,$b0,$3a,$16,$00
0080+  3C26 06 F2 2E 6E 
0080+  3C2A 01 E0 36 04 
0080+  3C2E FE 01 B0 3A 
0080+  3C32 16 00 
0081+  3C34 08 28 1F 00 .db 8, 40 ,$1f,$00,$07,$be,$3a,$f8,$01,$e0,$2e,$00,$f6,$01,$50,$76,$1e,$00
0081+  3C38 07 BE 3A F8 
0081+  3C3C 01 E0 2E 00 
0081+  3C40 F6 01 50 76 
0081+  3C44 1E 00 
0082+  3C46 08 28 1B 0F .db 8, 40 ,$1b,$0f,$05,$5b,$3f,$90,$00,$c0,$38,$00,$be,$01,$a1,$ae,$1e,$00
0082+  3C4A 05 5B 3F 90 
0082+  3C4E 00 C0 38 00 
0082+  3C52 BE 01 A1 AE 
0082+  3C56 1E 00 
0083+  3C58 08 28 17 1B .db 8, 40 ,$17,$1b,$87,$df,$77,$e0,$1f,$fc,$7c,$00,$fc,$7d,$7f,$fc,$1a,$00
0083+  3C5C 87 DF 77 E0 
0083+  3C60 1F FC 7C 00 
0083+  3C64 FC 7D 7F FC 
0083+  3C68 1A 00 
0084+  3C6A 08 28 1F 35 .db 8, 40 ,$1f,$35,$8b,$cd,$ba,$c0,$1f,$fc,$7c,$00,$f4,$ee,$ed,$7c,$1e,$00
0084+  3C6E 8B CD BA C0 
0084+  3C72 1F FC 7C 00 
0084+  3C76 F4 EE ED 7C 
0084+  3C7A 1E 00 
0085+  3C7C 08 28 1D 7F .db 8, 40 ,$1d,$7f,$dd,$8b,$bf,$b0,$3f,$f8,$7c,$01,$ff,$ff,$7f,$f8,$1c,$00
0085+  3C80 DD 8B BF B0 
0085+  3C84 3F F8 7C 01 
0085+  3C88 FF FF 7F F8 
0085+  3C8C 1C 00 
0086+  3C8E 08 28 1F C7 .db 8, 40 ,$1f,$c7,$5f,$86,$9d,$f8,$3f,$f8,$7c,$01,$ff,$3f,$77,$e0,$1c,$00
0086+  3C92 5F 86 9D F8 
0086+  3C96 3F F8 7C 01 
0086+  3C9A FF 3F 77 E0 
0086+  3C9E 1C 00 
0087+  3CA0 08 28 1F 83 .db 8, 40 ,$1f,$83,$df,$87,$ef,$fc,$03,$80,$7c,$01,$f8,$3f,$7c,$00,$1c,$00
0087+  3CA4 DF 87 EF FC 
0087+  3CA8 03 80 7C 01 
0087+  3CAC F8 3F 7C 00 
0087+  3CB0 1C 00 
0088+  3CB2 08 28 1F 03 .db 8, 40 ,$1f,$03,$df,$03,$df,$fe,$07,$80,$7c,$01,$f8,$3f,$78,$00,$1c,$00
0088+  3CB6 DF 03 DF FE 
0088+  3CBA 07 80 7C 01 
0088+  3CBE F8 3F 78 00 
0088+  3CC2 1C 00 
0089+  3CC4 08 28 1F 03 .db 8, 40 ,$1f,$03,$df,$03,$df,$7f,$07,$80,$3e,$01,$f8,$3f,$78,$00,$1c,$00
0089+  3CC8 DF 03 DF 7F 
0089+  3CCC 07 80 3E 01 
0089+  3CD0 F8 3F 78 00 
0089+  3CD4 1C 00 
0090+  3CD6 08 28 1F 07 .db 8, 40 ,$1f,$07,$df,$01,$ef,$3f,$80,$00,$3f,$19,$f8,$3f,$78,$00,$18,$00
0090+  3CDA DF 01 EF 3F 
0090+  3CDE 80 00 3F 19 
0090+  3CE2 F8 3F 78 00 
0090+  3CE6 18 00 
0091+  3CE8 08 28 1F 1F .db 8, 40 ,$1f,$1f,$be,$01,$f7,$1f,$c0,$00,$3f,$f9,$f8,$7f,$78,$00,$00,$00
0091+  3CEC BE 01 F7 1F 
0091+  3CF0 C0 00 3F F9 
0091+  3CF4 F8 7F 78 00 
0091+  3CF8 00 00 
0092+  3CFA 08 28 1F FF .db 8, 40 ,$1f,$ff,$be,$01,$f7,$0f,$e0,$00,$1f,$fd,$f8,$fe,$f8,$00,$00,$00
0092+  3CFE BE 01 F7 0F 
0092+  3D02 E0 00 1F FD 
0092+  3D06 F8 FE F8 00 
0092+  3D0A 00 00 
0093+  3D0C 08 28 1F FF .db 8, 40 ,$1f,$ff,$7e,$00,$fb,$07,$f0,$00,$1f,$fd,$ff,$fe,$f8,$00,$00,$00
0093+  3D10 7E 00 FB 07 
0093+  3D14 F0 00 1F FD 
0093+  3D18 FF FE F8 00 
0093+  3D1C 00 00 
0094+  3D1E 08 28 1F FE .db 8, 40 ,$1f,$fe,$fc,$00,$fd,$03,$f8,$00,$0f,$fe,$ff,$f8,$f8,$00,$1c,$00
0094+  3D22 FC 00 FD 03 
0094+  3D26 F8 00 0F FE 
0094+  3D2A FF F8 F8 00 
0094+  3D2E 1C 00 
0095+  3D30 08 28 1F E0 .db 8, 40 ,$1f,$e0,$7c,$00,$7c,$01,$f8,$00,$07,$fc,$ff,$e0,$f8,$00,$3c,$00
0095+  3D34 7C 00 7C 01 
0095+  3D38 F8 00 07 FC 
0095+  3D3C FF E0 F8 00 
0095+  3D40 3C 00 
0096+  3D42 08 28 1C 00 .db 8, 40 ,$1c,$00,$1c,$00,$00,$00,$e0,$00,$01,$f8,$00,$00,$f8,$00,$38,$00
0096+  3D46 1C 00 00 00 
0096+  3D4A E0 00 01 F8 
0096+  3D4E 00 00 F8 00 
0096+  3D52 38 00 
0097+  3D54 08 28 00 00 .db 8, 40 ,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0097+  3D58 00 00 00 00 
0097+  3D5C 00 00 00 00 
0097+  3D60 00 00 00 00 
0097+  3D64 00 00 
0098+  3D66 08 28 00 00 .db 8, 40 ,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0098+  3D6A 00 00 00 00 
0098+  3D6E 00 00 00 00 
0098+  3D72 00 00 00 00 
0098+  3D76 00 00 
0099+  3D78 18 50       .db 24, 80 
0100+  3D7A 18 50       .db 24, 80 
0101+  3D7C FF FF       .db 255, 255 ; end of plane data
2301   3D7E             
2302   3D7E                     ; big time textuality
2303   3D7E                     .include "font8x8.inc"
0001+  3D7E                 ; —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–∏–º–≤–æ–ª–∞
0002+  3D7E                 ; H = —Å—Ç–æ–ª–±–µ—Ü, L = —Å—Ç—Ä–æ–∫–∞ ($F8 = –≤–µ—Ä—Ö–Ω—è—è)
0003+  3D7E             gotoxy:
0004+  3D7E 22 B4 3D        shld _puts_de
0005+  3D81 C9              ret
0006+  3D82             
0007+  3D82             wipestr:
0008+  3D82 F5              push psw
0009+  3D83 E5              push h
0010+  3D84                 ; —Å—Ç–µ—Ä–µ—Ç—å —Å—Ç—Ä–æ–∫—É –ø–æ–ª–Ω–æ—Å—Ç—å—é
0011+  3D84 3A E8 3D        lda _putchar_msb
0012+  3D87 67              mov h, a
0013+  3D88 3A B4 3D        lda _puts_de
0014+  3D8B 6F              mov l, a
0015+  3D8C             
0016+  3D8C 0E 20           mvi c, 32
0017+  3D8E 45              mov b, l
0018+  3D8F AF              xra a
0019+  3D90             
0020+  3D90             wipestr_l1:
0021+  3D90 77              mov m, a \ dcr l \ mov m, a \ dcr l \ mov m, a \ dcr l \ mov m, a \ dcr l 
0021+  3D91 2D          
0021+  3D92 77          
0021+  3D93 2D          
0021+  3D94 77          
0021+  3D95 2D          
0021+  3D96 77          
0021+  3D97 2D          
0022+  3D98 77              mov m, a \ dcr l \ mov m, a \ dcr l \ mov m, a \ dcr l \ mov m, a
0022+  3D99 2D          
0022+  3D9A 77          
0022+  3D9B 2D          
0022+  3D9C 77          
0022+  3D9D 2D          
0022+  3D9E 77          
0023+  3D9F 68              mov l, b
0024+  3DA0 24              inr h
0025+  3DA1 0D              dcr c
0026+  3DA2 C2 90 3D        jnz wipestr_l1
0027+  3DA5             
0028+  3DA5 E1              pop h
0029+  3DA6 F1              pop psw
0030+  3DA7 C9              ret
0031+  3DA8             
0032+  3DA8                 ; –í—ã–≤–µ—Å—Ç–∏ 0-—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω—É—é —Å—Ç—Ä–æ–∫—É –≤ HL –Ω–∞ —ç–∫—Ä–∞–Ω
0033+  3DA8             puts:
0034+  3DA8 22 B2 3D        shld _puts_sptr
0035+  3DAB             _puts_1:
0036+  3DAB CD B6 3D        call _putchar
0037+  3DAE C2 AB 3D        jnz _puts_1
0038+  3DB1 C9              ret
0039+  3DB2             
0040+  3DB2 00 00       _puts_sptr:   .dw 0
0041+  3DB4 00 00       _puts_de:     .dw 0
0042+  3DB6             
0043+  3DB6                 ; –ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª
0044+  3DB6             _putchar:
0045+  3DB6 2A B2 3D        lhld _puts_sptr
0046+  3DB9 7E              mov a, m
0047+  3DBA B7              ora a
0048+  3DBB C8              rz
0049+  3DBC 4F              mov c, a
0050+  3DBD 23              inx h
0051+  3DBE 22 B2 3D        shld _puts_sptr
0052+  3DC1 EB              xchg
0053+  3DC2 2A B4 3D        lhld _puts_de
0054+  3DC5 24              inr h
0055+  3DC6 22 B4 3D        shld _puts_de
0056+  3DC9 25              dcr h
0057+  3DCA EB              xchg
0058+  3DCB             _putchar_c:
0059+  3DCB F3              di
0060+  3DCC 21 00 00        lxi h,0
0061+  3DCF 39              dad sp
0062+  3DD0 22 FF 3D        shld _pch_sp+1
0063+  3DD3             
0064+  3DD3                 ; –ù–∞–π—Ç–∏ –∞–¥—Ä–µ—Å —Å–ø—Ä–∞–π—Ç–∞ —Å–∏–º–≤–æ–ª–∞
0065+  3DD3                 ; bc = (c-32)*8
0066+  3DD3 79              mov a,c
0067+  3DD4                 ;sui 32
0068+  3DD4                 ;mov c, a
0069+  3DD4 07              rlc
0070+  3DD5 07              rlc
0071+  3DD6 07              rlc
0072+  3DD7 E6 07           ani 7
0073+  3DD9 47              mov b,a
0074+  3DDA 79              mov a,c
0075+  3DDB 07              rlc
0076+  3DDC 07              rlc
0077+  3DDD 07              rlc
0078+  3DDE E6 F8           ani $f8
0079+  3DE0 4F              mov c,a
0080+  3DE1 21 03 3E        lxi h, _font_table
0081+  3DE4 09              dad b
0082+  3DE5 F9              sphl        ; sp -> char
0083+  3DE6             
0084+  3DE6             _putchar_msb .equ $+2
0085+  3DE6 21 00 A0        lxi h, $a000
0086+  3DE9 19              dad d        ; hl -> destination
0087+  3DEA             
0088+  3DEA                 ; –í—ã–¥–∞–≤–∏—Ç—å –±–∏—Ç—ã –Ω–∞ —ç–∫—Ä–∞–Ω
0089+  3DEA C1              pop b\ mov m, c\ dcr l\ mov m, b\ dcr l
0089+  3DEB 71          
0089+  3DEC 2D          
0089+  3DED 70          
0089+  3DEE 2D          
0090+  3DEF C1              pop b\ mov m, c\ dcr l\ mov m, b\ dcr l
0090+  3DF0 71          
0090+  3DF1 2D          
0090+  3DF2 70          
0090+  3DF3 2D          
0091+  3DF4 C1              pop b\ mov m, c\ dcr l\ mov m, b\ dcr l
0091+  3DF5 71          
0091+  3DF6 2D          
0091+  3DF7 70          
0091+  3DF8 2D          
0092+  3DF9 C1              pop b\ mov m, c\ dcr l\ mov m, b\ dcr l
0092+  3DFA 71          
0092+  3DFB 2D          
0092+  3DFC 70          
0092+  3DFD 2D          
0093+  3DFE             
0094+  3DFE             _pch_sp:
0095+  3DFE 31 00 00        lxi sp, 0
0096+  3E01 FB              ei
0097+  3E02 C9              ret
0098+  3E03             
0099+  3E03             _font_table:
0100+  3E03                 .include "readable.inc"
0001++ 3E03 00 00 00 00 .db $00, $00, $00, $00, $00, $00, $10, $00,
0001++ 3E07 00 00 10 00 
0002++ 3E0B 7E 81 A5 81 .db $7e, $81, $a5, $81, $9d, $b9, $81, $7e,
0002++ 3E0F 9D B9 81 7E 
0003++ 3E13 7E FF DB FF .db $7e, $ff, $db, $ff, $e3, $c7, $ff, $7e,
0003++ 3E17 E3 C7 FF 7E 
0004++ 3E1B 6C FE FE FE .db $6c, $fe, $fe, $fe, $7c, $38, $10, $00,
0004++ 3E1F 7C 38 10 00 
0005++ 3E23 10 38 7C FE .db $10, $38, $7c, $fe, $7c, $38, $10, $00,
0005++ 3E27 7C 38 10 00 
0006++ 3E2B 38 7C 38 FE .db $38, $7c, $38, $fe, $fe, $10, $10, $7c,
0006++ 3E2F FE 10 10 7C 
0007++ 3E33 00 18 3C 7E .db $00, $18, $3c, $7e, $ff, $7e, $18, $7e,
0007++ 3E37 FF 7E 18 7E 
0008++ 3E3B 00 00 18 3C .db $00, $00, $18, $3c, $3c, $18, $00, $00,
0008++ 3E3F 3C 18 00 00 
0009++ 3E43 FF FF E7 C3 .db $ff, $ff, $e7, $c3, $c3, $e7, $ff, $ff,
0009++ 3E47 C3 E7 FF FF 
0010++ 3E4B 00 3C 66 42 .db $00, $3c, $66, $42, $42, $66, $3c, $00,
0010++ 3E4F 42 66 3C 00 
0011++ 3E53 FF C3 99 BD .db $ff, $c3, $99, $bd, $bd, $99, $c3, $ff,
0011++ 3E57 BD 99 C3 FF 
0012++ 3E5B 0F 07 0F 7D .db $0f, $07, $0f, $7d, $cc, $cc, $cc, $78,
0012++ 3E5F CC CC CC 78 
0013++ 3E63 3C 66 66 66 .db $3c, $66, $66, $66, $3c, $18, $7e, $18,
0013++ 3E67 3C 18 7E 18 
0014++ 3E6B 3F 33 3F 30 .db $3f, $33, $3f, $30, $30, $70, $f0, $e0,
0014++ 3E6F 30 70 F0 E0 
0015++ 3E73 7F 63 7F 63 .db $7f, $63, $7f, $63, $63, $67, $e6, $c0,
0015++ 3E77 63 67 E6 C0 
0016++ 3E7B 99 5A 3C E7 .db $99, $5a, $3c, $e7, $e7, $3c, $5a, $99,
0016++ 3E7F E7 3C 5A 99 
0017++ 3E83 80 E0 F8 FE .db $80, $e0, $f8, $fe, $f8, $e0, $80, $00,
0017++ 3E87 F8 E0 80 00 
0018++ 3E8B 02 0E 3E FE .db $02, $0e, $3e, $fe, $3e, $0e, $02, $00,
0018++ 3E8F 3E 0E 02 00 
0019++ 3E93 18 3C 7E 18 .db $18, $3c, $7e, $18, $18, $7e, $3c, $18,
0019++ 3E97 18 7E 3C 18 
0020++ 3E9B 66 66 66 66 .db $66, $66, $66, $66, $66, $00, $66, $00,
0020++ 3E9F 66 00 66 00 
0021++ 3EA3             ; _xxxxxx ≈í
0022++ 3EA3             ; xx xx  
0023++ 3EA3             ; xx xx
0024++ 3EA3             ; xx xxx
0025++ 3EA3             ; xx xx
0026++ 3EA3             ; xx xx
0027++ 3EA3             ;  xx xxx
0028++ 3EA3             ;.db $7f, $db, $db, $7b, $1b, $1b, $1b, $00, ;; –ü–´
0029++ 3EA3             ;.db $6e, $d8, $d8, $de, $d8, $d8, $6e, $00 ; -- OE
0030++ 3EA3             
0031++ 3EA3             
0032++ 3EA3             ; xx..xx..
0033++ 3EA3             ; xx..xx..
0034++ 3EA3             ; xx..xx..
0035++ 3EA3             ; xx..xx..
0036++ 3EA3             ; xx..xx..
0037++ 3EA3             ; xx..xx..
0038++ 3EA3             ; xxxxxxx.
0039++ 3EA3             ; .....xx.
0040++ 3EA3 CC CC CC CC .db $cc, $cc, $cc, $cc, $cc, $cc, $fe, $06
0040++ 3EA7 CC CC FE 06 
0041++ 3EAB 3F 60 7C 66 .db $3f, $60, $7c, $66, $66, $3e, $06, $fc,
0041++ 3EAF 66 3E 06 FC 
0042++ 3EB3 00 00 00 00 .db $00, $00, $00, $00, $7e, $7e, $7e, $00,
0042++ 3EB7 7E 7E 7E 00 
0043++ 3EBB 18 3C 7E 18 .db $18, $3c, $7e, $18, $7e, $3c, $18, $ff,
0043++ 3EBF 7E 3C 18 FF 
0044++ 3EC3 18 3C 7E 18 .db $18, $3c, $7e, $18, $18, $18, $18, $00,
0044++ 3EC7 18 18 18 00 
0045++ 3ECB 18 18 18 18 .db $18, $18, $18, $18, $7e, $3c, $18, $00,
0045++ 3ECF 7E 3C 18 00 
0046++ 3ED3 00 18 0C FE .db $00, $18, $0c, $fe, $0c, $18, $00, $00,
0046++ 3ED7 0C 18 00 00 
0047++ 3EDB 00 30 60 FE .db $00, $30, $60, $fe, $60, $30, $00, $00,
0047++ 3EDF 60 30 00 00 
0048++ 3EE3 00 00 C0 C0 .db $00, $00, $c0, $c0, $c0, $fe, $00, $00,
0048++ 3EE7 C0 FE 00 00 
0049++ 3EEB 00 24 66 FF .db $00, $24, $66, $ff, $66, $24, $00, $00,
0049++ 3EEF 66 24 00 00 
0050++ 3EF3 00 18 3C 7E .db $00, $18, $3c, $7e, $ff, $ff, $00, $00,
0050++ 3EF7 FF FF 00 00 
0051++ 3EFB 00 FF FF 7E .db $00, $ff, $ff, $7e, $3c, $18, $00, $00,
0051++ 3EFF 3C 18 00 00 
0052++ 3F03 00 00 00 00 .db $00, $00, $00, $00, $00, $00, $00, $00,
0052++ 3F07 00 00 00 00 
0053++ 3F0B 18 18 18 18 .db $18, $18, $18, $18, $18, $00, $18, $00,
0053++ 3F0F 18 00 18 00 
0054++ 3F13 6C 6C 6C 00 .db $6c, $6c, $6c, $00, $00, $00, $00, $00,
0054++ 3F17 00 00 00 00 
0055++ 3F1B 6C 6C FE 6C .db $6c, $6c, $fe, $6c, $fe, $6c, $6c, $00,
0055++ 3F1F FE 6C 6C 00 
0056++ 3F23 18 7E C0 7C .db $18, $7e, $c0, $7c, $06, $fc, $18, $00,
0056++ 3F27 06 FC 18 00 
0057++ 3F2B 00 C6 CC 18 .db $00, $c6, $cc, $18, $30, $66, $c6, $00,
0057++ 3F2F 30 66 C6 00 
0058++ 3F33 38 6C 38 76 .db $38, $6c, $38, $76, $dc, $cc, $76, $00,
0058++ 3F37 DC CC 76 00 
0059++ 3F3B 30 30 60 00 .db $30, $30, $60, $00, $00, $00, $00, $00,
0059++ 3F3F 00 00 00 00 
0060++ 3F43 0C 18 30 30 .db $0c, $18, $30, $30, $30, $18, $0c, $00,
0060++ 3F47 30 18 0C 00 
0061++ 3F4B 30 18 0C 0C .db $30, $18, $0c, $0c, $0c, $18, $30, $00,
0061++ 3F4F 0C 18 30 00 
0062++ 3F53 00 66 3C FF .db $00, $66, $3c, $ff, $3c, $66, $00, $00,
0062++ 3F57 3C 66 00 00 
0063++ 3F5B 00 18 18 7E .db $00, $18, $18, $7e, $18, $18, $00, $00,
0063++ 3F5F 18 18 00 00 
0064++ 3F63 00 00 00 00 .db $00, $00, $00, $00, $00, $18, $18, $30,
0064++ 3F67 00 18 18 30 
0065++ 3F6B 00 00 00 7E .db $00, $00, $00, $7e, $00, $00, $00, $00,
0065++ 3F6F 00 00 00 00 
0066++ 3F73 00 00 00 00 .db $00, $00, $00, $00, $00, $18, $18, $00,
0066++ 3F77 00 18 18 00 
0067++ 3F7B 06 0C 18 30 .db $06, $0c, $18, $30, $60, $c0, $80, $00,
0067++ 3F7F 60 C0 80 00 
0068++ 3F83 7C CE DE F6 .db $7c, $ce, $de, $f6, $e6, $c6, $7c, $00,
0068++ 3F87 E6 C6 7C 00 
0069++ 3F8B 18 38 18 18 .db $18, $38, $18, $18, $18, $18, $7e, $00,
0069++ 3F8F 18 18 7E 00 
0070++ 3F93 7C C6 06 7C .db $7c, $c6, $06, $7c, $c0, $c0, $fe, $00,
0070++ 3F97 C0 C0 FE 00 
0071++ 3F9B FC 06 06 3C .db $fc, $06, $06, $3c, $06, $06, $fc, $00,
0071++ 3F9F 06 06 FC 00 
0072++ 3FA3 0C CC CC CC .db $0c, $cc, $cc, $cc, $fe, $0c, $0c, $00,
0072++ 3FA7 FE 0C 0C 00 
0073++ 3FAB FE C0 FC 06 .db $fe, $c0, $fc, $06, $06, $c6, $7c, $00,
0073++ 3FAF 06 C6 7C 00 
0074++ 3FB3 7C C0 C0 FC .db $7c, $c0, $c0, $fc, $c6, $c6, $7c, $00,
0074++ 3FB7 C6 C6 7C 00 
0075++ 3FBB FE 06 06 0C .db $fe, $06, $06, $0c, $18, $30, $30, $00,
0075++ 3FBF 18 30 30 00 
0076++ 3FC3 7C C6 C6 7C .db $7c, $c6, $c6, $7c, $c6, $c6, $7c, $00,
0076++ 3FC7 C6 C6 7C 00 
0077++ 3FCB 7C C6 C6 7E .db $7c, $c6, $c6, $7e, $06, $06, $7c, $00,
0077++ 3FCF 06 06 7C 00 
0078++ 3FD3 00 18 18 00 .db $00, $18, $18, $00, $00, $18, $18, $00,
0078++ 3FD7 00 18 18 00 
0079++ 3FDB 00 18 18 00 .db $00, $18, $18, $00, $00, $18, $18, $30,
0079++ 3FDF 00 18 18 30 
0080++ 3FE3 0C 18 30 60 .db $0c, $18, $30, $60, $30, $18, $0c, $00,
0080++ 3FE7 30 18 0C 00 
0081++ 3FEB 00 00 7E 00 .db $00, $00, $7e, $00, $7e, $00, $00, $00,
0081++ 3FEF 7E 00 00 00 
0082++ 3FF3 30 18 0C 06 .db $30, $18, $0c, $06, $0c, $18, $30, $00,
0082++ 3FF7 0C 18 30 00 
0083++ 3FFB 3C 66 0C 18 .db $3c, $66, $0c, $18, $18, $00, $18, $00,
0083++ 3FFF 18 00 18 00 
0084++ 4003 7C C6 DE DE .db $7c, $c6, $de, $de, $de, $c0, $7e, $00,
0084++ 4007 DE C0 7E 00 
0085++ 400B 38 6C C6 C6 .db $38, $6c, $c6, $c6, $fe, $c6, $c6, $00,
0085++ 400F FE C6 C6 00 
0086++ 4013 FC C6 C6 FC .db $fc, $c6, $c6, $fc, $c6, $c6, $fc, $00,
0086++ 4017 C6 C6 FC 00 
0087++ 401B 7C C6 C0 C0 .db $7c, $c6, $c0, $c0, $c0, $c6, $7c, $00,
0087++ 401F C0 C6 7C 00 
0088++ 4023 F8 CC C6 C6 .db $f8, $cc, $c6, $c6, $c6, $cc, $f8, $00,
0088++ 4027 C6 CC F8 00 
0089++ 402B FE C0 C0 F8 .db $fe, $c0, $c0, $f8, $c0, $c0, $fe, $00,
0089++ 402F C0 C0 FE 00 
0090++ 4033 FE C0 C0 F8 .db $fe, $c0, $c0, $f8, $c0, $c0, $c0, $00,
0090++ 4037 C0 C0 C0 00 
0091++ 403B 7C C6 C0 C0 .db $7c, $c6, $c0, $c0, $ce, $c6, $7c, $00,
0091++ 403F CE C6 7C 00 
0092++ 4043 C6 C6 C6 FE .db $c6, $c6, $c6, $fe, $c6, $c6, $c6, $00,
0092++ 4047 C6 C6 C6 00 
0093++ 404B 7E 18 18 18 .db $7e, $18, $18, $18, $18, $18, $7e, $00,
0093++ 404F 18 18 7E 00 
0094++ 4053 06 06 06 06 .db $06, $06, $06, $06, $06, $c6, $7c, $00,
0094++ 4057 06 C6 7C 00 
0095++ 405B C6 CC D8 F0 .db $c6, $cc, $d8, $f0, $d8, $cc, $c6, $00,
0095++ 405F D8 CC C6 00 
0096++ 4063 C0 C0 C0 C0 .db $c0, $c0, $c0, $c0, $c0, $c0, $fe, $00,
0096++ 4067 C0 C0 FE 00 
0097++ 406B C6 EE FE FE .db $c6, $ee, $fe, $fe, $d6, $c6, $c6, $00,
0097++ 406F D6 C6 C6 00 
0098++ 4073 C6 E6 F6 DE .db $c6, $e6, $f6, $de, $ce, $c6, $c6, $00,
0098++ 4077 CE C6 C6 00 
0099++ 407B 7C C6 C6 C6 .db $7c, $c6, $c6, $c6, $c6, $c6, $7c, $00,
0099++ 407F C6 C6 7C 00 
0100++ 4083 FC C6 C6 FC .db $fc, $c6, $c6, $fc, $c0, $c0, $c0, $00,
0100++ 4087 C0 C0 C0 00 
0101++ 408B 7C C6 C6 C6 .db $7c, $c6, $c6, $c6, $d6, $de, $7c, $06,
0101++ 408F D6 DE 7C 06 
0102++ 4093 FC C6 C6 FC .db $fc, $c6, $c6, $fc, $d8, $cc, $c6, $00,
0102++ 4097 D8 CC C6 00 
0103++ 409B 7C C6 C0 7C .db $7c, $c6, $c0, $7c, $06, $c6, $7c, $00,
0103++ 409F 06 C6 7C 00 
0104++ 40A3 FF 18 18 18 .db $ff, $18, $18, $18, $18, $18, $18, $00,
0104++ 40A7 18 18 18 00 
0105++ 40AB C6 C6 C6 C6 .db $c6, $c6, $c6, $c6, $c6, $c6, $fe, $00,
0105++ 40AF C6 C6 FE 00 
0106++ 40B3 C6 C6 C6 C6 .db $c6, $c6, $c6, $c6, $c6, $7c, $38, $00,
0106++ 40B7 C6 7C 38 00 
0107++ 40BB C6 C6 C6 C6 .db $c6, $c6, $c6, $c6, $d6, $fe, $6c, $00,
0107++ 40BF D6 FE 6C 00 
0108++ 40C3 C6 C6 6C 38 .db $c6, $c6, $6c, $38, $6c, $c6, $c6, $00,
0108++ 40C7 6C C6 C6 00 
0109++ 40CB C6 C6 C6 7C .db $c6, $c6, $c6, $7c, $18, $30, $e0, $00,
0109++ 40CF 18 30 E0 00 
0110++ 40D3 FE 06 0C 18 .db $fe, $06, $0c, $18, $30, $60, $fe, $00,
0110++ 40D7 30 60 FE 00 
0111++ 40DB 3C 30 30 30 .db $3c, $30, $30, $30, $30, $30, $3c, $00,
0111++ 40DF 30 30 3C 00 
0112++ 40E3 C0 60 30 18 .db $c0, $60, $30, $18, $0c, $06, $02, $00,
0112++ 40E7 0C 06 02 00 
0113++ 40EB 3C 0C 0C 0C .db $3c, $0c, $0c, $0c, $0c, $0c, $3c, $00,
0113++ 40EF 0C 0C 3C 00 
0114++ 40F3 10 38 6C C6 .db $10, $38, $6c, $c6, $00, $00, $00, $00,
0114++ 40F7 00 00 00 00 
0115++ 40FB 00 00 00 00 .db $00, $00, $00, $00, $00, $00, $00, $ff,
0115++ 40FF 00 00 00 FF 
0116++ 4103 18 18 0C 00 .db $18, $18, $0c, $00, $00, $00, $00, $00,
0116++ 4107 00 00 00 00 
0117++ 410B 00 00 7C 06 .db $00, $00, $7c, $06, $7e, $c6, $7e, $00,
0117++ 410F 7E C6 7E 00 
0118++ 4113 C0 C0 C0 FC .db $c0, $c0, $c0, $fc, $c6, $c6, $fc, $00,
0118++ 4117 C6 C6 FC 00 
0119++ 411B 00 00 7C C6 .db $00, $00, $7c, $c6, $c0, $c6, $7c, $00,
0119++ 411F C0 C6 7C 00 
0120++ 4123 06 06 06 7E .db $06, $06, $06, $7e, $c6, $c6, $7e, $00,
0120++ 4127 C6 C6 7E 00 
0121++ 412B 00 00 7C C6 .db $00, $00, $7c, $c6, $fe, $c0, $7c, $00,
0121++ 412F FE C0 7C 00 
0122++ 4133 1C 36 30 78 .db $1c, $36, $30, $78, $30, $30, $78, $00,
0122++ 4137 30 30 78 00 
0123++ 413B 00 00 7E C6 .db $00, $00, $7e, $c6, $c6, $7e, $06, $fc,
0123++ 413F C6 7E 06 FC 
0124++ 4143 C0 C0 FC C6 .db $c0, $c0, $fc, $c6, $c6, $c6, $c6, $00,
0124++ 4147 C6 C6 C6 00 
0125++ 414B 18 00 38 18 .db $18, $00, $38, $18, $18, $18, $3c, $00,
0125++ 414F 18 18 3C 00 
0126++ 4153 06 00 06 06 .db $06, $00, $06, $06, $06, $06, $c6, $7c,
0126++ 4157 06 06 C6 7C 
0127++ 415B C0 C0 CC D8 .db $c0, $c0, $cc, $d8, $f8, $cc, $c6, $00,
0127++ 415F F8 CC C6 00 
0128++ 4163 38 18 18 18 .db $38, $18, $18, $18, $18, $18, $3c, $00,
0128++ 4167 18 18 3C 00 
0129++ 416B 00 00 CC FE .db $00, $00, $cc, $fe, $fe, $d6, $d6, $00,
0129++ 416F FE D6 D6 00 
0130++ 4173 00 00 FC C6 .db $00, $00, $fc, $c6, $c6, $c6, $c6, $00,
0130++ 4177 C6 C6 C6 00 
0131++ 417B 00 00 7C C6 .db $00, $00, $7c, $c6, $c6, $c6, $7c, $00,
0131++ 417F C6 C6 7C 00 
0132++ 4183 00 00 FC C6 .db $00, $00, $fc, $c6, $c6, $fc, $c0, $c0,
0132++ 4187 C6 FC C0 C0 
0133++ 418B 00 00 7E C6 .db $00, $00, $7e, $c6, $c6, $7e, $06, $06,
0133++ 418F C6 7E 06 06 
0134++ 4193 00 00 FC C6 .db $00, $00, $fc, $c6, $c0, $c0, $c0, $00,
0134++ 4197 C0 C0 C0 00 
0135++ 419B 00 00 7E C0 .db $00, $00, $7e, $c0, $7c, $06, $fc, $00,
0135++ 419F 7C 06 FC 00 
0136++ 41A3 18 18 7E 18 .db $18, $18, $7e, $18, $18, $18, $0e, $00,
0136++ 41A7 18 18 0E 00 
0137++ 41AB 00 00 C6 C6 .db $00, $00, $c6, $c6, $c6, $c6, $7e, $00,
0137++ 41AF C6 C6 7E 00 
0138++ 41B3 00 00 C6 C6 .db $00, $00, $c6, $c6, $c6, $7c, $38, $00,
0138++ 41B7 C6 7C 38 00 
0139++ 41BB 00 00 C6 C6 .db $00, $00, $c6, $c6, $d6, $fe, $6c, $00,
0139++ 41BF D6 FE 6C 00 
0140++ 41C3 00 00 C6 6C .db $00, $00, $c6, $6c, $38, $6c, $c6, $00,
0140++ 41C7 38 6C C6 00 
0141++ 41CB 00 00 C6 C6 .db $00, $00, $c6, $c6, $c6, $7e, $06, $fc,
0141++ 41CF C6 7E 06 FC 
0142++ 41D3 00 00 FE 0C .db $00, $00, $fe, $0c, $38, $60, $fe, $00,
0142++ 41D7 38 60 FE 00 
0143++ 41DB 0E 18 18 70 .db $0e, $18, $18, $70, $18, $18, $0e, $00,
0143++ 41DF 18 18 0E 00 
0144++ 41E3 18 18 18 00 .db $18, $18, $18, $00, $18, $18, $18, $00,
0144++ 41E7 18 18 18 00 
0145++ 41EB 70 18 18 0E .db $70, $18, $18, $0e, $18, $18, $70, $00,
0145++ 41EF 18 18 70 00 
0146++ 41F3 76 DC 00 00 .db $76, $dc, $00, $00, $00, $00, $00, $00,
0146++ 41F7 00 00 00 00 
0147++ 41FB 00 10 38 6C .db $00, $10, $38, $6c, $c6, $c6, $fe, $00,
0147++ 41FF C6 C6 FE 00 
0148++ 4203 7C C6 C0 C0 .db $7c, $c6, $c0, $c0, $c0, $d6, $7c, $30,
0148++ 4207 C0 D6 7C 30 
0149++ 420B C6 00 C6 C6 .db $c6, $00, $c6, $c6, $c6, $c6, $7e, $00,
0149++ 420F C6 C6 7E 00 
0150++ 4213 0E 00 7C C6 .db $0e, $00, $7c, $c6, $fe, $c0, $7c, $00,
0150++ 4217 FE C0 7C 00 
0151++ 421B 7E 81 3C 06 .db $7e, $81, $3c, $06, $7e, $c6, $7e, $00,
0151++ 421F 7E C6 7E 00 
0152++ 4223 66 00 7C 06 .db $66, $00, $7c, $06, $7e, $c6, $7e, $00,
0152++ 4227 7E C6 7E 00 
0153++ 422B E0 00 7C 06 .db $e0, $00, $7c, $06, $7e, $c6, $7e, $00,
0153++ 422F 7E C6 7E 00 
0154++ 4233 18 18 7C 06 .db $18, $18, $7c, $06, $7e, $c6, $7e, $00,
0154++ 4237 7E C6 7E 00 
0155++ 423B 00 00 7C C6 .db $00, $00, $7c, $c6, $c0, $d6, $7c, $30,
0155++ 423F C0 D6 7C 30 
0156++ 4243 7E 81 7C C6 .db $7e, $81, $7c, $c6, $fe, $c0, $7c, $00,
0156++ 4247 FE C0 7C 00 
0157++ 424B 66 00 7C C6 .db $66, $00, $7c, $c6, $fe, $c0, $7c, $00,
0157++ 424F FE C0 7C 00 
0158++ 4253 E0 00 7C C6 .db $e0, $00, $7c, $c6, $fe, $c0, $7c, $00,
0158++ 4257 FE C0 7C 00 
0159++ 425B 66 00 38 18 .db $66, $00, $38, $18, $18, $18, $3c, $00,
0159++ 425F 18 18 3C 00 
0160++ 4263 7C 82 38 18 .db $7c, $82, $38, $18, $18, $18, $3c, $00,
0160++ 4267 18 18 3C 00 
0161++ 426B 70 00 38 18 .db $70, $00, $38, $18, $18, $18, $3c, $00,
0161++ 426F 18 18 3C 00 
0162++ 4273 C6 10 7C C6 .db $c6, $10, $7c, $c6, $fe, $c6, $c6, $00,
0162++ 4277 FE C6 C6 00 
0163++ 427B 38 38 00 7C .db $38, $38, $00, $7c, $c6, $fe, $c6, $00,
0163++ 427F C6 FE C6 00 
0164++ 4283 0E 00 FE C0 .db $0e, $00, $fe, $c0, $f8, $c0, $fe, $00,
0164++ 4287 F8 C0 FE 00 
0165++ 428B 00 00 7F 0C .db $00, $00, $7f, $0c, $7f, $cc, $7f, $00,
0165++ 428F 7F CC 7F 00 
0166++ 4293 3F 6C CC FF .db $3f, $6c, $cc, $ff, $cc, $cc, $cf, $00,
0166++ 4297 CC CC CF 00 
0167++ 429B 7C 82 7C C6 .db $7c, $82, $7c, $c6, $c6, $c6, $7c, $00,
0167++ 429F C6 C6 7C 00 
0168++ 42A3 66 00 7C C6 .db $66, $00, $7c, $c6, $c6, $c6, $7c, $00,
0168++ 42A7 C6 C6 7C 00 
0169++ 42AB E0 00 7C C6 .db $e0, $00, $7c, $c6, $c6, $c6, $7c, $00,
0169++ 42AF C6 C6 7C 00 
0170++ 42B3 7C 82 00 C6 .db $7c, $82, $00, $c6, $c6, $c6, $7e, $00,
0170++ 42B7 C6 C6 7E 00 
0171++ 42BB E0 00 C6 C6 .db $e0, $00, $c6, $c6, $c6, $c6, $7e, $00,
0171++ 42BF C6 C6 7E 00 
0172++ 42C3 66 00 66 66 .db $66, $00, $66, $66, $66, $3e, $06, $7c,
0172++ 42C7 66 3E 06 7C 
0173++ 42CB C6 7C C6 C6 .db $c6, $7c, $c6, $c6, $c6, $c6, $7c, $00,
0173++ 42CF C6 C6 7C 00 
0174++ 42D3 C6 00 C6 C6 .db $c6, $00, $c6, $c6, $c6, $c6, $fe, $00,
0174++ 42D7 C6 C6 FE 00 
0175++ 42DB 18 18 7E D8 .db $18, $18, $7e, $d8, $d8, $d8, $7e, $18,
0175++ 42DF D8 D8 7E 18 
0176++ 42E3 38 6C 60 F0 .db $38, $6c, $60, $f0, $60, $66, $fc, $00,
0176++ 42E7 60 66 FC 00 
0177++ 42EB 66 66 3C 18 .db $66, $66, $3c, $18, $7e, $18, $7e, $18,
0177++ 42EF 7E 18 7E 18 
0178++ 42F3 F8 CC CC FA .db $f8, $cc, $cc, $fa, $c6, $cf, $c6, $c3,
0178++ 42F7 C6 CF C6 C3 
0179++ 42FB 0E 1B 18 3C .db $0e, $1b, $18, $3c, $18, $18, $d8, $70,
0179++ 42FF 18 18 D8 70 
0180++ 4303 0E 00 7C 06 .db $0e, $00, $7c, $06, $7e, $c6, $7e, $00,
0180++ 4307 7E C6 7E 00 
0181++ 430B 1C 00 38 18 .db $1c, $00, $38, $18, $18, $18, $3c, $00,
0181++ 430F 18 18 3C 00 
0182++ 4313 0E 00 7C C6 .db $0e, $00, $7c, $c6, $c6, $c6, $7c, $00,
0182++ 4317 C6 C6 7C 00 
0183++ 431B 0E 00 C6 C6 .db $0e, $00, $c6, $c6, $c6, $c6, $7e, $00,
0183++ 431F C6 C6 7E 00 
0184++ 4323 00 FE 00 FC .db $00, $fe, $00, $fc, $c6, $c6, $c6, $00,
0184++ 4327 C6 C6 C6 00 
0185++ 432B FE 00 C6 E6 .db $fe, $00, $c6, $e6, $f6, $de, $ce, $00,
0185++ 432F F6 DE CE 00 
0186++ 4333 3C 6C 6C 3E .db $3c, $6c, $6c, $3e, $00, $7e, $00, $00,
0186++ 4337 00 7E 00 00 
0187++ 433B 3C 66 66 3C .db $3c, $66, $66, $3c, $00, $7e, $00, $00,
0187++ 433F 00 7E 00 00 
0188++ 4343 18 00 18 18 .db $18, $00, $18, $18, $30, $66, $3c, $00,
0188++ 4347 30 66 3C 00 
0189++ 434B 00 00 00 FC .db $00, $00, $00, $fc, $c0, $c0, $00, $00,
0189++ 434F C0 C0 00 00 
0190++ 4353 00 00 00 FC .db $00, $00, $00, $fc, $0c, $0c, $00, $00,
0190++ 4357 0C 0C 00 00 
0191++ 435B C6 CC D8 3F .db $c6, $cc, $d8, $3f, $63, $cf, $8c, $0f,
0191++ 435F 63 CF 8C 0F 
0192++ 4363 C3 C6 CC DB .db $c3, $c6, $cc, $db, $37, $6d, $cf, $03,
0192++ 4367 37 6D CF 03 
0193++ 436B 18 00 18 18 .db $18, $00, $18, $18, $18, $18, $18, $00,
0193++ 436F 18 18 18 00 
0194++ 4373 00 33 66 CC .db $00, $33, $66, $cc, $66, $33, $00, $00,
0194++ 4377 66 33 00 00 
0195++ 437B 00 CC 66 33 .db $00, $cc, $66, $33, $66, $cc, $00, $00,
0195++ 437F 66 CC 00 00 
0196++ 4383 22 88 22 88 .db $22, $88, $22, $88, $22, $88, $22, $88,
0196++ 4387 22 88 22 88 
0197++ 438B 55 AA 55 AA .db $55, $aa, $55, $aa, $55, $aa, $55, $aa,
0197++ 438F 55 AA 55 AA 
0198++ 4393 DD 77 DD 77 .db $dd, $77, $dd, $77, $dd, $77, $dd, $77,
0198++ 4397 DD 77 DD 77 
0199++ 439B 18 18 18 18 .db $18, $18, $18, $18, $18, $18, $18, $18,
0199++ 439F 18 18 18 18 
0200++ 43A3 18 18 18 18 .db $18, $18, $18, $18, $f8, $18, $18, $18,
0200++ 43A7 F8 18 18 18 
0201++ 43AB 18 18 F8 18 .db $18, $18, $f8, $18, $f8, $18, $18, $18,
0201++ 43AF F8 18 18 18 
0202++ 43B3 36 36 36 36 .db $36, $36, $36, $36, $f6, $36, $36, $36,
0202++ 43B7 F6 36 36 36 
0203++ 43BB 00 00 00 00 .db $00, $00, $00, $00, $fe, $36, $36, $36,
0203++ 43BF FE 36 36 36 
0204++ 43C3 00 00 F8 18 .db $00, $00, $f8, $18, $f8, $18, $18, $18,
0204++ 43C7 F8 18 18 18 
0205++ 43CB 36 36 F6 06 .db $36, $36, $f6, $06, $f6, $36, $36, $36,
0205++ 43CF F6 36 36 36 
0206++ 43D3 36 36 36 36 .db $36, $36, $36, $36, $36, $36, $36, $36,
0206++ 43D7 36 36 36 36 
0207++ 43DB 00 00 FE 06 .db $00, $00, $fe, $06, $f6, $36, $36, $36,
0207++ 43DF F6 36 36 36 
0208++ 43E3 36 36 F6 06 .db $36, $36, $f6, $06, $fe, $00, $00, $00,
0208++ 43E7 FE 00 00 00 
0209++ 43EB 36 36 36 36 .db $36, $36, $36, $36, $fe, $00, $00, $00,
0209++ 43EF FE 00 00 00 
0210++ 43F3 18 18 F8 18 .db $18, $18, $f8, $18, $f8, $00, $00, $00,
0210++ 43F7 F8 00 00 00 
0211++ 43FB 00 00 00 00 .db $00, $00, $00, $00, $f8, $18, $18, $18,
0211++ 43FF F8 18 18 18 
0212++ 4403 18 18 18 18 .db $18, $18, $18, $18, $1f, $00, $00, $00,
0212++ 4407 1F 00 00 00 
0213++ 440B 18 18 18 18 .db $18, $18, $18, $18, $ff, $00, $00, $00,
0213++ 440F FF 00 00 00 
0214++ 4413 00 00 00 00 .db $00, $00, $00, $00, $ff, $18, $18, $18,
0214++ 4417 FF 18 18 18 
0215++ 441B 18 18 18 18 .db $18, $18, $18, $18, $1f, $18, $18, $18,
0215++ 441F 1F 18 18 18 
0216++ 4423 00 00 00 00 .db $00, $00, $00, $00, $ff, $00, $00, $00,
0216++ 4427 FF 00 00 00 
0217++ 442B 18 18 18 18 .db $18, $18, $18, $18, $ff, $18, $18, $18,
0217++ 442F FF 18 18 18 
0218++ 4433 18 18 1F 18 .db $18, $18, $1f, $18, $1f, $18, $18, $18,
0218++ 4437 1F 18 18 18 
0219++ 443B 36 36 36 36 .db $36, $36, $36, $36, $37, $36, $36, $36,
0219++ 443F 37 36 36 36 
0220++ 4443 36 36 37 30 .db $36, $36, $37, $30, $3f, $00, $00, $00,
0220++ 4447 3F 00 00 00 
0221++ 444B 00 00 3F 30 .db $00, $00, $3f, $30, $37, $36, $36, $36,
0221++ 444F 37 36 36 36 
0222++ 4453 36 36 F7 00 .db $36, $36, $f7, $00, $ff, $00, $00, $00,
0222++ 4457 FF 00 00 00 
0223++ 445B 00 00 FF 00 .db $00, $00, $ff, $00, $f7, $36, $36, $36,
0223++ 445F F7 36 36 36 
0224++ 4463 36 36 37 30 .db $36, $36, $37, $30, $37, $36, $36, $36,
0224++ 4467 37 36 36 36 
0225++ 446B 00 00 FF 00 .db $00, $00, $ff, $00, $ff, $00, $00, $00,
0225++ 446F FF 00 00 00 
0226++ 4473 36 36 F7 00 .db $36, $36, $f7, $00, $f7, $36, $36, $36,
0226++ 4477 F7 36 36 36 
0227++ 447B 18 18 FF 00 .db $18, $18, $ff, $00, $ff, $00, $00, $00,
0227++ 447F FF 00 00 00 
0228++ 4483 36 36 36 36 .db $36, $36, $36, $36, $ff, $00, $00, $00,
0228++ 4487 FF 00 00 00 
0229++ 448B 00 00 FF 00 .db $00, $00, $ff, $00, $ff, $18, $18, $18,
0229++ 448F FF 18 18 18 
0230++ 4493 00 00 00 00 .db $00, $00, $00, $00, $ff, $36, $36, $36,
0230++ 4497 FF 36 36 36 
0231++ 449B 36 36 36 36 .db $36, $36, $36, $36, $3f, $00, $00, $00,
0231++ 449F 3F 00 00 00 
0232++ 44A3 18 18 1F 18 .db $18, $18, $1f, $18, $1f, $00, $00, $00,
0232++ 44A7 1F 00 00 00 
0233++ 44AB 00 00 1F 18 .db $00, $00, $1f, $18, $1f, $18, $18, $18,
0233++ 44AF 1F 18 18 18 
0234++ 44B3 00 00 00 00 .db $00, $00, $00, $00, $3f, $36, $36, $36,
0234++ 44B7 3F 36 36 36 
0235++ 44BB 36 36 36 36 .db $36, $36, $36, $36, $ff, $36, $36, $36,
0235++ 44BF FF 36 36 36 
0236++ 44C3 18 18 FF 18 .db $18, $18, $ff, $18, $ff, $18, $18, $18,
0236++ 44C7 FF 18 18 18 
0237++ 44CB 18 18 18 18 .db $18, $18, $18, $18, $f8, $00, $00, $00,
0237++ 44CF F8 00 00 00 
0238++ 44D3 00 00 00 00 .db $00, $00, $00, $00, $1f, $18, $18, $18,
0238++ 44D7 1F 18 18 18 
0239++ 44DB FF FF FF FF .db $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff,
0239++ 44DF FF FF FF FF 
0240++ 44E3 00 00 00 00 .db $00, $00, $00, $00, $ff, $ff, $ff, $ff,
0240++ 44E7 FF FF FF FF 
0241++ 44EB F0 F0 F0 F0 .db $f0, $f0, $f0, $f0, $f0, $f0, $f0, $f0,
0241++ 44EF F0 F0 F0 F0 
0242++ 44F3 0F 0F 0F 0F .db $0f, $0f, $0f, $0f, $0f, $0f, $0f, $0f,
0242++ 44F7 0F 0F 0F 0F 
0243++ 44FB FF FF FF FF .db $ff, $ff, $ff, $ff, $00, $00, $00, $00,
0243++ 44FF 00 00 00 00 
0244++ 4503 00 00 76 DC .db $00, $00, $76, $dc, $c8, $dc, $76, $00,
0244++ 4507 C8 DC 76 00 
0245++ 450B 38 6C 6C 78 .db $38, $6c, $6c, $78, $6c, $66, $6c, $60,
0245++ 450F 6C 66 6C 60 
0246++ 4513 00 FE C6 C0 .db $00, $fe, $c6, $c0, $c0, $c0, $c0, $00,
0246++ 4517 C0 C0 C0 00 
0247++ 451B 00 00 FE 6C .db $00, $00, $fe, $6c, $6c, $6c, $6c, $00,
0247++ 451F 6C 6C 6C 00 
0248++ 4523 FE 60 30 18 .db $fe, $60, $30, $18, $30, $60, $fe, $00,
0248++ 4527 30 60 FE 00 
0249++ 452B 00 00 7E D8 .db $00, $00, $7e, $d8, $d8, $d8, $70, $00,
0249++ 452F D8 D8 70 00 
0250++ 4533 00 66 66 66 .db $00, $66, $66, $66, $66, $7c, $60, $c0,
0250++ 4537 66 7C 60 C0 
0251++ 453B 00 76 DC 18 .db $00, $76, $dc, $18, $18, $18, $18, $00,
0251++ 453F 18 18 18 00 
0252++ 4543 7E 18 3C 66 .db $7e, $18, $3c, $66, $66, $3c, $18, $7e,
0252++ 4547 66 3C 18 7E 
0253++ 454B 3C 66 C3 FF .db $3c, $66, $c3, $ff, $c3, $66, $3c, $00,
0253++ 454F C3 66 3C 00 
0254++ 4553 3C 66 C3 C3 .db $3c, $66, $c3, $c3, $66, $66, $e7, $00,
0254++ 4557 66 66 E7 00 
0255++ 455B 0E 18 0C 7E .db $0e, $18, $0c, $7e, $c6, $c6, $7c, $00,
0255++ 455F C6 C6 7C 00 
0256++ 4563 00 00 7E DB .db $00, $00, $7e, $db, $db, $7e, $00, $00,
0256++ 4567 DB 7E 00 00 
0257++ 456B 06 0C 7E DB .db $06, $0c, $7e, $db, $db, $7e, $60, $c0,
0257++ 456F DB 7E 60 C0 
0258++ 4573 38 60 C0 F8 .db $38, $60, $c0, $f8, $c0, $60, $38, $00,
0258++ 4577 C0 60 38 00 
0259++ 457B 78 CC CC CC .db $78, $cc, $cc, $cc, $cc, $cc, $cc, $00,
0259++ 457F CC CC CC 00 
0260++ 4583 00 7E 00 7E .db $00, $7e, $00, $7e, $00, $7e, $00, $00,
0260++ 4587 00 7E 00 00 
0261++ 458B 18 18 7E 18 .db $18, $18, $7e, $18, $18, $00, $7e, $00,
0261++ 458F 18 00 7E 00 
0262++ 4593 60 30 18 30 .db $60, $30, $18, $30, $60, $00, $fc, $00,
0262++ 4597 60 00 FC 00 
0263++ 459B 18 30 60 30 .db $18, $30, $60, $30, $18, $00, $fc, $00,
0263++ 459F 18 00 FC 00 
0264++ 45A3 0E 1B 1B 18 .db $0e, $1b, $1b, $18, $18, $18, $18, $18,
0264++ 45A7 18 18 18 18 
0265++ 45AB 18 18 18 18 .db $18, $18, $18, $18, $18, $d8, $d8, $70,
0265++ 45AF 18 D8 D8 70 
0266++ 45B3 18 18 00 7E .db $18, $18, $00, $7e, $00, $18, $18, $00,
0266++ 45B7 00 18 18 00 
0267++ 45BB 00 76 DC 00 .db $00, $76, $dc, $00, $76, $dc, $00, $00,
0267++ 45BF 76 DC 00 00 
0268++ 45C3 38 6C 6C 38 .db $38, $6c, $6c, $38, $00, $00, $00, $00,
0268++ 45C7 00 00 00 00 
0269++ 45CB 00 00 00 18 .db $00, $00, $00, $18, $18, $00, $00, $00,
0269++ 45CF 18 00 00 00 
0270++ 45D3 00 00 00 00 .db $00, $00, $00, $00, $18, $00, $00, $00,
0270++ 45D7 18 00 00 00 
0271++ 45DB 0F 0C 0C 0C .db $0f, $0c, $0c, $0c, $ec, $6c, $3c, $1c,
0271++ 45DF EC 6C 3C 1C 
0272++ 45E3 78 6C 6C 6C .db $78, $6c, $6c, $6c, $6c, $00, $00, $00,
0272++ 45E7 6C 00 00 00 
0273++ 45EB 7C 0C 7C 60 .db $7c, $0c, $7c, $60, $7c, $00, $00, $00,
0273++ 45EF 7C 00 00 00 
0274++ 45F3 00 00 3C 3C .db $00, $00, $3c, $3c, $3c, $3c, $00, $00,
0274++ 45F7 3C 3C 00 00 
0275++ 45FB 00 10 00 00 .db $00, $10, $00, $00, $00, $00, $00, $00
0275++ 45FF 00 00 00 00 
0276++ 4603             
0277++ 4603             ; vim: filetype=asm
0101+  4603             ; vim: filetype=asm
2304   4603             
2305   4603                     .include "fish.inc"
0001+  4603             ; Opened image graphics/outline1.png 16x16
0002+  4603             ;     212   222222 
0003+  4603             ;     212  22111122
0004+  4603             ;     2222221122212
0005+  4603             ;  222 211211222212
0006+  4603             ;  1122211212222122
0007+  4603             ;  2221122112221212
0008+  4603             ;    2112112121212 
0009+  4603             ;    222112111222  
0010+  4603             ;   22111212121122 
0011+  4603             ;  221122111111112 
0012+  4603             ;  2112222121122222
0013+  4603             ;  2122221211211112
0014+  4603             ;  2122212211211222
0015+  4603             ;  2122121221212112
0016+  4603             ;  2211212 22212122
0017+  4603             ;   22222    22222 
0018+  4603             fisha0:
0019+  4603 08 00 08 3C 	.db  $08,$00,$08,$3c,$00,$62,$06,$c2,$c6,$84,$19,$8a,$1b,$54,$06,$e0,$1d,$58,$33,$fc,$61,$60,$42,$de,$44,$d8,$4a,$56,$34,$14,$00,$00
0019+  4607 00 62 06 C2 
0019+  460B C6 84 19 8A 
0019+  460F 1B 54 06 E0 
0019+  4613 1D 58 33 FC 
0019+  4617 61 60 42 DE 
0019+  461B 44 D8 4A 56 
0019+  461F 34 14 00 00 
0020+  4623             fisha1:
0021+  4623 14 7E 14 C3 	.db  $14,$7e,$14,$c3,$1f,$9d,$e9,$3d,$39,$7b,$e6,$75,$24,$aa,$39,$1c,$62,$a6,$cc,$02,$9e,$9f,$bd,$21,$bb,$27,$b5,$a9,$ca,$eb,$7c,$3e
0021+  4627 1F 9D E9 3D 
0021+  462B 39 7B E6 75 
0021+  462F 24 AA 39 1C 
0021+  4633 62 A6 CC 02 
0021+  4637 9E 9F BD 21 
0021+  463B BB 27 B5 A9 
0021+  463F CA EB 7C 3E 
0022+  4643             ; Opened image graphics/outline2.png 16x16
0023+  4643             ;     212          
0024+  4643             ;     212  22222   
0025+  4643             ;     22222211122  
0026+  4643             ;  222 21121121122 
0027+  4643             ;  112221121222112 
0028+  4643             ;  222112211222122 
0029+  4643             ;    2112112121212 
0030+  4643             ;    222112111212  
0031+  4643             ;   22111212121122 
0032+  4643             ;   21122111111112 
0033+  4643             ;   212222121122222
0034+  4643             ;   211221211211112
0035+  4643             ;   221112111211222
0036+  4643             ;    22121221212112
0037+  4643             ;     2222 22212122
0038+  4643             ;            22222 
0039+  4643             fishb0:
0040+  4643 08 00 08 00 	.db  $08,$00,$08,$00,$00,$70,$06,$d8,$c6,$8c,$19,$88,$1b,$54,$06,$e8,$1d,$58,$33,$fc,$21,$60,$32,$de,$1d,$d8,$0a,$56,$00,$14,$00,$00
0040+  4647 00 70 06 D8 
0040+  464B C6 8C 19 88 
0040+  464F 1B 54 06 E8 
0040+  4653 1D 58 33 FC 
0040+  4657 21 60 32 DE 
0040+  465B 1D D8 0A 56 
0040+  465F 00 14 00 00 
0041+  4663             fishb1:
0042+  4663 14 00 14 F8 	.db  $14,$00,$14,$f8,$1f,$8c,$e9,$26,$39,$72,$e6,$76,$24,$aa,$39,$14,$62,$a6,$4c,$02,$5e,$9f,$4d,$21,$62,$27,$35,$a9,$1e,$eb,$00,$3e
0042+  4667 1F 8C E9 26 
0042+  466B 39 72 E6 76 
0042+  466F 24 AA 39 14 
0042+  4673 62 A6 4C 02 
0042+  4677 5E 9F 4D 21 
0042+  467B 62 27 35 A9 
0042+  467F 1E EB 00 3E 
2306   4683             fishz0: .ds 32   ; empty sprite for wiping
2307   46A3                     .include "drawfish.inc"
0001+  46A3             ;drawfish: 
0002+  46A3             ;                lxi h, $d000 + FISH_Y
0003+  46A3             ;                lxi d, fishb0
0004+  46A3             ;                call drawspr
0005+  46A3             ;                lxi h, $f000 + FISH_Y
0006+  46A3             ;                lxi d, fishb1
0007+  46A3             ;                call drawspr
0008+  46A3             ;                ret
0009+  46A3             
0010+  46A3             maybe_wipe_fish:
0011+  46A3 3E FF                       mvi a, $ff
0012+  46A5 32 20 39                    sta fish_wraparound_flag
0013+  46A8                             ;lda msgseq_end_flag
0014+  46A8                             ;ora a
0015+  46A8                             ;rz
0016+  46A8 AF                          xra a
0017+  46A9 32 23 39                    sta fish_enabled
0018+  46AC                             ; time to let go of the fish
0019+  46AC 11 83 46                    lxi d, fishz0
0020+  46AF 26 80                       mvi h, FISH_BP;$c0
0021+  46B1 2E 60                       mvi l, FISH_Y
0022+  46B3             
0023+  46B3 01 08 02                    lxi b, $0208
0024+  46B6             mwf_l2:
0025+  46B6 AF                          xra a
0026+  46B7             mwf_l1:
0027+  46B7 77                          mov m, a \ inr h \ mov m, a \ dcr l
0027+  46B8 24          
0027+  46B9 77          
0027+  46BA 2D          
0028+  46BB 77                          mov m, a \ dcr h \ mov m, a \ dcr l
0028+  46BC 25          
0028+  46BD 77          
0028+  46BE 2D          
0029+  46BF 0D                          dcr c
0030+  46C0 C2 B7 46                    jnz mwf_l1
0031+  46C3 3E 20                       mvi a, $20
0032+  46C5 84                          add h
0033+  46C6 67                          mov h, a
0034+  46C7 2E 60                       mvi l, FISH_Y
0035+  46C9 05                          dcr b
0036+  46CA C2 B6 46                    jnz mwf_l2
0037+  46CD                           
0038+  46CD C9                          ret
0039+  46CE             
0040+  46CE             drawfish_a:
0041+  46CE 7E                          mov a, m
0042+  46CF FE 1E                       cpi $1e
0043+  46D1 F2 A3 46                    jp maybe_wipe_fish
0044+  46D4                             ;rp
0045+  46D4             
0046+  46D4 11 03 46                    lxi d, fisha0
0047+  46D7 3E 80                       mvi a, FISH_BP
0048+  46D9 86                          add m
0049+  46DA 3C                          inr a
0050+  46DB 67                          mov h, a
0051+  46DC 2E 60                       mvi l, FISH_Y
0052+  46DE E5                          push h
0053+  46DF CD 0C 47                    call drawspr
0054+  46E2 E1                          pop h
0055+  46E3 3E 20                       mvi a, $20
0056+  46E5 84                          add h
0057+  46E6 67                          mov h, a
0058+  46E7 11 23 46                    lxi d, fisha1
0059+  46EA C3 0C 47                    jmp drawspr
0060+  46ED             
0061+  46ED             drawfish_b:
0062+  46ED 7E                          mov a, m
0063+  46EE FE 1E                       cpi $1e
0064+  46F0 F2 A3 46                    jp maybe_wipe_fish
0065+  46F3             
0066+  46F3 11 43 46                    lxi d, fishb0
0067+  46F6 3E 80                       mvi a, FISH_BP
0068+  46F8 86                          add m
0069+  46F9 3C                          inr a
0070+  46FA 67                          mov h, a
0071+  46FB 2E 60                       mvi l, FISH_Y
0072+  46FD E5                          push h
0073+  46FE CD 0C 47                    call drawspr
0074+  4701 E1                          pop h
0075+  4702 3E 20                       mvi a, $20
0076+  4704 84                          add h
0077+  4705 67                          mov h, a
0078+  4706 11 63 46                    lxi d, fishb1
0079+  4709 C3 0C 47                    jmp drawspr
0080+  470C                             
0081+  470C             drawspr:
0082+  470C 0E 02                       mvi c, 2
0083+  470E             drawspr_l1
0084+  470E 1A                          ldax d \ mov m, a \ inx d \ inr h
0084+  470F 77          
0084+  4710 13          
0084+  4711 24          
0085+  4712 1A                          ldax d \ mov m, a \ inx d \ dcr h \ dcr l
0085+  4713 77          
0085+  4714 13          
0085+  4715 25          
0085+  4716 2D          
0086+  4717 1A                          ldax d \ mov m, a \ inx d \ inr h
0086+  4718 77          
0086+  4719 13          
0086+  471A 24          
0087+  471B 1A                          ldax d \ mov m, a \ inx d \ dcr h \ dcr l
0087+  471C 77          
0087+  471D 13          
0087+  471E 25          
0087+  471F 2D          
0088+  4720 1A                          ldax d \ mov m, a \ inx d \ inr h
0088+  4721 77          
0088+  4722 13          
0088+  4723 24          
0089+  4724 1A                          ldax d \ mov m, a \ inx d \ dcr h \ dcr l
0089+  4725 77          
0089+  4726 13          
0089+  4727 25          
0089+  4728 2D          
0090+  4729 1A                          ldax d \ mov m, a \ inx d \ inr h
0090+  472A 77          
0090+  472B 13          
0090+  472C 24          
0091+  472D 1A                          ldax d \ mov m, a \ inx d \ dcr h \ dcr l
0091+  472E 77          
0091+  472F 13          
0091+  4730 25          
0091+  4731 2D          
0092+  4732 1A                          ldax d \ mov m, a \ inx d \ inr h
0092+  4733 77          
0092+  4734 13          
0092+  4735 24          
0093+  4736 1A                          ldax d \ mov m, a \ inx d \ dcr h \ dcr l
0093+  4737 77          
0093+  4738 13          
0093+  4739 25          
0093+  473A 2D          
0094+  473B 1A                          ldax d \ mov m, a \ inx d \ inr h
0094+  473C 77          
0094+  473D 13          
0094+  473E 24          
0095+  473F 1A                          ldax d \ mov m, a \ inx d \ dcr h \ dcr l
0095+  4740 77          
0095+  4741 13          
0095+  4742 25          
0095+  4743 2D          
0096+  4744 1A                          ldax d \ mov m, a \ inx d \ inr h
0096+  4745 77          
0096+  4746 13          
0096+  4747 24          
0097+  4748 1A                          ldax d \ mov m, a \ inx d \ dcr h \ dcr l
0097+  4749 77          
0097+  474A 13          
0097+  474B 25          
0097+  474C 2D          
0098+  474D 1A                          ldax d \ mov m, a \ inx d \ inr h
0098+  474E 77          
0098+  474F 13          
0098+  4750 24          
0099+  4751 1A                          ldax d \ mov m, a \ inx d \ dcr h \ dcr l
0099+  4752 77          
0099+  4753 13          
0099+  4754 25          
0099+  4755 2D          
0100+  4756             
0101+  4756 0D                          dcr c
0102+  4757 C2 0E 47                    jnz drawspr_l1
0103+  475A             
0104+  475A C9                          ret
0105+  475B                             
0106+  475B                             ; fish swimming
0107+  475B             dumbshift:
0108+  475B 3A 22 39                    lda fish_col
0109+  475E C6 80                       adi FISH_BP;$c0
0110+  4760 47                          mov b, a
0111+  4761 3C                          inr a
0112+  4762 E6 1F                       ani $1f
0113+  4764 C6 80                       adi FISH_BP;$c0
0114+  4766 57                          mov d, a
0115+  4767             
0116+  4767 3C                          inr a 
0117+  4768 E6 1F                       ani $1f
0118+  476A C6 80                       adi FISH_BP;$c0
0119+  476C 67                          mov h, a
0120+  476D             
0121+  476D 3E 60                       mvi a, FISH_Y
0122+  476F 6F                          mov l, a \ mov e, a \ mov c, a
0122+  4770 5F          
0122+  4771 4F          
0123+  4772 CD A3 47                    call oneshift
0124+  4775             
0125+  4775 3A 22 39                    lda fish_col
0126+  4778 C6 A0                       adi (FISH_BP + $20)
0127+  477A 47                          mov b, a \ inr a \ ani $1f \ adi (FISH_BP + $20) \ mov d, a
0127+  477B 3C          
0127+  477C E6 1F       
0127+  477E C6 A0       
0127+  4780 57          
0128+  4781 3C                                     inr a \ ani $1f \ adi (FISH_BP + $20) \ mov h, a
0128+  4782 E6 1F       
0128+  4784 C6 A0       
0128+  4786 67          
0129+  4787             
0130+  4787 3E 60                       mvi a, FISH_Y
0131+  4789 6F                          mov l, a \ mov e, a \ mov c, a
0131+  478A 5F          
0131+  478B 4F          
0132+  478C CD A3 47                    call oneshift
0133+  478F             
0134+  478F 21 21 39                    lxi h, fish_col_frac
0135+  4792 7E                          mov a, m
0136+  4793 07                          rlc
0137+  4794 77                          mov m, a
0138+  4795 D0                          rnc
0139+  4796             
0140+  4796 23                          inx h       ; hl = &fish_col
0141+  4797 7E                          mov a, m
0142+  4798 3D                          dcr a       ; previous column
0143+  4799 E6 1F                       ani $1f
0144+  479B 77                          mov m, a
0145+  479C             
0146+  479C                             ; switch sprite
0147+  479C 1F                          rar ; lsb
0148+  479D DA CE 46                    jc  drawfish_a
0149+  47A0 C3 ED 46                    jmp drawfish_b
0150+  47A3                             ;ret
0151+  47A3             
0152+  47A3             oneshift:
0153+  47A3 B7                          ora a \ mov a, m \ ral \ mov m, a 
0153+  47A4 7E          
0153+  47A5 17          
0153+  47A6 77          
0154+  47A7 1A                                     ldax d \ ral \ stax d
0154+  47A8 17          
0154+  47A9 12          
0155+  47AA 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0155+  47AB 17          
0155+  47AC 02          
0155+  47AD 2D          
0155+  47AE 1D          
0155+  47AF 0D          
0156+  47B0 B7                          ora a \ mov a, m \ ral \ mov m, a 
0156+  47B1 7E          
0156+  47B2 17          
0156+  47B3 77          
0157+  47B4 1A                                     ldax d \ ral \ stax d
0157+  47B5 17          
0157+  47B6 12          
0158+  47B7 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0158+  47B8 17          
0158+  47B9 02          
0158+  47BA 2D          
0158+  47BB 1D          
0158+  47BC 0D          
0159+  47BD B7                          ora a \ mov a, m \ ral \ mov m, a 
0159+  47BE 7E          
0159+  47BF 17          
0159+  47C0 77          
0160+  47C1 1A                                     ldax d \ ral \ stax d
0160+  47C2 17          
0160+  47C3 12          
0161+  47C4 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0161+  47C5 17          
0161+  47C6 02          
0161+  47C7 2D          
0161+  47C8 1D          
0161+  47C9 0D          
0162+  47CA B7                          ora a \ mov a, m \ ral \ mov m, a 
0162+  47CB 7E          
0162+  47CC 17          
0162+  47CD 77          
0163+  47CE 1A                                     ldax d \ ral \ stax d
0163+  47CF 17          
0163+  47D0 12          
0164+  47D1 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0164+  47D2 17          
0164+  47D3 02          
0164+  47D4 2D          
0164+  47D5 1D          
0164+  47D6 0D          
0165+  47D7 B7                          ora a \ mov a, m \ ral \ mov m, a 
0165+  47D8 7E          
0165+  47D9 17          
0165+  47DA 77          
0166+  47DB 1A                                     ldax d \ ral \ stax d
0166+  47DC 17          
0166+  47DD 12          
0167+  47DE 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0167+  47DF 17          
0167+  47E0 02          
0167+  47E1 2D          
0167+  47E2 1D          
0167+  47E3 0D          
0168+  47E4 B7                          ora a \ mov a, m \ ral \ mov m, a 
0168+  47E5 7E          
0168+  47E6 17          
0168+  47E7 77          
0169+  47E8 1A                                     ldax d \ ral \ stax d
0169+  47E9 17          
0169+  47EA 12          
0170+  47EB 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0170+  47EC 17          
0170+  47ED 02          
0170+  47EE 2D          
0170+  47EF 1D          
0170+  47F0 0D          
0171+  47F1 B7                          ora a \ mov a, m \ ral \ mov m, a 
0171+  47F2 7E          
0171+  47F3 17          
0171+  47F4 77          
0172+  47F5 1A                                     ldax d \ ral \ stax d
0172+  47F6 17          
0172+  47F7 12          
0173+  47F8 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0173+  47F9 17          
0173+  47FA 02          
0173+  47FB 2D          
0173+  47FC 1D          
0173+  47FD 0D          
0174+  47FE B7                          ora a \ mov a, m \ ral \ mov m, a 
0174+  47FF 7E          
0174+  4800 17          
0174+  4801 77          
0175+  4802 1A                                     ldax d \ ral \ stax d
0175+  4803 17          
0175+  4804 12          
0176+  4805 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0176+  4806 17          
0176+  4807 02          
0176+  4808 2D          
0176+  4809 1D          
0176+  480A 0D          
0177+  480B B7                          ora a \ mov a, m \ ral \ mov m, a 
0177+  480C 7E          
0177+  480D 17          
0177+  480E 77          
0178+  480F 1A                                     ldax d \ ral \ stax d
0178+  4810 17          
0178+  4811 12          
0179+  4812 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0179+  4813 17          
0179+  4814 02          
0179+  4815 2D          
0179+  4816 1D          
0179+  4817 0D          
0180+  4818 B7                          ora a \ mov a, m \ ral \ mov m, a 
0180+  4819 7E          
0180+  481A 17          
0180+  481B 77          
0181+  481C 1A                                     ldax d \ ral \ stax d
0181+  481D 17          
0181+  481E 12          
0182+  481F 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0182+  4820 17          
0182+  4821 02          
0182+  4822 2D          
0182+  4823 1D          
0182+  4824 0D          
0183+  4825 B7                          ora a \ mov a, m \ ral \ mov m, a 
0183+  4826 7E          
0183+  4827 17          
0183+  4828 77          
0184+  4829 1A                                     ldax d \ ral \ stax d
0184+  482A 17          
0184+  482B 12          
0185+  482C 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0185+  482D 17          
0185+  482E 02          
0185+  482F 2D          
0185+  4830 1D          
0185+  4831 0D          
0186+  4832 B7                          ora a \ mov a, m \ ral \ mov m, a 
0186+  4833 7E          
0186+  4834 17          
0186+  4835 77          
0187+  4836 1A                                     ldax d \ ral \ stax d
0187+  4837 17          
0187+  4838 12          
0188+  4839 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0188+  483A 17          
0188+  483B 02          
0188+  483C 2D          
0188+  483D 1D          
0188+  483E 0D          
0189+  483F B7                          ora a \ mov a, m \ ral \ mov m, a 
0189+  4840 7E          
0189+  4841 17          
0189+  4842 77          
0190+  4843 1A                                     ldax d \ ral \ stax d
0190+  4844 17          
0190+  4845 12          
0191+  4846 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0191+  4847 17          
0191+  4848 02          
0191+  4849 2D          
0191+  484A 1D          
0191+  484B 0D          
0192+  484C B7                          ora a \ mov a, m \ ral \ mov m, a 
0192+  484D 7E          
0192+  484E 17          
0192+  484F 77          
0193+  4850 1A                                     ldax d \ ral \ stax d
0193+  4851 17          
0193+  4852 12          
0194+  4853 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0194+  4854 17          
0194+  4855 02          
0194+  4856 2D          
0194+  4857 1D          
0194+  4858 0D          
0195+  4859 B7                          ora a \ mov a, m \ ral \ mov m, a 
0195+  485A 7E          
0195+  485B 17          
0195+  485C 77          
0196+  485D 1A                                     ldax d \ ral \ stax d
0196+  485E 17          
0196+  485F 12          
0197+  4860 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0197+  4861 17          
0197+  4862 02          
0197+  4863 2D          
0197+  4864 1D          
0197+  4865 0D          
0198+  4866 B7                          ora a \ mov a, m \ ral \ mov m, a 
0198+  4867 7E          
0198+  4868 17          
0198+  4869 77          
0199+  486A 1A                                     ldax d \ ral \ stax d
0199+  486B 17          
0199+  486C 12          
0200+  486D 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0200+  486E 17          
0200+  486F 02          
0200+  4870 2D          
0200+  4871 1D          
0200+  4872 0D          
0201+  4873                             
0202+  4873 C9                          ret
0203+  4874             
0204+  4874             ; vim: filetype=asm
2308   4874             
2309   4FFF                     .org PLAYER_BASE-1
2310   4FFF 00                  .db 0
2311   5000             
2312   5000             player_init .equ PLAYER_BASE+0
2313   5000             player_tick .equ PLAYER_BASE+3
2314   5000             songe       .equ PLAYER_BASE+6
2315   5000             
2316   5000                     .end
2317   5000                     
2318   5000                     
2319   5000             ; code snippets cemetery
2320   5000             
2321   5000                     ; xor-swap, register-saving but too slow
2322   5000                     ; xra m           ; X = Y xor X  (X = *hl)
2323   5000                     ; mov m, a
2324   5000                     ; dcx h
2325   5000                     ; xra m
2326   5000                     ; mov m, a        ; Y = X xor Y 
2327   5000                     ; inx h
2328   5000                     ; xra m
2329   5000                     ; mov m, a        ; = 64/swap
2330   5000                     
2331   5000                     
2332   5000             
2333   5000                     ; ora a           ; $00 -> Z=1                    -> continue
2334   5000                     ;                 ; $80 -> Z=0, S=1, P=0          -> A (fill)
2335   5000                     ;                 ; $C0 -> Z=0, S=1, P=1          -> continue
2336   5000                     ;                 ; $40 -> Z=0, S=0, P=0          -> B (wipe)
2337   5000             
2338   5000                     ; add a           ; CY = state_a, S = state_b
2339   5000                     ;                 ; $80 -> C=1, Z=1, P=1, S=0
2340   5000                     ;                 ; $00 -> C=0, Z=1, P=1, S=0     ~ !state_a & !state_b
2341   5000                     ;                 ; $40 -> C=0, Z=0, P=0, S=1
2342   5000                     ;                 ; $C0 -> C=1, Z=0, P=0, S=1     ~ state_a & state_b
2343   5000                     
tasm: Number of errors = 0
