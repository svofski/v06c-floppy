0001   0000                     ; üíæ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–µ—Ç –ø–µ—á–∞–ª—å–Ω–µ–µ –Ω–∞ —Å–≤–µ—Ç–µ
0002   0000                     ;    —á–µ–º –¥–µ–º–æ –æ –ª–µ—Ç–∞—é—â–µ–π –¥–∏—Å–∫–µ—Ç–µ
0003   0000                     ;
0004   0000                     ; svofski & ivagor 2025
0005   0000                     ;
0006   0000                     ; –í–µ–∫—Ç–æ—Ä-06—Ü –ë–õ–ö+–°–ë–†!
0007   0000                     ;
0008   0000             
0009   0000             ;#define FADE_IN
0010   0000             #define FADE_OUT
0011   0000             #define XFADE
0012   0000             
0013   0000             ; show all the text messages before the main screen appears
0014   0000             ;#define MESSAGES_AT_ONCE
0015   0000             
0016   0000             LOGOY           .equ $d8
0017   0000             FISH_Y          .equ $60
0018   0000             FISH_BP         .equ $80
0019   0000             ;LOGOY           .equ $60
0020   0000             
0021   0000             NBOUNDS         .equ 7
0022   0000             BUTTPLANE       .equ $c0
0023   0000             BUTTPLANE_A     .equ $c0
0024   0000             BUTTPLANE_B     .equ $e0
0025   0000             PixTabA         .equ 7800h
0026   0000             PixTabB         .equ 7C00h
0027   0000             DEG90           .equ 256/4
0028   0000             
0029   0100                     .org $100
0030   0100 F3                  di
0031   0101 AF                  xra a
0032   0102 D3 10               out $10
0033   0104 31 00 01            lxi sp, $100
0034   0107 3E C9               mvi a, $c9
0035   0109 32 38 00            sta $38
0036   010C             
0037   010C 3E C3               mvi a, $c3
0038   010E 32 00 00            sta 0
0039   0111 21 00 01            lxi h, $100
0040   0114 22 01 00            shld 1
0041   0117                     
0042   0117 21 05 3A            lxi h, pal_0
0043   011A 22 36 09            shld setpal_select
0044   011D FB                  ei
0045   011E             
0046   011E                     ; clear zero initialized vars
0047   011E 21 60 3A            lxi h, zero_init_end
0048   0121 3E 03               mvi a, (zero_init_end - zero_init_start) / 32
0049   0123 01 00 00            lxi b, 0
0050   0126 CD E1 05            call clear_array_backwards
0051   0129 21 01 28            lxi h, ngon_start
0052   012C 22 13 07            shld geometry_ptr
0053   012F             
0054   012F                     ;; fish init
0055   012F                     ;mvi a, $1e      ; fish appears in this column
0056   012F                     ;sta fish_col
0057   012F                     ;mvi a, 1
0058   012F                     ;sta fish_col_frac
0059   012F             
0060   012F 21 00 0C            lxi h, bounds_0
0061   0132 22 FD 0A            shld bounds
0062   0135 22 01 0B            shld bounds1
0063   0138 21 00 13            lxi h, bounds_1
0064   013B 22 FF 0A            shld bounds_b
0065   013E 22 03 0B            shld bounds1_b
0066   0141             
0067   0141 21 00 1A            lxi h, bounds_2
0068   0144 22 05 0B            shld bounds2
0069   0147 21 00 21            lxi h, bounds_3
0070   014A 22 07 0B            shld bounds2_b
0071   014D                     
0072   014D 2A 06 50            lhld songe
0073   0150 CD 00 50            call player_init    ; starts playback immediately
0074   0153             
0075   0153 CD A4 03            call clrscr
0076   0156 F3                  di
0077   0157 3E C3               mvi a,0C3h
0078   0159 32 38 00            sta 38h
0079   015C 21 B2 0A            lxi h,ISR
0080   015F 22 39 00            shld 39h
0081   0162 FB                  ei
0082   0163             
0083   0163 21 00 78            lxi h, PixTabA
0084   0166 3E C0               mvi a, BUTTPLANE_A
0085   0168 CD 59 03            call MakePixTab
0086   016B 21 00 7C            lxi h, PixTabB
0087   016E 3E E0               mvi a, BUTTPLANE_B
0088   0170 CD 59 03            call MakePixTab
0089   0173                             
0090   0173 3E 01               mvi a, 1
0091   0175 D3 02               out $2
0092   0177             
0093   0177 CD 36 2A            call mathinit
0094   017A             
0095   017A                     ; clear all bounds arrays
0096   017A 21 00 28            lxi h, bounds_end
0097   017D 3E E0               mvi a, 4 * 256 * NBOUNDS / 32   
0098   017F 01 FF FF            lxi b, $ffff ; fill with ff
0099   0182 CD E1 05            call clear_array_backwards
0100   0185             
0101   0185 21 39 3A            lxi h, pal_zero_end
0102   0188 3E 01               mvi a, 1
0103   018A~            #ifdef FADE_IN        
0104   018A~                    lxi b, 0
0105   018A             #else
0106   018A 01 FF FF            lxi b, $ffff
0107   018D             #endif
0108   018D CD E1 05            call clear_array_backwards
0109   0190                     
0110   0190                     
0111   0190 21 60 08            lxi h, $0860
0112   0193 CD 9E 3E            call gotoxy
0113   0196 21 E2 39            lxi h, msg_minus1
0114   0199 CD C8 3E            call puts
0115   019C             
0116   019C 21 6F 09            lxi h, pal_intro
0117   019F 22 36 09            shld setpal_select
0118   01A2             
0119   01A2 3E F0               mvi a, 240
0120   01A4             black_loop:
0121   01A4 76                  hlt
0122   01A5 3D                  dcr a
0123   01A6 C2 A4 01            jnz black_loop
0124   01A9             
0125   01A9 21 05 3A            lxi h, pal_0
0126   01AC 22 36 09            shld setpal_select
0127   01AF 76                  hlt
0128   01B0 CD A4 03            call clrscr
0129   01B3 76                  hlt
0130   01B4             
0131   01B4             
0132   01B4                     ; main part
0133   01B4             
0134   01B4                     ; –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –±–æ–ª—å—à—É—é –Ω–∞–¥–ø–∏—Å—å
0135   01B4 0E D8               mvi c, LOGOY
0136   01B6 3E 80               mvi a, $80    ; –ø–ª–æ—Å–∫–æ—Å—Ç—å $80
0137   01B8 32 1F 02            sta varblit_plane
0138   01BB 11 60 3A            lxi d, harzakc0
0139   01BE CD 08 02            call varblit
0140   01C1             
0141   01C1 0E D7               mvi c, LOGOY-1
0142   01C3 3E A0               mvi a, $a0    ; –ø–ª–æ—Å–∫–æ—Å—Ç—å $a0
0143   01C5 32 1F 02            sta varblit_plane
0144   01C8 11 90 3C            lxi d, harzakc1
0145   01CB CD 08 02            call varblit
0146   01CE             
0147   01CE~            #ifdef MESSAGES_AT_ONCE
0148   01CE~            messages:
0149   01CE~                    lxi h, msg1
0150   01CE~            messages_lup:
0151   01CE~                    mov a, m
0152   01CE~                    cpi 255
0153   01CE~                    jz messages_done
0154   01CE~                    mov e, a
0155   01CE~                    inx h
0156   01CE~                    mov d, m
0157   01CE~                    inx h
0158   01CE~                    push h
0159   01CE~                      xchg
0160   01CE~                      call gotoxy
0161   01CE~                    pop h
0162   01CE~                    call puts
0163   01CE~                    lhld _puts_sptr
0164   01CE~                    inx h
0165   01CE~                    jmp messages_lup
0166   01CE~            messages_done:        
0167   01CE             #else
0168   01CE                     ; slow messages
0169   01CE 21 00 31            lxi h, msg1
0170   01D1 22 3C 3A            shld slow_msg_ptr
0171   01D4 21 22 31            lxi h, msg_restart
0172   01D7 22 3E 3A            shld slow_msg_loop
0173   01DA 3E 01               mvi a, 1
0174   01DC 32 3A 3A            sta slowprint_enabled
0175   01DF 32 3B 3A            sta slow_msg_state
0176   01E2             #endif
0177   01E2             
0178   01E2             
0179   01E2                     ; MAIN PART BEGINS
0180   01E2             
0181   01E2                     ; begin fade in -- make sure these pointers are initialised before oneframe()
0182   01E2 21 4F 09            lxi h, pal_a        ; main palette a/b (blue)
0183   01E5 22 A7 09            shld pal_a_goal
0184   01E8 21 5F 09            lxi h, pal_b
0185   01EB 22 B0 09            shld pal_b_goal
0186   01EE             
0187   01EE 21 19 3A            lxi h, pal_fade_a
0188   01F1 22 15 3A            shld pal_a_ptr
0189   01F4 21 29 3A            lxi h, pal_fade_b
0190   01F7 22 17 3A            shld pal_b_ptr
0191   01FA             
0192   01FA CD 1D 06            call oneframe
0193   01FD             
0194   01FD 3E 08               mvi a, 8
0195   01FF 32 39 3A            sta fade_in_flag    ; enable fade in for 8 frames (see ISR)
0196   0202             
0197   0202                     ;mvi a, 1
0198   0202                     ;sta fish_enabled
0199   0202             
0200   0202             forevs:
0201   0202 CD 1D 06            call oneframe
0202   0205 C3 02 02            jmp forevs
0203   0208             
0204   0208                             ; –≤—ã–≤–æ–¥ —Å–ø—Ä–∞–π—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ varblit:
0205   0208                             ; db first_column, jump offset = (16 - end) * 5, data
0206   0208                             ; db 255, 255 ; end of data
0207   0208                             ;
0208   0208                             ; di
0209   0208                             ; mvi c, $d0
0210   0208                             ; mvi a, $c0
0211   0208                             ; sta varblit_plane
0212   0208                             ; lxi d, varplane0
0213   0208                             ; call varblit
0214   0208             varblit:
0215   0208                             ;di
0216   0208 21 00 00                    lxi h, 0
0217   020B 39                          dad sp
0218   020C 22 54 03                    shld varblit_sp
0219   020F EB                          xchg
0220   0210 79                          mov a,c
0221   0211 4E                          mov c,m
0222   0212 23                          inx h
0223   0213 46                          mov b,m
0224   0214 23                          inx h
0225   0215 F9                          sphl
0226   0216                     
0227   0216             ;                mov l, c
0228   0216 6F                          mov l,a
0229   0217 FE                          .db 0FEh        ; cpi .. , skip pop b
0230   0218             vb_L0:                
0231   0218 C1                          pop b       ; c = first column, b = premultiplied jump offset = (16-end) * 5
0232   0219 78                          mov a, b    ; end = 255, 255
0233   021A A1                          ana c
0234   021B FA 53 03                    jm vb_exit
0235   021E                             
0236   021E             varblit_plane   .equ $+1
0237   021E 3E C0                       mvi a, $c0 ; plane msb
0238   0220 81                          add c
0239   0221 67                          mov h, a        ; hl = screen addr
0240   0222             
0241   0222 78                          mov a, b ; b = precalculated offset into vbline_16
0242   0223 32 27 02                    sta vb_M1+1
0243   0226 C3 00 03    vb_M1:          jmp vbline_16
0244   0229             
0245   0300                             .org $100 + $ & $ff00
0246   0300 C1          vbline_16:      pop b \ mov m, c \ inr h \ mov m, b \ inr h
0246   0301 71          
0246   0302 24          
0246   0303 70          
0246   0304 24          
0247   0305 C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0247   0306 71          
0247   0307 24          
0247   0308 70          
0247   0309 24          
0248   030A C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0248   030B 71          
0248   030C 24          
0248   030D 70          
0248   030E 24          
0249   030F C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0249   0310 71          
0249   0311 24          
0249   0312 70          
0249   0313 24          
0250   0314 C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0250   0315 71          
0250   0316 24          
0250   0317 70          
0250   0318 24          
0251   0319 C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0251   031A 71          
0251   031B 24          
0251   031C 70          
0251   031D 24          
0252   031E C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0252   031F 71          
0252   0320 24          
0252   0321 70          
0252   0322 24          
0253   0323 C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0253   0324 71          
0253   0325 24          
0253   0326 70          
0253   0327 24          
0254   0328 C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0254   0329 71          
0254   032A 24          
0254   032B 70          
0254   032C 24          
0255   032D C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0255   032E 71          
0255   032F 24          
0255   0330 70          
0255   0331 24          
0256   0332 C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0256   0333 71          
0256   0334 24          
0256   0335 70          
0256   0336 24          
0257   0337 C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0257   0338 71          
0257   0339 24          
0257   033A 70          
0257   033B 24          
0258   033C C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0258   033D 71          
0258   033E 24          
0258   033F 70          
0258   0340 24          
0259   0341 C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0259   0342 71          
0259   0343 24          
0259   0344 70          
0259   0345 24          
0260   0346 C1                          pop b \ mov m, c \ inr h \ mov m, b \ inr h
0260   0347 71          
0260   0348 24          
0260   0349 70          
0260   034A 24          
0261   034B C1                          pop b \ mov m, c \ inr h \ mov m, b; \ inr h
0261   034C 71          
0261   034D 24          
0261   034E 70          
0262   034F                             
0263   034F             vb_L2:          ; next line
0264   034F 2D                          dcr l
0265   0350             
0266   0350                             ;mvi a, -$73
0267   0350                             ;add l             ; –ø–µ—Ä–µ–¥ —Å—Ç—Ä–æ–∫–æ–π 73 –æ—á–∏—Å—Ç–∏—Ç—å –∫—Ä–∞—è –≤–æ–∫—Ä—É–≥ –±—É–¥—Ç–æ –º–∞—Å–∫–∞
0268   0350                             ;jz troll_clearhook
0269   0350                             ;inr a
0270   0350                             ;jz troll_hook     ; –ø–æ—Å–ª–µ —Å—Ç—Ä–æ–∫–∏ 73 –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –±–µ–ª—ã–π –≥–æ—Ä–∏–∑–æ–Ω—Ç –≤–æ–∫—Ä—É–≥ –ø—Ç–µ—Ä–æ–∏–¥–∞
0271   0350             
0272   0350             vb_L3:
0273   0350 C3 18 02                    jmp vb_L0
0274   0353             
0275   0353             vb_exit:                
0276   0353             varblit_sp      .equ $+1
0277   0353 31 00 00                    lxi sp, 0
0278   0356 C9                          ret
0279   0357             
0280   0357 00 00       vb_hl:          .dw 0
0281   0359             
0282   0359             
0283   0359             
0284   0359             MakePixTab:        
0285   0359             ;HiAdr - PixTab+0000h
0286   0359                             ;lxi h,PixTab
0287   0359                             ;mvi a,BUTTPLANE
0288   0359 06 20                       mvi b,32
0289   035B             MakePixTab2:
0290   035B 0E 08                       mvi c,8
0291   035D             MakePixTab1:
0292   035D 77                          mov m,a
0293   035E 23                          inx h
0294   035F 0D                          dcr c
0295   0360 C2 5D 03                    jnz MakePixTab1
0296   0363 3C                          inr a
0297   0364 05                          dcr b
0298   0365 C2 5B 03                    jnz MakePixTab2
0299   0368             
0300   0368             ;LeftMask - PixTab+0100h
0301   0368 06 08                       mvi b,8
0302   036A 3E 80                       mvi a,80h
0303   036C 57                          mov d,a
0304   036D             MakePixTab9:
0305   036D 0E 07                       mvi c,7
0306   036F 23                          inx h
0307   0370             MakePixTab8:
0308   0370 77                          mov m,a
0309   0371 0F                          rrc\ ora d
0309   0372 B2          
0310   0373 23                          inx h
0311   0374 0D                          dcr c
0312   0375 C2 70 03                    jnz MakePixTab8
0313   0378 AF                          xra a\ ora d\ rar\ mov d,a
0313   0379 B2          
0313   037A 1F          
0313   037B 57          
0314   037C 05                          dcr b
0315   037D C2 6D 03                    jnz MakePixTab9
0316   0380 2E 00                       mvi l,0
0317   0382 24                          inr h
0318   0383             
0319   0383             ;PixLeft - PixTab+0200h
0320   0383 06 20                       mvi b,32
0321   0385             MakePixTab7:
0322   0385 3E 08                       mvi a,8
0323   0387             MakePixTab6:
0324   0387 77                          mov m,a
0325   0388 23                          inx h
0326   0389 3D                          dcr a
0327   038A C2 87 03                    jnz MakePixTab6
0328   038D 05                          dcr b
0329   038E C2 85 03                    jnz MakePixTab7
0330   0391             
0331   0391             
0332   0391             ;PixMaskLeft - PixTab+0300h
0333   0391 06 20                       mvi b,32
0334   0393             MakePixTab5:
0335   0393 3E FF                       mvi a,255
0336   0395 0E 08                       mvi c,8
0337   0397             MakePixTab4:
0338   0397 77                          mov m,a
0339   0398 B7                          ora a\ rar
0339   0399 1F          
0340   039A 23                          inx h
0341   039B 0D                          dcr c
0342   039C C2 97 03                    jnz MakePixTab4
0343   039F 05                          dcr b
0344   03A0 C2 93 03                    jnz MakePixTab5
0345   03A3 C9                  ret
0346   03A4             
0347   03A4             clrscr:        
0348   03A4 21 00 80            lxi h, $8000
0349   03A7 06 00               mvi b, $0
0350   03A9             clrscrl:        
0351   03A9 70                  mov m, b \ inx h
0351   03AA 23          
0352   03AB 70                  mov m, b \ inx h
0352   03AC 23          
0353   03AD 70                  mov m, b \ inx h
0353   03AE 23          
0354   03AF 70                  mov m, b \ inx h
0354   03B0 23          
0355   03B1 7D                  mov a, l
0356   03B2 B4                  ora h
0357   03B3 C2 A9 03            jnz clrscrl
0358   03B6 C9                  ret
0359   03B7                   
0360   03B7             
0361   03B7 01          songe_enabled: .db 1
0362   03B8             
0363   03B8             ; —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∏–∫—Å–µ–ª—å –≤ –ø–ª–æ—Å–∫–æ—Å—Ç–∏ $80
0364   03B8             ; –≤—Ö–æ–¥:
0365   03B8             ; H - X
0366   03B8             ; L - Y
0367   03B8             setpixel:
0368   03B8                             ;mvi c, $c0
0369   03B8 16 04                       mvi d, PixelMask >> 8
0370   03BA             
0371   03BA 3E 07                       mvi a, 7
0372   03BC A4                          ana h
0373   03BD 5F                          mov e, a
0374   03BE AC                          xra h
0375   03BF 1F                          rar \ rar \ rar
0375   03C0 1F          
0375   03C1 1F          
0376   03C2             setpixel_bp     .equ $+1                
0377   03C2 C6 C0                       adi BUTTPLANE
0378   03C4 67                          mov h, a
0379   03C5             
0380   03C5 1A                          ldax d
0381   03C6 B6                          ora m
0382   03C7 77                          mov m, a
0383   03C8 C9                          ret
0384   03C9             
0385   0400                             .org 400h
0386   0400             PixelMask:
0387   0400 80                          .db 10000000b
0388   0401 40                          .db 01000000b
0389   0402 20                          .db 00100000b
0390   0403 10                          .db 00010000b
0391   0404 08                          .db 00001000b
0392   0405 04                          .db 00000100b
0393   0406 02                          .db 00000010b
0394   0407 01                          .db 00000001b
0395   0408                     
0396   0408             RightOrMask:
0397   0408 00                          .db 00000000b
0398   0409 80                          .db 10000000b
0399   040A C0                          .db 11000000b
0400   040B E0                          .db 11100000b
0401   040C F0                          .db 11110000b
0402   040D F8                          .db 11111000b
0403   040E FC                          .db 11111100b
0404   040F FE                          .db 11111110b
0405   0410             
0406   0410             RightAndMask:
0407   0410 FF                          .db 11111111b
0408   0411 7F                          .db 01111111b
0409   0412 3F                          .db 00111111b
0410   0413 1F                          .db 00011111b
0411   0414 0F                          .db 00001111b
0412   0415 07                          .db 00000111b
0413   0416 03                          .db 00000011b
0414   0417 01                          .db 00000001b
0415   0418             
0416   0418             
0417   0418 05 46       y1x1:   .db 5, 70
0418   041A C8 05       y2x2:   .db 200, 5
0419   041C             ;xinc:   .dw 0    
0420   041C             ;ydir:   .db 0
0421   041C             ;line_h: .db 0
0422   041C             ;line_y: .db 0
0423   041C                     ; x1,y1 - x2,y2
0424   041C                     ; vert increment always +1, horz increment variable
0425   041C             line:
0426   041C 2A 18 04            lhld y1x1
0427   041F EB                  xchg
0428   0420 2A 1A 04            lhld y2x2
0429   0423                     ; swap so that y2 - y1 is positive
0430   0423 7D                  mov a, l
0431   0424 93                  sub e           ; a = y2 - y1
0432   0425 C8                  rz      ; dy = 0, nothing to do
0433   0426 D2 32 04            jnc line_2
0434   0429 22 18 04            shld y1x1
0435   042C EB                  xchg
0436   042D 22 1A 04            shld y2x2
0437   0430 7D                  mov a, l
0438   0431 93                  sub e           ; a = y2 - y1
0439   0432                     
0440   0432             line_2:
0441   0432 32 5D 04            sta line_h      ; height = y2 - y1
0442   0435             
0443   0435 7B                          mov a,e
0444   0436 32 70 04            sta line_y        ; line_y = y1
0445   0439             
0446   0439 7C                  mov a, h
0447   043A BA                  cmp d           ; x2 - x1
0448   043B D2 48 04            jnc line_xplus
0449   043E             line_xminus:
0450   043E 3E 37               mvi a, $37 ; stc
0451   0440 32 62 04            sta line_xsgn
0452   0443                     
0453   0443                     ; xinc = ((x1 - x2) << 7) / dy, negate after division
0454   0443 7A                  mov a, d
0455   0444 94                  sub h   ; a = x1 - x2
0456   0445 C3 4F 04            jmp line_shl7
0457   0448             line_xplus:
0458   0448                     ; positive xinc = ((x2 - x1) << 7) / dy
0459   0448 3E B7               mvi a, $b7 ; ora a
0460   044A 32 62 04            sta line_xsgn
0461   044D                     
0462   044D 7C                  mov a, h
0463   044E 92                  sub d   ; a = x2 - x1
0464   044F             line_shl7:        
0465   044F 1F                  rar     ; a = a >> 1
0466   0450 32 50 05            sta xinc+1
0467   0453 3E 00               mvi a, 0
0468   0455 1F                  rar
0469   0456 32 4F 05            sta xinc
0470   0459             
0471   0459             line_3:
0472   0459                     ; xinc = xinc / dy
0473   0459 2A 4F 05            lhld xinc
0474   045C             line_h  .equ $+1
0475   045C 0E 00                       mvi c,0
0476   045E AF                  xra a
0477   045F CD 7B 08            call udiv16248  ; hl = ahl/c
0478   0462             ;        xchg            ; -> de
0479   0462                     
0480   0462             line_xsgn:        
0481   0462 B7                  ora a ; ORA A = positive xinc | STC = negative xinc
0482   0463 D2 6C 04            jnc line_ldx1
0483   0466             line_negxing:
0484   0466                     ; xinc = -xinc
0485   0466 AF                          xra a\ sub l\ mov l,a
0485   0467 95          
0485   0468 6F          
0486   0469 9C                          sbb h\ sub l\ mov h,a
0486   046A 95          
0486   046B 67          
0487   046C                     
0488   046C             line_ldx1:
0489   046C 22 4F 05            shld xinc
0490   046F                             
0491   046F                     ; main loop
0492   046F             ;        call setbounds_setup
0493   046F             ;setbounds_setup:
0494   046F             line_y  .equ $+1
0495   046F 01 00 00            lxi b,0
0496   0472 60                  mov h,b
0497   0473 69                  mov l,c
0498   0474 09                  dad b
0499   0475 09                  dad b
0500   0476 29                  dad h
0501   0477 09                  dad b
0502   0478 EB                  xchg
0503   0479 2A FD 0A            lhld bounds
0504   047C 19                  dad d           ; hl = &bounds[y][0]
0505   047D             ;        shld setbounds_ptr
0506   047D EB                  xchg
0507   047E             
0508   047E 3A 19 04            lda y1x1+1      ; x1
0509   0481 B7                  ora a
0510   0482 1F                  rar
0511   0483 67                  mov h, a
0512   0484 3E 00               mvi a, 0
0513   0486 1F                  rar
0514   0487 6F                  mov l, a        ; hl = x1 << 7
0515   0488                             
0516   0488             line_4:        
0517   0488                     ; d = y, hl = x << 7
0518   0488             line_putpixel:
0519   0488 E5                  push h
0520   0489 29                  dad h \ mov a, h ; a = floor(x)
0520   048A 7C          
0521   048B                     
0522   048B                     ;push d \ push h \ push b \ push psw
0523   048B                     ;mov h, a
0524   048B                     ;call setpixel ; h=x, l=y
0525   048B                     ;pop psw \ pop b \ pop h \ pop d
0526   048B                           
0527   048B             ;        call setbounds
0528   048B                     ; insert coordinate a to bounds[l][0], maintain ascending order
0529   048B             setbounds:
0530   048B 21 07 00            lxi h, NBOUNDS
0531   048E 19                  dad d
0532   048F             ;                                   ; 20+4+12+12+20=68
0533   048F                                                                                             ; hl = &bounds[y][7]
0534   048F EB                  xchg
0535   0490 BE                  cmp m   ; bounds[i] - x, x < bounds[i] if no carry
0536   0491 D2 CD 04            jnc sbins_k1     ; if x >= bounds[k] -> next k
0537   0494                     ;x<bounds[0]
0538   0494 46                  mov b,m
0539   0495 77                  mov m,a
0540   0496 04                  inr b
0541   0497 CA 49 05            jz after_setbounds                              ; if 255 == bounds[k] bounds[k] = x, return
0542   049A                     ; else insert
0543   049A 05                  dcr b
0544   049B 23                  inx h\ inx h\ inx h\ inx h              ; hl = &bounds[y][4]
0544   049C 23          
0544   049D 23          
0544   049E 23          
0545   049F 3E FF               mvi a,255
0546   04A1                     
0547   04A1                     ; scan empty space before committing to memmove
0548   04A1                     ;k = 4 
0549   04A1 BE                  cmp m \ jnz insx44 \ dcx h     ; --> 348088 ( -1260)
0549   04A2 C2 B7 04    
0549   04A5 2B          
0550   04A6 BE                  cmp m \ jnz insx43 \ dcx h
0550   04A7 C2 BC 04    
0550   04AA 2B          
0551   04AB BE                  cmp m \ jnz insx42 \ dcx h
0551   04AC C2 C1 04    
0551   04AF 2B          
0552   04B0             ;       cmp m \ jnz insx41
0553   04B0             ;       mov m,b
0554   04B0 BE                  cmp m\ jz after_setbounds_
0554   04B1 CA 48 05    
0555   04B4 C3 C6 04            jmp insx41
0556   04B7                             
0557   04B7 7E          insx44: mov a,m \ inx h \ mov m,a \ dcx h \ dcx h ; k = 4, d[k+1] = d[k], k = 3
0557   04B8 23          
0557   04B9 77          
0557   04BA 2B          
0557   04BB 2B          
0558   04BC 7E          insx43: mov a,m \ inx h \ mov m,a \ dcx h \ dcx h ; k = 3, d[k+1] = d[k], k = 2
0558   04BD 23          
0558   04BE 77          
0558   04BF 2B          
0558   04C0 2B          
0559   04C1 7E          insx42: mov a,m \ inx h \ mov m,a \ dcx h \ dcx h ; k = 2, d[k+1] = d[k], k = 1
0559   04C2 23          
0559   04C3 77          
0559   04C4 2B          
0559   04C5 2B          
0560   04C6 7E          insx41: mov a,m \ mov m,b\ inx h \ mov m,a ; k = 1, d[k+1] = d[k], k = 0
0560   04C7 70          
0560   04C8 23          
0560   04C9 77          
0561   04CA                     ; k = 0, d[k+1] = d[k], k = 1
0562   04CA C3 49 05            jmp after_setbounds
0563   04CD                     
0564   04CD             sbins_k1:
0565   04CD 23                  inx h
0566   04CE BE                  cmp m   ; bounds[i] - x, x < bounds[i] if no carry
0567   04CF D2 00 05            jnc sbins_k2     ; if x >= bounds[k] -> next k
0568   04D2 46                  mov b,m
0569   04D3 77                  mov m,a
0570   04D4 04                  inr b
0571   04D5 CA 49 05            jz after_setbounds                              ; if 255 == bounds[k] bounds[k] = x, return
0572   04D8                     ; else insert
0573   04D8 05                  dcr b
0574   04D9 23                  inx h\ inx h\ inx h             ; hl = &bounds[y][4]
0574   04DA 23          
0574   04DB 23          
0575   04DC 3E FF               mvi a,255
0576   04DE                     
0577   04DE                     ; scan empty space before committing to memmove
0578   04DE                     ;k = 4 
0579   04DE BE                  cmp m \ jnz insx34 \ dcx h     ; -> 347784 ( -304)
0579   04DF C2 EF 04    
0579   04E2 2B          
0580   04E3 BE                  cmp m \ jnz insx33 \ dcx h
0580   04E4 C2 F4 04    
0580   04E7 2B          
0581   04E8             ;        cmp m \ jnz insx32
0582   04E8             ;               mov m,b
0583   04E8 BE                  cmp m\ jz after_setbounds_
0583   04E9 CA 48 05    
0584   04EC C3 F9 04            jmp insx32
0585   04EF                     
0586   04EF 7E          insx34: mov a,m \ inx h \ mov m,a \ dcx h \ dcx h ; k = 4, d[k+1] = d[k], k = 3
0586   04F0 23          
0586   04F1 77          
0586   04F2 2B          
0586   04F3 2B          
0587   04F4 7E          insx33: mov a,m \ inx h \ mov m,a \ dcx h \ dcx h ; k = 3, d[k+1] = d[k], k = 2
0587   04F5 23          
0587   04F6 77          
0587   04F7 2B          
0587   04F8 2B          
0588   04F9 7E          insx32: mov a,m \ mov m,b\ inx h \ mov m,a ; k = 2, d[k+1] = d[k], k = 1
0588   04FA 70          
0588   04FB 23          
0588   04FC 77          
0589   04FD C3 49 05            jmp after_setbounds
0590   0500                     
0591   0500             sbins_k2:        
0592   0500 23                  inx h
0593   0501 BE                  cmp m
0594   0502 D2 17 05            jnc sbins_k3     ; if x >= bounds[k] -> next k
0595   0505 46                  mov b,m
0596   0506 77                  mov m,a
0597   0507 04                  inr b
0598   0508 CA 49 05            jz after_setbounds                       ; if 255 == bounds[k] bounds[k] = x, return
0599   050B                     ; else insert
0600   050B 05                  dcr b
0601   050C                     ;k = 2
0602   050C 23                  inx h                 ; k = 2, d[k+1] = d[k], k = 3
0603   050D 7E                  mov a,m \ mov m,b\ inx h                 ; k = 3, d[k+1] = d[k], k = 4
0603   050E 70          
0603   050F 23          
0604   0510 46                  mov b,m \ mov m,a\ inx h \ mov m,b                 ; k = 4, d[k+1] = d[k], k = 5
0604   0511 77          
0604   0512 23          
0604   0513 70          
0605   0514 C3 49 05            jmp after_setbounds
0606   0517                     
0607   0517             sbins_k3:        
0608   0517 23                  inx h
0609   0518 BE                  cmp m
0610   0519 D2 2B 05            jnc sbins_k4     ; if x >= bounds[k] -> next k
0611   051C 46                  mov b,m
0612   051D 77                  mov m,a
0613   051E 04                  inr b
0614   051F CA 49 05            jz after_setbounds                       ; if 255 == bounds[k] bounds[k] = x, return
0615   0522                     ; else insert
0616   0522 05                  dcr b
0617   0523                     ;k = 3
0618   0523 23                  inx h                 ; k = 3, d[k+1] = d[k], k = 4
0619   0524 7E                  mov a,m \ mov m,b\ inx h \ mov m,a                 ; k = 4, d[k+1] = d[k], k = 5
0619   0525 70          
0619   0526 23          
0619   0527 77          
0620   0528 C3 49 05            jmp after_setbounds
0621   052B                     
0622   052B             
0623   052B             sbins_k4:
0624   052B 23                  inx h
0625   052C BE                  cmp m
0626   052D D2 3C 05            jnc sbins_k5     ; if x >= bounds[k] -> next k
0627   0530 46                  mov b,m
0628   0531 77                  mov m,a
0629   0532 04                  inr b
0630   0533 CA 49 05            jz after_setbounds                       ; if 255 == bounds[k] bounds[k] = x, return
0631   0536                     ; else insert
0632   0536 05                  dcr b
0633   0537                     ;k = 4 
0634   0537 23                  inx h \ mov m,b                 ; k = 4, d[k+1] = d[k], k = 5
0634   0538 70          
0635   0539 C3 49 05            jmp after_setbounds
0636   053C             
0637   053C             sbins_k5:
0638   053C 23                  inx h
0639   053D BE                  cmp m
0640   053E D2 49 05            jnc after_setbounds      ; if x >= bounds[k] -> return
0641   0541 46                  mov b,m
0642   0542 04                  inr b
0643   0543 C2 49 05            jnz after_setbounds         ; if 255 == bounds[k] bounds[k] = x, return
0644   0546 77                  mov m, a
0645   0547             
0646   0547 FE                  .db 0FEh                                ;cpi ...
0647   0548             after_setbounds_:
0648   0548 70                  mov m,b
0649   0549             after_setbounds:
0650   0549 21 5D 04            lxi h,line_h
0651   054C 35                  dcr m
0652   054D E1                  pop h
0653   054E             xinc    .equ $+1
0654   054E 01 00 00            lxi b,0
0655   0551 09                  dad b   ; x += xinc
0656   0552             line_nexty:
0657   0552 C2 88 04            jnz line_4
0658   0555 C9                  ret
0659   0556                     
0660   0556                     ; double-buffa
0661   0556                     ; frame & 1 == 0:
0662   0556                     ;    bounds, bounds_b = bounds_1, bounds_2
0663   0556                     ; frame & 1 == 1:
0664   0556                     ;    bounds, bounds_b = bounds_3, bounds_4
0665   0556             next_bounds:
0666   0556                     ; swap a/b
0667   0556 2A FD 0A            lhld bounds
0668   0559 EB                  xchg
0669   055A 2A FF 0A            lhld bounds_b
0670   055D 22 FD 0A            shld bounds
0671   0560 EB                  xchg
0672   0561 22 FF 0A            shld bounds_b
0673   0564             
0674   0564 3A 03 3A            lda frame_no
0675   0567 1F                  rar
0676   0568 DA A6 05            jc nb_bbb
0677   056B                     
0678   056B                     ;lxi h, pal_a
0679   056B 2A 15 3A            lhld pal_a_ptr
0680   056E 22 36 09            shld setpal_select
0681   0571             
0682   0571 2A FD 0A            lhld bounds
0683   0574 22 01 0B            shld bounds1
0684   0577 2A FF 0A            lhld bounds_b
0685   057A 22 03 0B            shld bounds1_b
0686   057D 2A 05 0B            lhld bounds2
0687   0580 22 FD 0A            shld bounds
0688   0583 2A 07 0B            lhld bounds2_b
0689   0586 22 FF 0A            shld bounds_b
0690   0589                     
0691   0589 3E C0               mvi a, BUTTPLANE_A
0692   058B 32 C3 03            sta setpixel_bp
0693   058E 3E 78               mvi a, PixTabA >> 8
0694   0590 32 B3 07            sta hline_pixtab_plus_0
0695   0593 32 1F 08            sta hwipe_pixtab_plus_0
0696   0596 C6 02               adi 2
0697   0598 32 B0 07            sta hline_pixtab_plus_2
0698   059B 32 1C 08            sta hwipe_pixtab_plus_2
0699   059E 3C                  inr a
0700   059F 32 BA 07            sta hline_pixtab_plus_3
0701   05A2 32 BA 07            sta hline_pixtab_plus_3
0702   05A5             
0703   05A5 C9                  ret
0704   05A6                     
0705   05A6             nb_bbb:
0706   05A6 2A FD 0A            lhld bounds
0707   05A9 22 05 0B            shld bounds2
0708   05AC 2A FF 0A            lhld bounds_b
0709   05AF 22 07 0B            shld bounds2_b
0710   05B2 2A 01 0B            lhld bounds1
0711   05B5 22 FD 0A            shld bounds
0712   05B8 2A 03 0B            lhld bounds1_b
0713   05BB 22 FF 0A            shld bounds_b
0714   05BE                     
0715   05BE                     ;lxi h, pal_b
0716   05BE 2A 17 3A            lhld pal_b_ptr
0717   05C1 22 36 09            shld setpal_select
0718   05C4             
0719   05C4 3E E0               mvi a, BUTTPLANE_B
0720   05C6 32 C3 03            sta setpixel_bp
0721   05C9 3E 7C               mvi a, PixTabB >> 8
0722   05CB 32 B3 07            sta hline_pixtab_plus_0
0723   05CE 32 1F 08            sta hwipe_pixtab_plus_0
0724   05D1 C6 02               adi 2
0725   05D3 32 B0 07            sta hline_pixtab_plus_2
0726   05D6 32 1C 08            sta hwipe_pixtab_plus_2
0727   05D9 3C                  inr a
0728   05DA 32 BA 07            sta hline_pixtab_plus_3
0729   05DD 32 BA 07            sta hline_pixtab_plus_3
0730   05E0             
0731   05E0 C9                  ret     ; bounds are cleared on read
0732   05E1                     
0733   05E1                     ; quick wipe array in hl backwards c * 32 bytes
0734   05E1             clear_array_backwards:
0735   05E1 EB                  xchg
0736   05E2                     
0737   05E2 21 00 00            lxi h, 0
0738   05E5 39                  dad sp
0739   05E6 22 1A 06            shld clrbounds_sp
0740   05E9             ;        di
0741   05E9 EB                  xchg
0742   05EA F9                  sphl    ; sp = bounds_b + $600
0743   05EB 3D                  dcr a
0744   05EC CA 03 06            jz clrbounds_final
0745   05EF             clrbounds_pushkin:        
0746   05EF C5                  push b \ push b \ push b \ push b       ; 32 bytes
0746   05F0 C5          
0746   05F1 C5          
0746   05F2 C5          
0747   05F3 C5                  push b \ push b \ push b \ push b
0747   05F4 C5          
0747   05F5 C5          
0747   05F6 C5          
0748   05F7 C5                  push b \ push b \ push b \ push b
0748   05F8 C5          
0748   05F9 C5          
0748   05FA C5          
0749   05FB C5                  push b \ push b \ push b \ push b
0749   05FC C5          
0749   05FD C5          
0749   05FE C5          
0750   05FF 3D                  dcr a
0751   0600 C2 EF 05            jnz clrbounds_pushkin
0752   0603             clrbounds_final:
0753   0603 C5                  push b \ push b \ push b \ push b       ; 30+2 bytes
0753   0604 C5          
0753   0605 C5          
0753   0606 C5          
0754   0607 C5                  push b \ push b \ push b \ push b
0754   0608 C5          
0754   0609 C5          
0754   060A C5          
0755   060B C5                  push b \ push b \ push b \ push b
0755   060C C5          
0755   060D C5          
0755   060E C5          
0756   060F C5                  push b \ push b \ push b
0756   0610 C5          
0756   0611 C5          
0757   0612 21 FF FF            lxi h,-1
0758   0615 39                  dad sp
0759   0616 70                  mov m,b
0760   0617 2B                  dcx h
0761   0618 71                  mov m,c
0762   0619             clrbounds_sp    .equ $+1
0763   0619 31 00 00            lxi sp, 0
0764   061C             ;        ei
0765   061C C9                  ret
0766   061D                     
0767   061D             oneframe:
0768   061D CD 56 05            call next_bounds
0769   0620 3A 02 3A            lda frametime
0770   0623 AF                  xra a
0771   0624 32 02 3A            sta frametime
0772   0627                     
0773   0627 CD 3A 06            call transform_geometry
0774   062A CD 15 07            call draw_geometry
0775   062D CD 4F 07            call fill_bounds
0776   0630 21 03 3A            lxi h, frame_no
0777   0633 34                  inr m
0778   0634 7E                  mov a, m
0779   0635 32 04 3A            sta anim_pos
0780   0638             
0781   0638                     ;for benchmark
0782   0638 C0                  rnz 
0783   0639             
0784   0639 C9                  ret
0785   063A                             
0786   063A             transform_geometry:
0787   063A                     ; in the future, the geometry will be transformed
0788   063A                     ; 12.05.2025 the future is now
0789   063A 3A 04 3A            lda anim_pos; frame_no
0790   063D 32 22 2A            sta rotx
0791   0640 47                  mov b, a
0792   0641 87                  add a
0793   0642 32 23 2A            sta roty
0794   0645 80                  add b
0795   0646 32 24 2A            sta rotz
0796   0649 CD 3D 29            call rotmatrix
0797   064C CD 34 28            call calc_projection
0798   064F                     ; prepare data for draw_geometry: 
0799   064F                     ;   4, xy1 xy2 xy3 xy4 xy1 [5]
0800   064F                     ;   8, xy1...xy8 xy1 [9]
0801   064F                     ;   8, xy1...xy8 xy1 [9]
0802   064F                     ;   0
0803   064F 11 13 29            lxi d, points_proj      ; raw array of x,y
0804   0652 21 01 28            lxi h, ngon1            ; formatted ngon data for draw_geometry
0805   0655 36 04               mvi m, 4 \ inx h
0805   0657 23          
0806   0658 1A                    ldax d \ mov c, a \ inx d \ mov m, a \ inx h
0806   0659 4F          
0806   065A 13          
0806   065B 77          
0806   065C 23          
0807   065D 1A                    ldax d \ mov b, a \ inx d \ mov m, a \ inx h
0807   065E 47          
0807   065F 13          
0807   0660 77          
0807   0661 23          
0808   0662 1A                    ldax d \ inx d \ mov m, a \ inx h
0808   0663 13          
0808   0664 77          
0808   0665 23          
0809   0666 1A                    ldax d \ inx d \ mov m, a \ inx h
0809   0667 13          
0809   0668 77          
0809   0669 23          
0810   066A 1A                    ldax d \ inx d \ mov m, a \ inx h
0810   066B 13          
0810   066C 77          
0810   066D 23          
0811   066E 1A                    ldax d \ inx d \ mov m, a \ inx h
0811   066F 13          
0811   0670 77          
0811   0671 23          
0812   0672 1A                    ldax d \ inx d \ mov m, a \ inx h
0812   0673 13          
0812   0674 77          
0812   0675 23          
0813   0676 1A                    ldax d \ inx d \ mov m, a \ inx h
0813   0677 13          
0813   0678 77          
0813   0679 23          
0814   067A 71                    mov m, c \ inx h \ mov m, b \ inx h
0814   067B 23          
0814   067C 70          
0814   067D 23          
0815   067E                       
0816   067E 36 08               mvi m, 8 \ inx h  
0816   0680 23          
0817   0681 1A                    ldax d \ mov c, a \ inx d \ mov m, a \ inx h
0817   0682 4F          
0817   0683 13          
0817   0684 77          
0817   0685 23          
0818   0686 1A                    ldax d \ mov b, a \ inx d \ mov m, a \ inx h
0818   0687 47          
0818   0688 13          
0818   0689 77          
0818   068A 23          
0819   068B 1A                    ldax d \ inx d \ mov m, a \ inx h
0819   068C 13          
0819   068D 77          
0819   068E 23          
0820   068F 1A                    ldax d \ inx d \ mov m, a \ inx h
0820   0690 13          
0820   0691 77          
0820   0692 23          
0821   0693 1A                    ldax d \ inx d \ mov m, a \ inx h
0821   0694 13          
0821   0695 77          
0821   0696 23          
0822   0697 1A                    ldax d \ inx d \ mov m, a \ inx h
0822   0698 13          
0822   0699 77          
0822   069A 23          
0823   069B 1A                    ldax d \ inx d \ mov m, a \ inx h
0823   069C 13          
0823   069D 77          
0823   069E 23          
0824   069F 1A                    ldax d \ inx d \ mov m, a \ inx h
0824   06A0 13          
0824   06A1 77          
0824   06A2 23          
0825   06A3 1A                    ldax d \ inx d \ mov m, a \ inx h
0825   06A4 13          
0825   06A5 77          
0825   06A6 23          
0826   06A7 1A                    ldax d \ inx d \ mov m, a \ inx h
0826   06A8 13          
0826   06A9 77          
0826   06AA 23          
0827   06AB 1A                    ldax d \ inx d \ mov m, a \ inx h
0827   06AC 13          
0827   06AD 77          
0827   06AE 23          
0828   06AF 1A                    ldax d \ inx d \ mov m, a \ inx h
0828   06B0 13          
0828   06B1 77          
0828   06B2 23          
0829   06B3 1A                    ldax d \ inx d \ mov m, a \ inx h
0829   06B4 13          
0829   06B5 77          
0829   06B6 23          
0830   06B7 1A                    ldax d \ inx d \ mov m, a \ inx h
0830   06B8 13          
0830   06B9 77          
0830   06BA 23          
0831   06BB 1A                    ldax d \ inx d \ mov m, a \ inx h
0831   06BC 13          
0831   06BD 77          
0831   06BE 23          
0832   06BF 1A                    ldax d \ inx d \ mov m, a \ inx h
0832   06C0 13          
0832   06C1 77          
0832   06C2 23          
0833   06C3 71                    mov m, c \ inx h \ mov m, b \ inx h
0833   06C4 23          
0833   06C5 70          
0833   06C6 23          
0834   06C7             
0835   06C7 36 08               mvi m, 8 \ inx h  
0835   06C9 23          
0836   06CA 1A                    ldax d \ mov c, a \ inx d \ mov m, a \ inx h
0836   06CB 4F          
0836   06CC 13          
0836   06CD 77          
0836   06CE 23          
0837   06CF 1A                    ldax d \ mov b, a \ inx d \ mov m, a \ inx h
0837   06D0 47          
0837   06D1 13          
0837   06D2 77          
0837   06D3 23          
0838   06D4 1A                    ldax d \ inx d \ mov m, a \ inx h
0838   06D5 13          
0838   06D6 77          
0838   06D7 23          
0839   06D8 1A                    ldax d \ inx d \ mov m, a \ inx h
0839   06D9 13          
0839   06DA 77          
0839   06DB 23          
0840   06DC 1A                    ldax d \ inx d \ mov m, a \ inx h
0840   06DD 13          
0840   06DE 77          
0840   06DF 23          
0841   06E0 1A                    ldax d \ inx d \ mov m, a \ inx h
0841   06E1 13          
0841   06E2 77          
0841   06E3 23          
0842   06E4 1A                    ldax d \ inx d \ mov m, a \ inx h
0842   06E5 13          
0842   06E6 77          
0842   06E7 23          
0843   06E8 1A                    ldax d \ inx d \ mov m, a \ inx h
0843   06E9 13          
0843   06EA 77          
0843   06EB 23          
0844   06EC 1A                    ldax d \ inx d \ mov m, a \ inx h
0844   06ED 13          
0844   06EE 77          
0844   06EF 23          
0845   06F0 1A                    ldax d \ inx d \ mov m, a \ inx h
0845   06F1 13          
0845   06F2 77          
0845   06F3 23          
0846   06F4 1A                    ldax d \ inx d \ mov m, a \ inx h
0846   06F5 13          
0846   06F6 77          
0846   06F7 23          
0847   06F8 1A                    ldax d \ inx d \ mov m, a \ inx h
0847   06F9 13          
0847   06FA 77          
0847   06FB 23          
0848   06FC 1A                    ldax d \ inx d \ mov m, a \ inx h
0848   06FD 13          
0848   06FE 77          
0848   06FF 23          
0849   0700 1A                    ldax d \ inx d \ mov m, a \ inx h
0849   0701 13          
0849   0702 77          
0849   0703 23          
0850   0704 1A                    ldax d \ inx d \ mov m, a \ inx h
0850   0705 13          
0850   0706 77          
0850   0707 23          
0851   0708 1A                    ldax d \ inx d \ mov m, a \ inx h
0851   0709 13          
0851   070A 77          
0851   070B 23          
0852   070C 71                    mov m, c \ inx h \ mov m, b \ inx h
0852   070D 23          
0852   070E 70          
0852   070F 23          
0853   0710 36 00               mvi m, 0
0854   0712 C9                  ret
0855   0713                             
0856   0713                             
0857   0713 01 28       geometry_ptr:      .dw ngon_start
0858   0715             
0859   0715             draw_geometry:
0860   0715                     ; contour 1
0861   0715 2A 13 07            lhld geometry_ptr
0862   0718                     
0863   0718                     ; check if geometry available and die
0864   0718 7E                  mov a, m
0865   0719 B7                  ora a
0866   071A C2 23 07            jnz dg_next_ngon
0867   071D                     
0868   071D 21 01 28            lxi h, ngon_start
0869   0720 22 13 07            shld geometry_ptr
0870   0723             
0871   0723             dg_next_ngon:
0872   0723 7E                  mov a, m        ; line count
0873   0724 B7                  ora a
0874   0725 23                  inx h
0875   0726 C2 2D 07            jnz dg_line
0876   0729 22 13 07            shld geometry_ptr
0877   072C C9                  ret
0878   072D                     
0879   072D                     
0880   072D             dg_line:        
0881   072D 56                  mov d, m \ inx h \ mov e, m \ inx h
0881   072E 23          
0881   072F 5E          
0881   0730 23          
0882   0731 EB                  xchg
0883   0732 22 18 04            shld y1x1
0884   0735 EB                  xchg
0885   0736 56                  mov d, m \ inx h \ mov e, m \ inx h
0885   0737 23          
0885   0738 5E          
0885   0739 23          
0886   073A EB                  xchg
0887   073B 22 1A 04            shld y2x2
0888   073E EB                  xchg
0889   073F                     
0890   073F F5                  push psw
0891   0740 E5                  push h
0892   0741 CD 1C 04            call line
0893   0744 E1                  pop h
0894   0745 F1                  pop psw
0895   0746                     
0896   0746 3D                  dcr a
0897   0747 CA 23 07            jz dg_next_ngon
0898   074A 2B                  dcx h \ dcx h
0898   074B 2B          
0899   074C C3 2D 07            jmp dg_line
0900   074F                     ;;
0901   074F             
0902   074F             ;         ; loop continue without push/pop
0903   074F             ; fb_bounds_loop_cont:
0904   074F             ;         lxi b, NBOUNDS
0905   074F             ;         dad b
0906   074F             ;         xchg
0907   074F             ;         dad b
0908   074F             ;         xchg
0909   074F             ;         jmp fb_bounds_loop_nexty
0910   074F             
0911   074F             
0912   074F             fill_bounds:
0913   074F 2A FF 0A            lhld bounds_b
0914   0752 EB                  xchg
0915   0753 2A FD 0A            lhld bounds     ; hl = &bounds[0]       -- draw
0916   0756                                     ; de = &bounds_b[0]     -- wipe (normalized and sorted on previous step)
0917   0756                     
0918   0756 3E FF               mvi a, 255      ; current line, y
0919   0758 32 72 08            sta fb_y
0920   075B             fb_lines_loop:
0921   075B                     ; if [hl] == 255 && [de] == 255 continue to the next line
0922   075B 1A                  ldax d
0923   075C A6                  ana m
0924   075D 3C                  inr a
0925   075E CA 6A 08            jz fb_bounds_loop_cont
0926   0761             
0927   0761 E5                  push h
0928   0762 D5                  push d
0929   0763             
0930   0763 AF                  xra a
0931   0764 32 9C 07            sta fb_state
0932   0767 32 71 07            sta fb_next
0933   076A C3 75 07            jmp fb_bounds_loop
0934   076D             
0935   076D                     ; when the state is advanced without draw or wipe
0936   076D             fb_nextstate:
0937   076D             ;        lda fb_state - –ª–∏—à–Ω—è—è –∫–æ–º–∞–Ω–¥–∞
0938   076D 32 FB 07            sta fb_prev
0939   0770             ;        lda fb_next
0940   0770             fb_next .equ $+1
0941   0770 3E 00                       mvi a,0
0942   0772 32 9C 07            sta fb_state    ; 16+8+16=40
0943   0775             
0944   0775                     ;; inner loop that iterates max 6 + 6 bounds
0945   0775             fb_bounds_loop:   
0946   0775                     ; x1 = x2
0947   0775 41                  mov b, c
0948   0776                     
0949   0776 1A                  ldax d          ; a = xb[ib]
0950   0777             ;        cpi 255
0951   0777             ;        jz fb_if_else   ; if xbib == 255...
0952   0777                    
0953   0777                     ; if actr == 0 || x2 < xa[ia]
0954   0777 BE                  cmp m           ; xb - xa
0955   0778 D2 8B 07            jnc fb_if_else
0956   077B 4F                  mov c, a
0957   077C             ;fb_sel_xb:
0958   077C             
0959   077C 3A 71 07            lda fb_next
0960   077F EE 40               xri $40         ; next_b = !state_b
0961   0781 32 71 07            sta fb_next
0962   0784                     
0963   0784                     ;# expermimental wipe on read
0964   0784 3E FF               mvi a, 255
0965   0786 12                  stax d
0966   0787                     ;#
0967   0787                     
0968   0787 13                  inx d           ; ++ib          
0969   0788                             
0970   0788             ;               cmp c
0971   0788             ;        jnz fb_if_done
0972   0788             ;               jmp fb_bounds_loop_break        ;–∑–¥–µ—Å—å –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, —Ç.–∫. –≤ —ç—Ç—É –≤–µ—Ç–∫—É –Ω–µ –º–æ–∂–µ–º –ø–æ–ø–∞—Å—Ç—å –ø—Ä–∏ xb[ib]=255
0973   0788             
0974   0788 C3 9B 07                    jmp fb_if_done
0975   078B             
0976   078B             fb_if_else:
0977   078B 4E                  mov c, m
0978   078C             ;fb_if_done:
0979   078C                     ; if x2 == 255 break
0980   078C 3E FF               mvi a,255
0981   078E B9                  cmp c
0982   078F CA 68 08            jz fb_bounds_loop_break
0983   0792 23                  inx h
0984   0793 3A 71 07            lda fb_next
0985   0796 EE 80               xri $80         ; next_a = !state_a
0986   0798 32 71 07            sta fb_next
0987   079B                     
0988   079B                     ; if (state_a ^ state_b == 0)
0989   079B                     
0990   079B             fb_if_done:
0991   079B             ;        lda fb_state
0992   079B             fb_state .equ $+1
0993   079B 3E 00               mvi a,0
0994   079D B7                  ora a           ; $00 -> Z=1                    -> continue
0995   079E                                     ; $80 -> Z=0, S=1, P=0          -> A (fill)
0996   079E                                     ; $C0 -> Z=0, S=1, P=1          -> continue
0997   079E                                     ; $40 -> Z=0, S=0, P=0          -> B (wipe)
0998   079E             ;        jz fb_nextstate ; !state_a & !state_b
0999   079E EA 6D 07            jpe fb_nextstate
1000   07A1             ;        jm fb_fillline
1001   07A1             ;        jmp fb_wipeline
1002   07A1 F2 FA 07            jp fb_wipeline
1003   07A4                     
1004   07A4             fb_fillline:        
1005   07A4                     ; this.hfill(x1, x2, y, INK);
1006   07A4                     ; a = y
1007   07A4                     ; b = x1, c = x2
1008   07A4 D5                  push d
1009   07A5 E5                  push h
1010   07A6 3A 72 08            lda fb_y
1011   07A9             
1012   07A9             ;        call hline_xy
1013   07A9                     ;; fast fill horizontal segment
1014   07A9                     ;; a = y
1015   07A9                     ;; b = x1, c = x2
1016   07A9             ;hline_xy:           
1017   07A9 5F                  mov e, a
1018   07AA 68                  mov l,b
1019   07AB                     ; c - b = count
1020   07AB 79                  mov a, c
1021   07AC 90                  sub b
1022   07AD 3C                  inr a
1023   07AE 47                  mov b, a
1024   07AF             hline_pixtab_plus_2 .equ $+1            
1025   07AF 26 7A               mvi h,(PixTabA>>8)+2
1026   07B1 96                  sub m
1027   07B2             hline_pixtab_plus_0 .equ $+1            
1028   07B2 26 78               mvi h,(PixTabA>>8)
1029   07B4 56                  mov d,m                         ;HiAdr
1030   07B5             ;       jnc hline_xy_LeftBlock
1031   07B5 DA DD 07            jc hline_xy_LeftBlock
1032   07B8                             
1033   07B8 47                  mov b,a
1034   07B9             hline_pixtab_plus_3 .equ $+1            
1035   07B9 26 7B               mvi h,(PixTabA>>8)+3
1036   07BB 7E                  mov a,m
1037   07BC EB                  xchg
1038   07BD B6                  ora m
1039   07BE 77                  mov m,a
1040   07BF AF                  xra a
1041   07C0 B0                  ora b
1042   07C1 CA E9 07            jz hline_xy_end
1043   07C4             hline_xy_L3:
1044   07C4 24                  inr h           ; next column
1045   07C5 D6 08               sui 8
1046   07C7 D2 D5 07            jnc hline_xy_L4
1047   07CA C6 10               adi (RightOrMask&255)+8
1048   07CC 5F                  mov e,a
1049   07CD 16 04               mvi d,RightOrMask>>8
1050   07CF 1A                  ldax d
1051   07D0 B6                  ora m
1052   07D1 77                  mov m,a
1053   07D2 C3 E9 07            jmp hline_xy_end
1054   07D5             
1055   07D5             hline_xy_L4:
1056   07D5                     ; fill in chunks
1057   07D5 36 FF               mvi m, 255
1058   07D7 C2 C4 07            jnz hline_xy_L3
1059   07DA C3 E9 07            jmp hline_xy_end
1060   07DD             
1061   07DD             hline_xy_LeftBlock:
1062   07DD 3E 07               mvi a,7
1063   07DF A5                  ana l
1064   07E0 07                  rlc\ rlc\ rlc
1064   07E1 07          
1064   07E2 07          
1065   07E3 B0                  ora b
1066   07E4 6F                  mov l,a
1067   07E5 24                  inr h                           ;to LeftMask
1068   07E6 1A                  ldax d
1069   07E7 B6                  ora m
1070   07E8 12                  stax d
1071   07E9             
1072   07E9             hline_xy_end:
1073   07E9                     ; [prev, state] = [state, next]
1074   07E9             ;        lhld fb_state   
1075   07E9             ;        shld fb_prev    ; 20+20 = 40 (+28 = 68, but!)
1076   07E9 3A 9C 07            lda fb_state
1077   07EC 32 FB 07            sta fb_prev
1078   07EF 3A 71 07            lda fb_next
1079   07F2 32 9C 07            sta fb_state
1080   07F5             
1081   07F5 E1                  pop h
1082   07F6 D1                  pop d
1083   07F7 C3 75 07            jmp fb_bounds_loop
1084   07FA             fb_wipeline:  
1085   07FA                     ; ; if (prev_a == 1) ++x1
1086   07FA             ;        lda fb_prev
1087   07FA             ;        ora a
1088   07FA             fb_prev .equ $+1
1089   07FA F6 00               ori 0           ;—Å—é–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏–º —Å A7=0, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –±–∏—Ç—ã –Ω–µ –≤—ã–∂–Ω—ã
1090   07FC FA 0C 08            jm fb_3
1091   07FF                     ; else if (next_a == 1) --x2
1092   07FF 3A 71 07            lda fb_next
1093   0802 B7                  ora a
1094   0803 F2 0D 08            jp fb_5_
1095   0806 3E FF               mvi a,-1
1096   0808 81                  add c
1097   0809 C3 0E 08            jmp fb_5
1098   080C             fb_3:
1099   080C 04                  inr b
1100   080D             fb_5_:
1101   080D 79                  mov a,c
1102   080E             fb_5:
1103   080E                     ; c - b = count
1104   080E 90                  sub b
1105   080F DA 59 08            jc fb_4
1106   0812             
1107   0812 E5                  push h
1108   0813 D5                  push d
1109   0814 58                  mov e,b
1110   0815 3C                  inr a
1111   0816 47                  mov b, a
1112   0817             
1113   0817 2A 72 08            lhld fb_y
1114   081A EB                  xchg
1115   081B             
1116   081B             ;        call hwipe_xy
1117   081B                     ;; fast wipe horizontal segment
1118   081B                     ;; e = y
1119   081B                             ;; l= x1
1120   081B                     ;; b = x2-x1+1
1121   081B             ;hwipe_xy:           
1122   081B             hwipe_pixtab_plus_2 .equ $+1
1123   081B 26 7A               mvi h,(PixTabA>>8)+2
1124   081D 96                  sub m
1125   081E             hwipe_pixtab_plus_0 .equ $+1            
1126   081E 26 78               mvi h,(PixTabA>>8)
1127   0820 56                  mov d,m                         ;HiAdr
1128   0821 DA 4A 08            jc hwipe_xy_LeftBlock
1129   0824                             
1130   0824 47                  mov b,a
1131   0825             hwipe_pixtab_plus_3 .equ $+1            
1132   0825 26 7B               mvi h,(PixTabA>>8)+3
1133   0827 7E                  mov a,m
1134   0828 EB                  xchg
1135   0829 2F                  cma
1136   082A A6                  ana m
1137   082B 77                  mov m,a
1138   082C AF                  xra a
1139   082D B0                  ora b
1140   082E CA 57 08            jz hwipe_xy_end
1141   0831             hwipe_xy_L3:
1142   0831 24                  inr h           ; next column
1143   0832 D6 08               sui 8
1144   0834 D2 42 08            jnc hwipe_xy_L4
1145   0837 C6 18               adi (RightAndMask&255)+8
1146   0839 5F                  mov e,a
1147   083A 16 04               mvi d,RightAndMask>>8
1148   083C 1A                  ldax d
1149   083D A6                  ana m
1150   083E 77                  mov m,a
1151   083F C3 57 08            jmp hwipe_xy_end
1152   0842             
1153   0842             hwipe_xy_L4:
1154   0842                     ; do in chunks
1155   0842 36 00               mvi m, 0
1156   0844 C2 31 08            jnz hwipe_xy_L3
1157   0847 C3 57 08            jmp hwipe_xy_end
1158   084A             
1159   084A             hwipe_xy_LeftBlock:             
1160   084A 3E 07               mvi a,7
1161   084C A5                  ana l
1162   084D 07                  rlc\ rlc\ rlc
1162   084E 07          
1162   084F 07          
1163   0850 B0                  ora b
1164   0851 6F                  mov l,a
1165   0852 24                  inr h                           ;to LeftMask
1166   0853 1A                  ldax d
1167   0854 B6                  ora m
1168   0855 AE                  xra m
1169   0856 12                  stax d
1170   0857             
1171   0857             hwipe_xy_end:
1172   0857 D1                  pop d
1173   0858 E1                  pop h
1174   0859             fb_4:        
1175   0859                     ; [prev, state] = [state, next]
1176   0859             ;        lhld fb_state   
1177   0859             ;        shld fb_prev    ; 20+20 = 40 (+28 = 68, but!)
1178   0859 3A 9C 07            lda fb_state
1179   085C 32 FB 07            sta fb_prev
1180   085F 3A 71 07            lda fb_next
1181   0862 32 9C 07            sta fb_state
1182   0865                     
1183   0865 C3 75 07            jmp fb_bounds_loop
1184   0868             
1185   0868             fb_bounds_loop_break:        
1186   0868                     ; next line..
1187   0868                     ; ...
1188   0868                     ; bounds += 6, bounds_b += 6
1189   0868 D1                  pop d
1190   0869 E1                  pop h
1191   086A                     ; loop continue without push/pop
1192   086A             fb_bounds_loop_cont:
1193   086A 01 07 00            lxi b, NBOUNDS
1194   086D 09                  dad b
1195   086E EB                  xchg
1196   086F 09                  dad b
1197   0870 EB                  xchg
1198   0871             fb_bounds_loop_nexty:        
1199   0871             ;        lda fb_y
1200   0871             fb_y    .equ $+1
1201   0871 3E 00               mvi a,0
1202   0873 3D                  dcr a
1203   0874             
1204   0874                     ; lfsr for line shuffling, but we need to update bounds/bounds_b by the same law, too much effort
1205   0874                     ;         ral
1206   0874                     ;         jnc lfsr_nofeedback
1207   0874                     ;         xri $1d
1208   0874                     ; lfsr_nofeedback:        
1209   0874                     ;         cpi 1
1210   0874                     
1211   0874 32 72 08            sta fb_y
1212   0877 C2 5B 07            jnz fb_lines_loop
1213   087A C9                  ret
1214   087B             ;         ; loop continue without push/pop
1215   087B             ; fb_bounds_loop_cont:
1216   087B             ;         lxi b, NBOUNDS
1217   087B             ;         dad b
1218   087B             ;         xchg
1219   087B             ;         dad b
1220   087B             ;         xchg
1221   087B             ;         jmp fb_bounds_loop_nexty
1222   087B             
1223   087B             
1224   087B             ;–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –¥–µ–ª–∏–º–æ–µ AHL=FEFFFF
1225   087B             ;HL=AHL/C
1226   087B             ;A=AHL%C
1227   087B             ;16=24/8
1228   087B             udiv16248:
1229   087B 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1229   087C 8F          
1229   087D DA 84 08    
1229   0880 B9          
1229   0881 DA 86 08    
1229   0884 91          
1229   0885 2C          
1230   0886 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1230   0887 8F          
1230   0888 DA 8F 08    
1230   088B B9          
1230   088C DA 91 08    
1230   088F 91          
1230   0890 2C          
1231   0891 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1231   0892 8F          
1231   0893 DA 9A 08    
1231   0896 B9          
1231   0897 DA 9C 08    
1231   089A 91          
1231   089B 2C          
1232   089C 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1232   089D 8F          
1232   089E DA A5 08    
1232   08A1 B9          
1232   08A2 DA A7 08    
1232   08A5 91          
1232   08A6 2C          
1233   08A7             
1234   08A7 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1234   08A8 8F          
1234   08A9 DA B0 08    
1234   08AC B9          
1234   08AD DA B2 08    
1234   08B0 91          
1234   08B1 2C          
1235   08B2 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1235   08B3 8F          
1235   08B4 DA BB 08    
1235   08B7 B9          
1235   08B8 DA BD 08    
1235   08BB 91          
1235   08BC 2C          
1236   08BD 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1236   08BE 8F          
1236   08BF DA C6 08    
1236   08C2 B9          
1236   08C3 DA C8 08    
1236   08C6 91          
1236   08C7 2C          
1237   08C8 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1237   08C9 8F          
1237   08CA DA D1 08    
1237   08CD B9          
1237   08CE DA D3 08    
1237   08D1 91          
1237   08D2 2C          
1238   08D3             
1239   08D3 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1239   08D4 8F          
1239   08D5 DA DC 08    
1239   08D8 B9          
1239   08D9 DA DE 08    
1239   08DC 91          
1239   08DD 2C          
1240   08DE 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1240   08DF 8F          
1240   08E0 DA E7 08    
1240   08E3 B9          
1240   08E4 DA E9 08    
1240   08E7 91          
1240   08E8 2C          
1241   08E9 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1241   08EA 8F          
1241   08EB DA F2 08    
1241   08EE B9          
1241   08EF DA F4 08    
1241   08F2 91          
1241   08F3 2C          
1242   08F4 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1242   08F5 8F          
1242   08F6 DA FD 08    
1242   08F9 B9          
1242   08FA DA FF 08    
1242   08FD 91          
1242   08FE 2C          
1243   08FF             
1244   08FF 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1244   0900 8F          
1244   0901 DA 08 09    
1244   0904 B9          
1244   0905 DA 0A 09    
1244   0908 91          
1244   0909 2C          
1245   090A 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1245   090B 8F          
1245   090C DA 13 09    
1245   090F B9          
1245   0910 DA 15 09    
1245   0913 91          
1245   0914 2C          
1246   0915 29                  dad h\ adc a\ jc $+7\ cmp c\ jc $+5 \ sub c\ inr l
1246   0916 8F          
1246   0917 DA 1E 09    
1246   091A B9          
1246   091B DA 20 09    
1246   091E 91          
1246   091F 2C          
1247   0920 29                  dad h\ adc a\ jc $+5\ cmp c\ rc\ sub c\ inr l
1247   0921 8F          
1247   0922 DA 27 09    
1247   0925 B9          
1247   0926 D8          
1247   0927 91          
1247   0928 2C          
1248   0929 C9                  ret
1249   092A                   
1250   092A                 ; –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–ª–∏—Ç—Ä—ã
1251   092A             set_palette_pp:
1252   092A 3E 88               mvi a, $88
1253   092C D3 00               out 0
1254   092E 3E FF               mvi a, 255
1255   0930 D3 03               out 3
1256   0932 01 00 00            lxi b, 0
1257   0935             setpal_select .equ $+1          
1258   0935 11 5F 09            lxi d, pal_b
1259   0938             _setpal_pp_1:
1260   0938 79                  mov a, c
1261   0939 D3 02               out 2
1262   093B 1A                  ldax d
1263   093C D3 0C               out $c
1264   093E E3                  xthl
1265   093F D3 0C               out $c
1266   0941 E3                  xthl
1267   0942 13                  inx d
1268   0943 0C                  inr c
1269   0944 00                  nop \ nop
1269   0945 00          
1270   0946 D3 0C               out $c
1271   0948             setpal_top .equ $+1             ; set to 3 to only program first 3 colors
1272   0948 3E 10               mvi a,$10
1273   094A B9                  cmp c
1274   094B C2 38 09            jnz _setpal_pp_1
1275   094E C9                  ret
1276   094F             
1277   094F             ; light floppy theme
1278   094F             
1279   094F             ;CLRA    .equ 243q
1280   094F             ;CLRB    .equ 243q
1281   094F             ;BLKC    .equ 121q
1282   094F             ;WHTC    .equ 377q    
1283   094F             ;
1284   094F             ;pal_a: ; $e0  
1285   094F             ;    ;    0    1    2    3    4    5    6    7    8    9    a    b    c    d    e    f
1286   094F             ;    .db  BLKC,CLRA,BLKC,CLRA,WHTC,WHTC,WHTC,WHTC,000q,000q,000q,000q,000q,000q,000q,BLKC
1287   094F             ;pal_b: ; $c0    
1288   094F             ;    .db  BLKC,BLKC,CLRB,CLRB,WHTC,WHTC,WHTC,WHTC,000q,000q,000q,000q,000q,000q,000q,BLKC
1289   094F             
1290   094F             ; goth floppy theme
1291   094F             
1292   094F             CLRA    .equ 000q
1293   094F             CLRB    .equ 000q
1294   094F             
1295   094F             BLKC    .equ 232q
1296   094F             WHTC    .equ 377q    
1297   094F             XXXC    .equ 110q
1298   094F             
1299   094F             ; atari green
1300   094F             ATRG    .equ 161q
1301   094F             
1302   094F             ;;;; semi-transparent
1303   094F             ;WHTCt    .equ 377q-011q
1304   094F             ;
1305   094F             ;pal_a: ; $e0  
1306   094F             ;    ;    0    1    2    3    4    5    6    7    8    9    a    b    c    d    e    f
1307   094F             ;    .db  BLKC,CLRA,BLKC,CLRA,WHTC,WHTCt,WHTC,WHTCt,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,BLKC
1308   094F             ;pal_b: ; $c0    
1309   094F             ;    .db  BLKC,BLKC,CLRB,CLRB,WHTC,WHTC,WHTCt,WHTCt,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,BLKC
1310   094F             ;;;;
1311   094F             
1312   094F             ; main palette (goal)
1313   094F             pal_a: ; $e0  
1314   094F                 ;    0    1    2    3    4    5    6    7    8    9    a    b    c    d    e    f
1315   094F 9A 00 9A 00     .db  BLKC,CLRA,BLKC,CLRA,WHTC,WHTC,WHTC,WHTC,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,BLKC
1315   0953 FF FF FF FF 
1315   0957 48 48 48 48 
1315   095B 48 48 48 9A 
1316   095F             pal_b: ; $c0    
1317   095F 9A 9A 00 00     .db  BLKC,BLKC,CLRB,CLRB,WHTC,WHTC,WHTC,WHTC,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,BLKC
1317   0963 FF FF FF FF 
1317   0967 48 48 48 48 
1317   096B 48 48 48 9A 
1318   096F             pal_intro: 
1319   096F                 ;    0    1    2    3    4    5    6    7    8    9    a    b    c    d    e    f
1320   096F 00 00 00 00     .db  0,0,0,0,WHTC,WHTC,WHTC,WHTC,0,0,0,0,0,0,0,0
1320   0973 FF FF FF FF 
1320   0977 00 00 00 00 
1320   097B 00 00 00 00 
1321   097F             
1322   097F             ; green palette (goal)
1323   097F             pal_atari_a: ; $e0  
1324   097F                 ;    0    1    2    3    4    5    6    7    8    9    a    b    c    d    e    f
1325   097F 71 00 71 00     .db  ATRG,CLRA,ATRG,CLRA,WHTC,WHTC,WHTC,WHTC,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,ATRG
1325   0983 FF FF FF FF 
1325   0987 48 48 48 48 
1325   098B 48 48 48 71 
1326   098F             pal_atari_b: ; $c0    
1327   098F 71 71 00 00     .db  ATRG,ATRG,CLRB,CLRB,WHTC,WHTC,WHTC,WHTC,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,XXXC,ATRG
1327   0993 FF FF FF FF 
1327   0997 48 48 48 48 
1327   099B 48 48 48 71 
1328   099F             
1329   099F             do_fade_in:
1330   099F 3A 39 3A            lda fade_in_flag
1331   09A2 3D                  dcr a
1332   09A3 32 39 3A            sta fade_in_flag
1333   09A6             pal_a_goal .equ $+1
1334   09A6 11 4F 09            lxi d, pal_a        ; goal
1335   09A9 21 19 3A            lxi h, pal_fade_a   ; work
1336   09AC             #ifdef XFADE
1337   09AC CD B9 09            call xfade
1338   09AF~            #else
1339   09AF~              #ifdef FADE_IN
1340   09AF~                    call fade_in
1341   09AF~              #else
1342   09AF~                    call fade_out
1343   09AF~              #endif
1344   09AF             #endif
1345   09AF             pal_b_goal .equ $+1
1346   09AF 11 5F 09            lxi d, pal_b        ; goal
1347   09B2 21 29 3A            lxi h, pal_fade_b   ; work
1348   09B5             #ifdef XFADE
1349   09B5 CD B9 09            call xfade
1350   09B8~            #else
1351   09B8~              #ifdef FADE_IN
1352   09B8~                    call fade_in
1353   09B8~              #else
1354   09B8~                    call fade_out
1355   09B8~              #endif
1356   09B8             #endif
1357   09B8 C9                  ret
1358   09B9             
1359   09B9             #ifdef XFADE
1360   09B9             xfade:
1361   09B9 0E 10               mvi c, 16
1362   09BB             xfade_loop:
1363   09BB 1A                  ldax d
1364   09BC             
1365   09BC C5                  push b
1366   09BD D5                    push d
1367   09BE 57                      mov d, a
1368   09BF 5E                      mov e, m
1369   09C0 CD CD 09                call xfade_bgr
1370   09C3 73                      mov m, e
1371   09C4 D1                    pop d
1372   09C5 C1                  pop b
1373   09C6 23                  inx h
1374   09C7 13                  inx d
1375   09C8 0D                  dcr c
1376   09C9 C2 BB 09            jnz xfade_loop
1377   09CC C9                  ret
1378   09CD             
1379   09CD                     ; fade e towards d
1380   09CD             xfade_bgr:
1381   09CD 7A                  mov a, d
1382   09CE E6 C0               ani 300q
1383   09D0 47                  mov b, a        ; b = goal & 0200
1384   09D1 7B                  mov a, e
1385   09D2 E6 C0               ani 300q        ; a = work & 0200
1386   09D4 B8                  cmp b
1387   09D5 CA E4 09            jz xfade_green
1388   09D8 7B                  mov a, e        ; a = work
1389   09D9 DA E1 09            jc xfade_blue_plus
1390   09DC             xfade_blue_minus:
1391   09DC D6 40               sui 100q
1392   09DE C3 E3 09            jmp xfade_blue_done
1393   09E1             xfade_blue_plus:
1394   09E1 C6 40               adi 100q
1395   09E3             xfade_blue_done:
1396   09E3 5F                  mov e, a
1397   09E4                     
1398   09E4             xfade_green:
1399   09E4 7A                  mov a, d
1400   09E5 E6 38               ani 070q
1401   09E7 47                  mov b, a        ; b = goal & 0030
1402   09E8 7B                  mov a, e
1403   09E9 E6 38               ani 070q
1404   09EB B8                  cmp b
1405   09EC CA FB 09            jz xfade_red
1406   09EF 7B                  mov a, e
1407   09F0 DA F8 09            jc xfade_green_plus
1408   09F3             xfade_green_minus:
1409   09F3 D6 08               sui 010q
1410   09F5 C3 FA 09            jmp xfade_green_done
1411   09F8             xfade_green_plus:
1412   09F8 C6 08               adi 010q
1413   09FA             xfade_green_done:
1414   09FA 5F                  mov e, a
1415   09FB                     
1416   09FB             xfade_red:
1417   09FB 7A                  mov a, d
1418   09FC E6 07               ani 7
1419   09FE 47                  mov b, a        ; b = goal & 3
1420   09FF 7B                  mov a, e
1421   0A00 E6 07               ani 7
1422   0A02 B8                  cmp b
1423   0A03 C8                  rz
1424   0A04 7B                  mov a, e        ; 
1425   0A05 DA 0C 0A            jc xfade_red_plus
1426   0A08             xfade_red_minus:
1427   0A08 D6 01               sui 1
1428   0A0A 5F                  mov e, a
1429   0A0B C9                  ret
1430   0A0C             xfade_red_plus
1431   0A0C C6 01               adi 1
1432   0A0E 5F                  mov e, a
1433   0A0F C9                  ret
1434   0A10             
1435   0A10~            #else
1436   0A10~            
1437   0A10~            #ifdef FADE_IN
1438   0A10~                    ; de=goal, hl=work (start with zeroes)
1439   0A10~                    ; work < goal (start with 000q)
1440   0A10~            fade_in:
1441   0A10~                    mvi c, 16
1442   0A10~            fade_in_loop:
1443   0A10~                    ldax d          ; goal
1444   0A10~                    push d
1445   0A10~            
1446   0A10~                    sub m           ; goal - work (work < goal)
1447   0A10~                    mov d, a
1448   0A10~                    mvi e, 0
1449   0A10~                    ani 007q
1450   0A10~                    jz $+5
1451   0A10~                    mvi e, 001q
1452   0A10~                    mov a, d
1453   0A10~                    ani 070q
1454   0A10~                    jz $+7
1455   0A10~                    mvi a, 010q
1456   0A10~                    ora e
1457   0A10~                    mov e, a
1458   0A10~                    mov a, d
1459   0A10~                    ani 300q
1460   0A10~                    jz $+7
1461   0A10~                    mvi a, 100q
1462   0A10~                    ora e
1463   0A10~                    mov e, a
1464   0A10~                    
1465   0A10~                    mov a, m
1466   0A10~                    add e
1467   0A10~                    mov m, a
1468   0A10~                    pop d
1469   0A10~                    inx h
1470   0A10~                    inx d
1471   0A10~                    dcr c
1472   0A10~                    jnz fade_in_loop
1473   0A10~                    ret
1474   0A10~            #endif
1475   0A10~            #ifdef FADE_OUT
1476   0A10~                    ; de=goal, hl=work (start with 377q)
1477   0A10~                    ; work > goal (start with 377q)
1478   0A10~            fade_out:
1479   0A10~                    mvi c, 16
1480   0A10~                    xchg            ; hl=goal, de=work
1481   0A10~            fade_out_loop:
1482   0A10~                    ldax d          ; work
1483   0A10~                    push d
1484   0A10~                    sub m           ; work - goal
1485   0A10~                    mov d, a
1486   0A10~                    mvi b, 0
1487   0A10~                    ani 007q
1488   0A10~                    jz $+5
1489   0A10~                    mvi b, 001q
1490   0A10~                    mov a, d
1491   0A10~                    ani 070q
1492   0A10~                    jz $+7
1493   0A10~                    mvi a, 010q
1494   0A10~                    ora b
1495   0A10~                    mov b, a
1496   0A10~                    mov a, d
1497   0A10~                    ani 300q
1498   0A10~                    jz $+7
1499   0A10~                    mvi a, 100q
1500   0A10~                    ora b
1501   0A10~                    mov b, a
1502   0A10~                    pop d
1503   0A10~            
1504   0A10~                    ldax d
1505   0A10~                    sub b
1506   0A10~                    stax d
1507   0A10~                    inx h
1508   0A10~                    inx d
1509   0A10~                    dcr c
1510   0A10~                    jnz fade_out_loop
1511   0A10~                    ret
1512   0A10~            #endif
1513   0A10~            
1514   0A10             #endif ; XFADE
1515   0A10             
1516   0A10             slowprint:
1517   0A10 2A 3C 3A            lhld slow_msg_ptr
1518   0A13 3A 3B 3A            lda slow_msg_state
1519   0A16 B7                  ora a                 ; state == 0 :-> print
1520   0A17 CA 2A 0A            jz slop_nextbyte
1521   0A1A 3D                  dcr a
1522   0A1B 32 3B 3A            sta slow_msg_state
1523   0A1E                     ;xra a
1524   0A1E                     ;sta slow_msg_state
1525   0A1E B7                  ora a                 ; state was 1 now 0 :-> new line
1526   0A1F C0                  rnz                   ; otherwise just delay
1527   0A20                     ; y, x
1528   0A20 5E                  mov e, m \ inx h
1528   0A21 23          
1529   0A22 56                  mov d, m \ inx h
1529   0A23 23          
1530   0A24 E5                  push h
1531   0A25 EB                  xchg
1532   0A26 CD 9E 3E            call gotoxy
1533   0A29 E1                  pop h
1534   0A2A             slop_nextbyte:
1535   0A2A 7E                  mov a, m
1536   0A2B 22 D2 3E            shld _puts_sptr
1537   0A2E 23                  inx h
1538   0A2F 22 3C 3A            shld slow_msg_ptr
1539   0A32 FE FD               cpi 253
1540   0A34 CA 8C 0A            jz delay_line
1541   0A37 FE FE               cpi 254
1542   0A39 CA 59 0A            jz launch_fish
1543   0A3C FE FF               cpi 255
1544   0A3E CA 4D 0A            jz slop_wraparound
1545   0A41 B7                  ora a
1546   0A42 C2 4A 0A            jnz slop_char
1547   0A45                     ; 0, next line in group
1548   0A45 3C                  inr a
1549   0A46 32 3B 3A            sta slow_msg_state
1550   0A49 C9                  ret ; next time get the coords
1551   0A4A             slop_char:
1552   0A4A C3 D6 3E            jmp _putchar
1553   0A4D             slop_wraparound:
1554   0A4D 2A 3E 3A            lhld slow_msg_loop
1555   0A50 22 3C 3A            shld slow_msg_ptr
1556   0A53 3E 01               mvi a, 1
1557   0A55 32 3B 3A            sta slow_msg_state
1558   0A58 C9                  ret
1559   0A59             launch_fish:
1560   0A59 3E 01               mvi a, 1
1561   0A5B 32 3B 3A            sta slow_msg_state
1562   0A5E 3E 1E               mvi a, $1e      ; fish appears in this column
1563   0A60 32 41 3A            sta fish_col
1564   0A63 3E 01               mvi a, 1
1565   0A65 32 40 3A            sta fish_col_frac
1566   0A68 32 42 3A            sta fish_enabled
1567   0A6B             
1568   0A6B             fade_to_green:
1569   0A6B                     ; xfade into green
1570   0A6B                     ; begin fade in -- make sure these pointers are initialised before oneframe()
1571   0A6B 21 7F 09            lxi h, pal_atari_a
1572   0A6E 22 A7 09            shld pal_a_goal
1573   0A71 21 8F 09            lxi h, pal_atari_b
1574   0A74 22 B0 09            shld pal_b_goal
1575   0A77             fade_start_fade:
1576   0A77 3E 08               mvi a, 8
1577   0A79 32 39 3A            sta fade_in_flag    ; enable fade in for 8 frames (see ISR)
1578   0A7C C9                  ret
1579   0A7D             fade_to_blue:               ; jumped from maybe_wipe_fish
1580   0A7D 21 4F 09            lxi h, pal_a
1581   0A80 22 A7 09            shld pal_a_goal
1582   0A83 21 5F 09            lxi h, pal_b
1583   0A86 22 B0 09            shld pal_b_goal
1584   0A89 C3 77 0A            jmp fade_start_fade
1585   0A8C             delay_line:
1586   0A8C 3E 21               mvi a, 33
1587   0A8E 32 3B 3A            sta slow_msg_state
1588   0A91 C9                  ret
1589   0A92             
1590   0A92             
1591   0A92             ISRstack:
1592   0A92                     .ds 32
1593   0AB2             ISRstackEnd:
1594   0AB2             ISR:
1595   0AB2 22 F7 0A            shld ISRsetHL+1
1596   0AB5 E1                  pop h
1597   0AB6 22 FB 0A            shld ISRsetRet+1
1598   0AB9 F5                  push psw
1599   0ABA 21 02 00            lxi h,2
1600   0ABD 39                  dad sp
1601   0ABE 22 F4 0A            shld ISRsetSP+1
1602   0AC1 69                  mov l,c
1603   0AC2 60                  mov h,b
1604   0AC3 E3                  xthl
1605   0AC4 31 B2 0A            lxi sp,ISRstackEnd
1606   0AC7 E5                  push h                          ;push psw
1607   0AC8 C5                  push b
1608   0AC9 D5                  push d
1609   0ACA             
1610   0ACA CD 2A 09            call set_palette_pp
1611   0ACD             
1612   0ACD 3A 39 3A            lda fade_in_flag
1613   0AD0 B7                  ora a
1614   0AD1 C4 9F 09            cnz do_fade_in
1615   0AD4             
1616   0AD4 3A 42 3A            lda fish_enabled
1617   0AD7 B7                  ora a
1618   0AD8 C4 78 48            cnz dumbshift
1619   0ADB             
1620   0ADB             
1621   0ADB 2A 00 3A            lhld intcount
1622   0ADE 23                  inx h
1623   0ADF 22 00 3A            shld intcount
1624   0AE2                     
1625   0AE2 3A B7 03            lda songe_enabled
1626   0AE5 B7                  ora a
1627   0AE6 C4 03 50            cnz player_tick               ; play songe from the interrupt
1628   0AE9             
1629   0AE9 3A 3A 3A            lda slowprint_enabled
1630   0AEC B7                  ora a
1631   0AED C4 10 0A            cnz slowprint
1632   0AF0             
1633   0AF0 D1                  pop d
1634   0AF1 C1                  pop b
1635   0AF2 F1                  pop psw
1636   0AF3             ISRsetSP:
1637   0AF3 31 00 00            lxi sp,0
1638   0AF6             ISRsetHL:
1639   0AF6 21 00 00            lxi h,0
1640   0AF9 FB                  ei
1641   0AFA             ISRsetRet:
1642   0AFA C3 00 00            jmp 0
1643   0AFD                     
1644   0AFD                     ; active bounds
1645   0AFD 00 0C       bounds:         .dw bounds_0
1646   0AFF 00 13       bounds_b:       .dw bounds_1
1647   0B01             
1648   0B01                     ; bounds even
1649   0B01 00 0C       bounds1:        .dw bounds_0
1650   0B03 00 13       bounds1_b:      .dw bounds_1
1651   0B05                     ; bounds odd
1652   0B05 00 1A       bounds2:        .dw bounds_2
1653   0B07 00 21       bounds2_b:      .dw bounds_3
1654   0B09             
1655   0B09                             .ds 2
1656   0B0B             
1657   0B0B                     ; polygon bounds array
1658   0C00                     .org 0100h + $ & 0ff00h  ; ALIGN 256
1659   0C00             bounds_0:
1660   0C00 01                  .db 1
1661   1300                     .org bounds_0 + (NBOUNDS * 256)
1662   1300             bounds_1:
1663   1300 01                  .db 1
1664   1A00                     .org bounds_1 + (NBOUNDS * 256)
1665   1A00             bounds_2:
1666   1A00 01                  .db 1
1667   2100                     .org bounds_2 + (NBOUNDS * 256)
1668   2100             bounds_3:
1669   2100 01                  .db 1
1670   2800                     .org bounds_3 + (NBOUNDS * 256)
1671   2800                     
1672   2800                     
1673   2800             bounds_end:
1674   2800 00                  .db 0
1675   2801             
1676   2801             ngon_start:
1677   2801             
1678   2801             ngon1:
1679   2801                     .ds 48
1680   2831 00 00 00            .db 0, 0, 0
1681   2834             
1682   2834             ;; .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
1683   2834             ;; -    -      -      -    -     -     -     -- -
1684   2834             ;; -  -    -     -             -  -       -   - -
1685   2834             ;; -------------- - -- maths -- ---- ------------
1686   2834             ;; ---------------- --- --- --- -----------------
1687   2834             ;; ==============================================
1688   2834             ;; ==============================================
1689   2834             ;; ‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°‚â°
1690   2834             calc_projection:
1691   2834 21 E9 28            lxi h, points_xy
1692   2837 11 13 29            lxi d, points_proj
1693   283A             
1694   283A             rot_loop:
1695   283A E5                  push h
1696   283B D5                  push d
1697   283C 46                    mov b, m \ inx h        ; b = x
1697   283D 23          
1698   283E 4E                    mov c, m                ; c = y
1699   283F                       
1700   283F                       ; just use (0,0) as end marker because floppies have holes in the middle
1701   283F 78                    mov a, b
1702   2840 B1                    ora c
1703   2841 CA E3 28              jz rot_loop_end
1704   2844                       
1705   2844 3A 2B 2A              lda mat_axx
1706   2847 5F                    mov e, a
1707   2848 50                    mov d,b
1708   2849 CD FB 29              call muls8s8shr7    ; d = a = d * e >> 7
1709   284C 32 E6 28              sta rot_px
1710   284F 3A 2C 2A              lda mat_axy
1711   2852 57                    mov d, a
1712   2853 59                    mov e,c
1713   2854 CD FB 29              call muls8s8shr7      ; d = a = d * e >> 7
1714   2857 3A E6 28              lda rot_px
1715   285A 82                    add d
1716   285B 32 E6 28              sta rot_px            ; rot_px = Axx * px + Axy * py        =c5, 
1717   285E                                             ; but here -60 ($c4) * 126 ($7e) =-59 (c4*7e=$c5)
1718   285E                                             ; expected -57, got -56.. meh
1719   285E 3A 2E 2A              lda mat_ayx
1720   2861 5F                    mov e, a
1721   2862 50                    mov d,b
1722   2863 CD FB 29              call muls8s8shr7          ; -3
1723   2866 32 E7 28              sta rot_py
1724   2869 3A 2F 2A              lda mat_ayy
1725   286C 57                    mov d, a
1726   286D 59                    mov e,c
1727   286E CD FB 29              call muls8s8shr7
1728   2871 3A E7 28              lda rot_py
1729   2874 82                    add d
1730   2875 32 E7 28              sta rot_py          ; rot_py = Ayx * px + Ayy * py
1731   2878                       
1732   2878 3A 31 2A              lda mat_azx
1733   287B 5F                    mov e, a
1734   287C 50                    mov d,b
1735   287D CD FB 29              call muls8s8shr7    ; =1
1736   2880 32 E8 28              sta rot_pz
1737   2883 3A 32 2A              lda mat_azy
1738   2886 57                    mov d, a
1739   2887 59                    mov e,c
1740   2888 CD FB 29              call muls8s8shr7
1741   288B 3A E8 28              lda rot_pz
1742   288E 82                    add d
1743   288F 32 E8 28              sta rot_pz            ; rot_pz = Azx * px + Azy * py
1744   2892             
1745   2892 C6 55                 adi 85        ; make sure z > 0
1746   2894 B7                    ora a \ rar \ ora a \ rar     ; (z + 85) >> 2  =$15
1746   2895 1F          
1746   2896 B7          
1746   2897 1F          
1747   2898 57                    mov d, a ; d = z_tmp
1748   2899                       
1749   2899 3A 04 3A              lda anim_pos; frame_no
1750   289C 87                    add a
1751   289D CD 48 2A              call sincosa ; c = cos(2 * frame_no)
1752   28A0                       ; calc cos / 4 (signed)
1753   28A0 AF                    xra a
1754   28A1 B1                    ora c
1755   28A2 F2 AF 28              jp locm1
1756   28A5 2F                    cma \ inr a
1756   28A6 3C          
1757   28A7 1F                    rar \ ora a \ rar
1757   28A8 B7          
1757   28A9 1F          
1758   28AA 2F                    cma \ inr a
1758   28AB 3C          
1759   28AC C3 B2 28              jmp locm2
1760   28AF                               
1761   28AF             locm1:
1762   28AF 1F                    rar \ ora a \ rar
1762   28B0 B7          
1762   28B1 1F          
1763   28B2             ;          inr c
1764   28B2             ;          dcr c         ;test sign
1765   28B2             ;          jp $+5
1766   28B2             ;          cma \ inr a   ; a = cos(2 * frame) / 4
1767   28B2             locm2:
1768   28B2 C6 1C                 adi 58-30        ; a += 58 - ZINV_MIN       ; =$59
1769   28B4 82                    add d         ; a = full z
1770   28B5                       
1771   28B5 CD 59 2B              call bzinva    ; b = zinv[z - ZINV_MIN] ; =$26
1772   28B8                       ;mov a, b \ ora a \ rar \ mov b, a
1773   28B8                       
1774   28B8                       ; clamp b at 127
1775   28B8                       ;mov a, b
1776   28B8                       ;ora a
1777   28B8                       ;jp $+5
1778   28B8                       ;mvi b, $7f
1779   28B8                       ;mvi b, $b0
1780   28B8                       
1781   28B8                       
1782   28B8             ;         push b
1783   28B8 3A E6 28              lda rot_px
1784   28BB 5F                    mov e, a
1785   28BC 50                    mov d,b
1786   28BD CD EB 29              call muls8u8shr7
1787   28C0 C6 80                 adi $80     ; +128
1788   28C2 32 E6 28              sta rot_px  ; rot_px = x * zinv[z - ZINV_MIN] >> 7
1789   28C5             ;         pop b
1790   28C5 3A E7 28              lda rot_py
1791   28C8 5F                    mov e, a
1792   28C9 50                    mov d,b
1793   28CA CD EB 29              call muls8u8shr7
1794   28CD C6 80                 adi $80     ; +128
1795   28CF 32 E7 28              sta rot_py    ; rot_py = y * zinv[z - ZINV_MIN] >> 7
1796   28D2                       ; kek
1797   28D2                       
1798   28D2 D1                  pop d
1799   28D3 3A E6 28            lda rot_px \ stax d \ inx d
1799   28D6 12          
1799   28D7 13          
1800   28D8 3A E7 28            lda rot_py \ stax d \ inx d
1800   28DB 12          
1800   28DC 13          
1801   28DD E1                  pop h
1802   28DE 23                  inx h \ inx h
1802   28DF 23          
1803   28E0 C3 3A 28            jmp rot_loop
1804   28E3             
1805   28E3             rot_loop_end:
1806   28E3 F1                  pop psw
1807   28E4 F1                  pop psw
1808   28E5 C9                  ret
1809   28E6                     
1810   28E6 00          rot_px:         .db 0
1811   28E7 00          rot_py:         .db 0
1812   28E8 00          rot_pz:         .db 0
1813   28E9                     
1814   28E9 C4 C4 3C C4 points_xy:  .db $c4,$c4, $3c,$c4, $3c,$3c, $c4,$3c, $12,$00,$0d,$0d,$00,$12,$f3,$0d,$ee,$00,$f3,$f3,$00,$ee,$0d,$f3,$06,$35,$03,$3a,$fd,$3a,$fa,$35
1814   28ED 3C 3C C4 3C 
1814   28F1 12 00 0D 0D 
1814   28F5 00 12 F3 0D 
1814   28F9 EE 00 F3 F3 
1814   28FD 00 EE 0D F3 
1814   2901 06 35 03 3A 
1814   2905 FD 3A FA 35 
1815   2909 FA 1D FD 18             .db $fa,$1d,$fd,$18,$03,$18,$06,$1d,
1815   290D 03 18 06 1D 
1816   2911 00 00                   .db 0, 0
1817   2913                         
1818   2913             points_proj: .ds 21*2
1819   293D             
1820   293D             rotmatrix:
1821   293D 3A 24 2A            lda rotz
1822   2940 CD 48 2A            call sincosa
1823   2943 60                  mov h, b
1824   2944 69                  mov l, c
1825   2945 22 25 2A            shld cos_a
1826   2948 3A 22 2A            lda rotx
1827   294B CD 48 2A            call sincosa
1828   294E 60                  mov h, b
1829   294F 69                  mov l, c
1830   2950 22 27 2A            shld cos_b
1831   2953 3A 23 2A            lda roty
1832   2956 CD 48 2A            call sincosa
1833   2959 60                  mov h, b
1834   295A 69                  mov l, c
1835   295B 22 29 2A            shld cos_c
1836   295E                     
1837   295E                     ; axx = mul(cosa, cosb) >> 7
1838   295E 3A 25 2A            lda cos_a
1839   2961 57                  mov d, a
1840   2962 3A 27 2A            lda cos_b
1841   2965 5F                  mov e, a
1842   2966 CD FB 29            call muls8s8shr7
1843   2969 32 2B 2A            sta mat_axx
1844   296C                     ;        t2   t1                                         t4 t3
1845   296C                     ; axy = (emul(emul(cosa, sinb) >> SHITF, sinc) >> SHITF) - (emul(sina, cosc) >> SHITF);
1846   296C 3A 25 2A            lda cos_a
1847   296F 57                  mov d, a
1848   2970 3A 28 2A            lda sin_b
1849   2973 5F                  mov e, a
1850   2974 CD FB 29            call muls8s8shr7        ; a = emul(cosa, sinb) >> SHITF
1851   2977 32 34 2A            sta cosa_x_sinb         ; =2
1852   297A 57                  mov d, a
1853   297B 3A 2A 2A            lda sin_c
1854   297E 5F                  mov e, a
1855   297F CD FB 29            call muls8s8shr7        ; a = emul(t1, sinc) >> SHITF  =0
1856   2982 32 2C 2A            sta mat_axy             ; temporary t2
1857   2985 3A 26 2A            lda sin_a
1858   2988 57                  mov d, a
1859   2989 3A 29 2A            lda cos_c
1860   298C 5F                  mov e, a
1861   298D CD FB 29            call muls8s8shr7
1862   2990 2F                  cma
1863   2991 3C                  inr a
1864   2992 47                  mov b, a
1865   2993 3A 2C 2A            lda mat_axy
1866   2996 80                  add b
1867   2997 32 2C 2A            sta mat_axy             ; =f8
1868   299A                     
1869   299A                     ; Axz is not used
1870   299A                     ; ;        t1                                                t2
1871   299A                     ; ; axz = (emul(emul(cosa, sinb) >> SHITF, cosc) >> SHITF) - (emul(sina, sinc) >> SHITF);
1872   299A                     ; lda cosa_x_sinb
1873   299A                     ; mov b, a
1874   299A                     ; lda cos_c
1875   299A                     ; mov c, a
1876   299A                     ; call muls8s8shr7
1877   299A                     ; sta mat_axz ; temporary
1878   299A                     
1879   299A                     ; lda sin_a
1880   299A                     ; mov b, a
1881   299A                     ; lda sin_c
1882   299A                     ; mov c, a
1883   299A                     ; call muls8s8shr7
1884   299A                     ; cma
1885   299A                     ; inr a
1886   299A                     ; mov b, a
1887   299A                     ; lda mat_axz
1888   299A                     ; add b
1889   299A                     ; sta mat_axz             ; =01
1890   299A                     
1891   299A                     ; ayx = emul(sina, cosb) >> SHITF;
1892   299A 3A 26 2A            lda sin_a
1893   299D 57                  mov d, a
1894   299E 3A 27 2A            lda cos_b
1895   29A1 5F                  mov e, a
1896   29A2 CD FB 29            call muls8s8shr7
1897   29A5 32 2E 2A            sta mat_ayx             ; =08
1898   29A8                     
1899   29A8                     ; ayy = (emul(emul(sina, sinb) >> SHITF, sinc) >> SHITF) + (emul(cosa, cosc) >> SHITF);
1900   29A8 3A 26 2A            lda sin_a
1901   29AB 57                  mov d, a
1902   29AC 3A 28 2A            lda sin_b
1903   29AF 5F                  mov e, a
1904   29B0 CD FB 29            call muls8s8shr7
1905   29B3 32 35 2A            sta sina_x_sinb
1906   29B6 57                  mov d, a
1907   29B7 3A 2A 2A            lda sin_c
1908   29BA 5F                  mov e, a
1909   29BB CD FB 29            call muls8s8shr7
1910   29BE 32 2F 2A            sta mat_ayy ; tmp
1911   29C1 3A 25 2A            lda cos_a
1912   29C4 57                  mov d, a
1913   29C5 3A 29 2A            lda cos_c
1914   29C8 5F                  mov e, a
1915   29C9 CD FB 29            call muls8s8shr7
1916   29CC 47                  mov b, a
1917   29CD 3A 2F 2A            lda mat_ayy
1918   29D0 80                  add b
1919   29D1 32 2F 2A            sta mat_ayy             ; =7e
1920   29D4                     
1921   29D4                     ; Ayz is not used
1922   29D4                     ; ; ayz = (emul(emul(sina, sinb) >> SHITF, cosc) >> SHITF) - (emul(cosa, sinc) >> SHITF);
1923   29D4                     ; lda sina_x_sinb
1924   29D4                     ; mov b, a
1925   29D4                     ; lda cos_c
1926   29D4                     ; mov c, a
1927   29D4                     ; call muls8s8shr7
1928   29D4                     ; sta mat_ayz     ; tmp
1929   29D4                     
1930   29D4                     ; lda cos_a
1931   29D4                     ; mov b, a
1932   29D4                     ; lda sin_c
1933   29D4                     ; mov c, a
1934   29D4                     ; call muls8s8shr7
1935   29D4                     ; cma
1936   29D4                     ; inr a
1937   29D4                     ; mov b, a
1938   29D4                     ; lda mat_ayz
1939   29D4                     ; add b
1940   29D4                     ; sta mat_ayz             ; =fb
1941   29D4                     
1942   29D4                     ; Azx = -sinb;
1943   29D4 3A 28 2A            lda sin_b
1944   29D7 2F                  cma
1945   29D8 3C                  inr a
1946   29D9 32 31 2A            sta mat_azx             ; =fd
1947   29DC                     
1948   29DC                     ; Azy = emul(cosb, sinc) >> SHITF;
1949   29DC 3A 27 2A            lda cos_b
1950   29DF 57                  mov d, a
1951   29E0 3A 2A 2A            lda sin_c
1952   29E3 5F                  mov e, a
1953   29E4 CD FB 29            call muls8s8shr7
1954   29E7 32 32 2A            sta mat_azy             ; =05
1955   29EA             
1956   29EA                     ; Azz is not used        
1957   29EA                     ; ; Azz = emul(cosb, cosc) >> SHITF;
1958   29EA                     ; lda cos_b
1959   29EA                     ; mov b, a
1960   29EA                     ; lda cos_c
1961   29EA                     ; mov c, a
1962   29EA                     ; call muls8s8shr7
1963   29EA                     ; sta mat_azz             ; =
1964   29EA             
1965   29EA             
1966   29EA C9                  ret
1967   29EB             
1968   29EB                     ; a = d = ((signed) e * (unsigned) d) >> 7
1969   29EB             muls8u8shr7:
1970   29EB AF                          xra a
1971   29EC 93                          sub e
1972   29ED FA F7 29            jm muls8u8shr7pos
1973   29F0             ;muls8u8shr7neg
1974   29F0 5F                  mov e, a
1975   29F1 CD 51 2A            call mul8
1976   29F4                     ; a = de >> 7
1977   29F4             ;       xchg
1978   29F4             ;       dad h
1979   29F4 AF                  xra a
1980   29F5 92                  sub d
1981   29F6 C9                  ret
1982   29F7             
1983   29F7             muls8u8shr7pos:
1984   29F7 CD 51 2A            call mul8
1985   29FA                     ; a = de >> 7
1986   29FA             ;       xchg
1987   29FA             ;       dad h
1988   29FA             ;       mov a, d
1989   29FA C9                  ret
1990   29FB             
1991   29FB             
1992   29FB             ;         ; a = l = ((signed) c * (unsigned) b) >> 7
1993   29FB             ; muls8u8shr7:
1994   29FB             ;         mvi d, 0
1995   29FB             ;         mov e, b
1996   29FB             ;         mov b, d
1997   29FB             ;         mov a, c
1998   29FB             ;         ora a
1999   29FB             ;         jp $+7
2000   29FB             ;         cma \ inr a \ dcr b
2001   29FB             ;         mov c, a
2002   29FB                     
2003   29FB             ;         call MulAHL_A_DE
2004   29FB             ;         ; a = hl >> 7
2005   29FB             ;         mov a, l
2006   29FB             ;         ral
2007   29FB             ;         mov a, h
2008   29FB             ;         ral
2009   29FB             ;         mov l, a
2010   29FB                     
2011   29FB             ;         mov a, b
2012   29FB             ;         ora a
2013   29FB             ;         mov a, l
2014   29FB             ;         rz
2015   29FB             ;         cma
2016   29FB             ;         inr a
2017   29FB             ;         mov l, a
2018   29FB             ;         ret
2019   29FB                     
2020   29FB             ;–£–º–Ω–æ–∂–µ–Ω–∏–µ AHL=A*DE
2021   29FB             ;MulAHL_A_DE:
2022   29FB             ;       mvi c,0
2023   29FB             ;       mov h,d\ mov l,e
2024   29FB             ;       add a\ jc xxMUL1
2025   29FB             ;       add a\ jc xxMUL2+2
2026   29FB             ;       add a\ jc xxMUL3+2
2027   29FB             ;       add a\ jc xxMUL4+2
2028   29FB             ;       add a\ jc xxMUL5+2
2029   29FB             ;       add a\ jc xxMUL6+2
2030   29FB             ;       add a\ jc xxMUL7+2
2031   29FB             ;       add a\ rc
2032   29FB             ;       lxi h,0
2033   29FB             ;       ret
2034   29FB             ;
2035   29FB             ;xxMUL1: dad h\ adc a\ jnc xxMUL2+2
2036   29FB             ;xxMUL2: dad d\ adc c\ dad h\ adc a\ jnc xxMUL3+2
2037   29FB             ;xxMUL3: dad d\ adc c\ dad h\ adc a\ jnc xxMUL4+2
2038   29FB             ;xxMUL4: dad d\ adc c\ dad h\ adc a\ jnc xxMUL5+2
2039   29FB             ;xxMUL5: dad d\ adc c\ dad h\ adc a\ jnc xxMUL6+2
2040   29FB             ;xxMUL6: dad d\ adc c\ dad h\ adc a\ jnc xxMUL7+2
2041   29FB             ;xxMUL7: dad d\ adc c\ dad h\ adc a\ rnc
2042   29FB             ;xxMUL8: dad d\ adc c
2043   29FB             ;       ret        
2044   29FB             
2045   29FB                     ; a=d = (d * e) >> 7 signed
2046   29FB             muls8s8shr7:
2047   29FB 7A                          mov a,d
2048   29FC AB                          xra e
2049   29FD FA 0E 2A                    jm muls8s8shr7neg
2050   2A00             ;muls8s8shr7pos
2051   2A00 AB                          xra e
2052   2A01 F2 0A 2A                    jp muls8s8shr7pos2
2053   2A04 AF                          xra a
2054   2A05 93                          sub e
2055   2A06 5F                          mov e,a
2056   2A07 AF                          xra a
2057   2A08 92                          sub d
2058   2A09 57                          mov d,a
2059   2A0A             muls8s8shr7pos2:
2060   2A0A CD 51 2A                    call mul8
2061   2A0D             ;               xchg
2062   2A0D             ;               dad h
2063   2A0D             ;               mov a,d
2064   2A0D C9                          ret
2065   2A0E                             
2066   2A0E             muls8s8shr7neg:
2067   2A0E AB                          xra e
2068   2A0F F2 15 2A                    jp muls8s8shr7neg1
2069   2A12 AF                          xra a
2070   2A13 92                          sub d
2071   2A14 57                          mov d,a
2072   2A15             muls8s8shr7neg1:
2073   2A15 AF                          xra a
2074   2A16 93                          sub e
2075   2A17 FA 1B 2A                    jm muls8s8shr7neg2
2076   2A1A 5F                          mov e,a
2077   2A1B             muls8s8shr7neg2:
2078   2A1B CD 51 2A                    call mul8
2079   2A1E             ;               xchg
2080   2A1E             ;               dad h
2081   2A1E AF                          xra a
2082   2A1F             ;               sub h
2083   2A1F             ;               mov h,a
2084   2A1F 92                          sub d
2085   2A20 57                          mov d,a
2086   2A21 C9                          ret
2087   2A22             
2088   2A22 00          rotx:           .db 0
2089   2A23 00          roty:           .db 0
2090   2A24 00          rotz:           .db 0
2091   2A25             
2092   2A25 00          cos_a:          .db 0
2093   2A26 00          sin_a:          .db 0
2094   2A27 00          cos_b:          .db 0
2095   2A28 00          sin_b:          .db 0
2096   2A29 00          cos_c:          .db 0
2097   2A2A 00          sin_c:          .db 0
2098   2A2B             
2099   2A2B 00          mat_axx:        .db      0
2100   2A2C 00          mat_axy:        .db      0
2101   2A2D 00          mat_axz:        .db      0
2102   2A2E 00          mat_ayx:        .db      0
2103   2A2F 00          mat_ayy:        .db      0
2104   2A30 00          mat_ayz:        .db      0
2105   2A31 00          mat_azx:        .db      0
2106   2A32 00          mat_azy:        .db      0
2107   2A33 00          mat_azz:        .db      0
2108   2A34             
2109   2A34 00          cosa_x_sinb:    .db 0
2110   2A35 00          sina_x_sinb:    .db 0
2111   2A36             
2112   2A36             mathinit:
2113   2A36 01 FF FF            lxi b,-1
2114   2A39 AF                  xra a
2115   2A3A 57                  mov d, a
2116   2A3B 5F                  mov e, a
2117   2A3C 21 00 2D            lxi h, MULTAB
2118   2A3F CD 82 2A            call GenSQRtab
2119   2A42 24                  inr h
2120   2A43 24                  inr h
2121   2A44 CD 82 2A            call GenSQRtab
2122   2A47 C9                  ret
2123   2A48             
2124   2A48                     ; b = sin(a), c = cos(a)
2125   2A48             sincosa:
2126   2A48 26 2C               mvi h, costbl >> 8
2127   2A4A 6F                  mov l, a
2128   2A4B 4E                  mov c, m        ; c = cos
2129   2A4C D6 40               sui DEG90
2130   2A4E 6F                  mov l, a
2131   2A4F 46                  mov b, m        ; b = sin
2132   2A50 C9                  ret
2133   2A51                  
2134   2A51                     ; from raytracing8080_vXsource/mul8bit.asm
2135   2A51                     ; de = (d * e)<<1
2136   2A51                     ; clobbers: everything
2137   2A51             mul8:
2138   2A51 7A                  mov a, d
2139   2A52 93                  sub e                   ;A=D-E
2140   2A53 26 2E               mvi h, 1+(MULTAB>>8)
2141   2A55 D2 6E 2A            jnc m8_GetDif2
2142   2A58 2F                  cma
2143   2A59 3C                  inr a                   ;A=E-D
2144   2A5A             ;m8_GetDif:
2145   2A5A 6F                  mov l, a
2146   2A5B 82                  add d
2147   2A5C 82                  add d                   ;A=E+D
2148   2A5D 56                  mov d, m
2149   2A5E 25                  dcr h
2150   2A5F 5E                  mov e, m
2151   2A60 D2 65 2A            jnc m8_GetSum
2152   2A63 26 2F               mvi h, 2+(MULTAB>>8)
2153   2A65             m8_GetSum:
2154   2A65 6F                  mov l, a
2155   2A66 7E                  mov a, m
2156   2A67 93                  sub e
2157   2A68 5F                  mov e, a
2158   2A69 24                  inr h
2159   2A6A 7E                  mov a, m
2160   2A6B 9A                  sbb d
2161   2A6C 57                  mov d, a
2162   2A6D C9                  ret
2163   2A6E             
2164   2A6E             m8_GetDif2:
2165   2A6E 6F                  mov l, a
2166   2A6F 56                  mov d, m
2167   2A70 25                  dcr h
2168   2A71 83                  add e
2169   2A72 83                  add e                   ;A=D+E
2170   2A73 5E                  mov e, m
2171   2A74 D2 79 2A            jnc m8_GetSum2
2172   2A77 26 2F               mvi h, 2+(MULTAB>>8)
2173   2A79             m8_GetSum2:
2174   2A79 6F                  mov l, a
2175   2A7A 7E                  mov a, m
2176   2A7B 93                  sub e
2177   2A7C 5F                  mov e, a
2178   2A7D 24                  inr h
2179   2A7E 7E                  mov a, m
2180   2A7F 9A                  sbb d
2181   2A80 57                  mov d, a
2182   2A81 C9                  ret
2183   2A82             
2184   2A82             
2185   2A82             GenSQRtab:
2186   2A82 D5                  push d
2187   2A83 F5                  push psw
2188   2A84 1F                  rar
2189   2A85 F5                  push psw
2190   2A86 7A                  mov a, d
2191   2A87 1F                  rar
2192   2A88 57                  mov d, a
2193   2A89 7B                  mov a, e
2194   2A8A 1F                  rar
2195   2A8B 5F                  mov e, a
2196   2A8C F1                  pop psw
2197   2A8D             ;       rar
2198   2A8D 7A                  mov a, d
2199   2A8E             ;       rar
2200   2A8E 24                  inr h
2201   2A8F 77                  mov m,a
2202   2A90 25                  dcr h
2203   2A91 7B                  mov a, e
2204   2A92             ;       rar
2205   2A92 77                  mov m, a
2206   2A93 F1                  pop psw
2207   2A94 D1                  pop d
2208   2A95 03                  inx b
2209   2A96 03                  inx b
2210   2A97 EB                  xchg
2211   2A98 09                  dad b
2212   2A99 EB                  xchg
2213   2A9A CE 00               aci 0
2214   2A9C 2C                  inr l
2215   2A9D C2 82 2A            jnz GenSQRtab
2216   2AA0 C9                  ret
2217   2AA1             
2218   2B00                     .org 0100h + $ & 0ff00h  ; ALIGN 256
2219   2B00             zinvtbl:
2220   2B00 FF FF F8 F1                 .db $ff,$ff,$f8,$f1,$ea,$e3,$dd,$d7,$d2,$cd,$c8,$c3,$be,$ba,$b6,$b2,$ae,$aa,$a7,$a4,$a0,$9d,$9a,$97,$95,$92,$8f,$8d,$8b,$88,$86,$84,
2220   2B04 EA E3 DD D7 
2220   2B08 D2 CD C8 C3 
2220   2B0C BE BA B6 B2 
2220   2B10 AE AA A7 A4 
2220   2B14 A0 9D 9A 97 
2220   2B18 95 92 8F 8D 
2220   2B1C 8B 88 86 84 
2221   2B20 82 80 7E 7C         .db $82,$80,$7e,$7c,$7a,$78,$76,$75,$73,$72,$70,$6e,$6d,$6c,$6a,$69,$67,$66,$65,$64,$62,$61,$60,$5f,$5e,$5d,$5c,$5b,$5a,$59,$58,$57,
2221   2B24 7A 78 76 75 
2221   2B28 73 72 70 6E 
2221   2B2C 6D 6C 6A 69 
2221   2B30 67 66 65 64 
2221   2B34 62 61 60 5F 
2221   2B38 5E 5D 5C 5B 
2221   2B3C 5A 59 58 57 
2222   2B40 56 55 54 53         .db $56,$55,$54,$53,$52,$52,$51,$50,$4f,$4f,$4e,$4d,$4c,$4c,$4b,$4a,$4a,$49,$48,$48,$47,$46,$46,$45,$45
2222   2B44 52 52 51 50 
2222   2B48 4F 4F 4E 4D 
2222   2B4C 4C 4C 4B 4A 
2222   2B50 4A 49 48 48 
2222   2B54 47 46 46 45 
2222   2B58 45 
2223   2B59             
2224   2B59                     ; b = 8192/(31+a)
2225   2B59             bzinva:
2226   2B59 26 2B               mvi h, zinvtbl >> 8
2227   2B5B 6F                  mov l, a
2228   2B5C 46                  mov b, m
2229   2B5D C9                  ret
2230   2B5E             
2231   2C00                     .org 0100h + $ & 0ff00h  ; ALIGN 256
2232   2C00             costbl:
2233   2C00 7F 7F 7F 7F         .db $7f,$7f,$7f,$7f,$7e,$7e,$7e,$7d,$7d,$7c,$7b,$7a,$7a,$79,$78,$76,$75,$74,$73,$71,$70,$6f,$6d,$6b,$6a,$68,$66,$64,$62,$60,$5e,$5c
2233   2C04 7E 7E 7E 7D 
2233   2C08 7D 7C 7B 7A 
2233   2C0C 7A 79 78 76 
2233   2C10 75 74 73 71 
2233   2C14 70 6F 6D 6B 
2233   2C18 6A 68 66 64 
2233   2C1C 62 60 5E 5C 
2234   2C20 5A 58 55 53         .db $5a,$58,$55,$53,$51,$4e,$4c,$49,$47,$44,$41,$3f,$3c,$39,$36,$33,$31,$2e,$2b,$28,$25,$22,$1f,$1c,$19,$16,$13,$10,$0c,$09,$06,$03
2234   2C24 51 4E 4C 49 
2234   2C28 47 44 41 3F 
2234   2C2C 3C 39 36 33 
2234   2C30 31 2E 2B 28 
2234   2C34 25 22 1F 1C 
2234   2C38 19 16 13 10 
2234   2C3C 0C 09 06 03 
2235   2C40 00 FD FA F7         .db $00,$fd,$fa,$f7,$f4,$f0,$ed,$ea,$e7,$e4,$e1,$de,$db,$d8,$d5,$d2,$cf,$cd,$ca,$c7,$c4,$c1,$bf,$bc,$b9,$b7,$b4,$b2,$af,$ad,$ab,$a8
2235   2C44 F4 F0 ED EA 
2235   2C48 E7 E4 E1 DE 
2235   2C4C DB D8 D5 D2 
2235   2C50 CF CD CA C7 
2235   2C54 C4 C1 BF BC 
2235   2C58 B9 B7 B4 B2 
2235   2C5C AF AD AB A8 
2236   2C60 A6 A4 A2 A0         .db $a6,$a4,$a2,$a0,$9e,$9c,$9a,$98,$96,$95,$93,$91,$90,$8f,$8d,$8c,$8b,$8a,$88,$87,$86,$86,$85,$84,$83,$83,$82,$82,$82,$81,$81,$81
2236   2C64 9E 9C 9A 98 
2236   2C68 96 95 93 91 
2236   2C6C 90 8F 8D 8C 
2236   2C70 8B 8A 88 87 
2236   2C74 86 86 85 84 
2236   2C78 83 83 82 82 
2236   2C7C 82 81 81 81 
2237   2C80 81 81 81 81         .db $81,$81,$81,$81,$82,$82,$82,$83,$83,$84,$85,$86,$86,$87,$88,$8a,$8b,$8c,$8d,$8f,$90,$91,$93,$95,$96,$98,$9a,$9c,$9e,$a0,$a2,$a4
2237   2C84 82 82 82 83 
2237   2C88 83 84 85 86 
2237   2C8C 86 87 88 8A 
2237   2C90 8B 8C 8D 8F 
2237   2C94 90 91 93 95 
2237   2C98 96 98 9A 9C 
2237   2C9C 9E A0 A2 A4 
2238   2CA0 A6 A8 AB AD         .db $a6,$a8,$ab,$ad,$af,$b2,$b4,$b7,$b9,$bc,$bf,$c1,$c4,$c7,$ca,$cd,$cf,$d2,$d5,$d8,$db,$de,$e1,$e4,$e7,$ea,$ed,$f0,$f4,$f7,$fa,$fd
2238   2CA4 AF B2 B4 B7 
2238   2CA8 B9 BC BF C1 
2238   2CAC C4 C7 CA CD 
2238   2CB0 CF D2 D5 D8 
2238   2CB4 DB DE E1 E4 
2238   2CB8 E7 EA ED F0 
2238   2CBC F4 F7 FA FD 
2239   2CC0 00 03 06 09         .db $00,$03,$06,$09,$0c,$10,$13,$16,$19,$1c,$1f,$22,$25,$28,$2b,$2e,$31,$33,$36,$39,$3c,$3f,$41,$44,$47,$49,$4c,$4e,$51,$53,$55,$58
2239   2CC4 0C 10 13 16 
2239   2CC8 19 1C 1F 22 
2239   2CCC 25 28 2B 2E 
2239   2CD0 31 33 36 39 
2239   2CD4 3C 3F 41 44 
2239   2CD8 47 49 4C 4E 
2239   2CDC 51 53 55 58 
2240   2CE0 5A 5C 5E 60         .db $5a,$5c,$5e,$60,$62,$64,$66,$68,$6a,$6b,$6d,$6f,$70,$71,$73,$74,$75,$76,$78,$79,$7a,$7a,$7b,$7c,$7d,$7d,$7e,$7e,$7e,$7f,$7f,$7f
2240   2CE4 62 64 66 68 
2240   2CE8 6A 6B 6D 6F 
2240   2CEC 70 71 73 74 
2240   2CF0 75 76 78 79 
2240   2CF4 7A 7A 7B 7C 
2240   2CF8 7D 7D 7E 7E 
2240   2CFC 7E 7F 7F 7F 
2241   2D00             
2242   2D00             MULTAB: .ds 1024
2243   3100             
2244   3100             TOPLINE .equ $a0
2245   3100             LINEH   .equ 14
2246   3100             msg1:   
2247   3100 82 04 48 54         .db TOPLINE - 30, 4, "HTTPS://CAGLRC.CC/SCALAR", 0
2247   3104 54 50 53 3A 
2247   3108 2F 2F 43 41 
2247   310C 47 4C 52 43 
2247   3110 2E 43 43 2F 
2247   3114 53 43 41 4C 
2247   3118 41 52 00 
2248   311B 0A 0E 32 30         .db 10, 14, "2025", 0
2248   311F 32 35 00 
2249   3122             ;                                         "                                "
2250   3122             msg_restart:
2251   3122 A0 04 4B 41         .db TOPLINE -  0, 4, "KARTOTEKA FOR VECTOR-06C", 0
2251   3126 52 54 4F 54 
2251   312A 45 4B 41 20 
2251   312E 46 4F 52 20 
2251   3132 56 45 43 54 
2251   3136 4F 52 2D 30 
2251   313A 36 43 00 
2252   313D 96 04 2D 2D         .db TOPLINE - 10, 4, "------------------------", 0
2252   3141 2D 2D 2D 2D 
2252   3145 2D 2D 2D 2D 
2252   3149 2D 2D 2D 2D 
2252   314D 2D 2D 2D 2D 
2252   3151 2D 2D 2D 2D 
2252   3155 2D 2D 00 
2253   3158 50 00 20 56         .db TOPLINE - 80, 0,              " VISIT FOR GIGAZ OF V-06C WAREZ ", 0
2253   315C 49 53 49 54 
2253   3160 20 46 4F 52 
2253   3164 20 47 49 47 
2253   3168 41 5A 20 4F 
2253   316C 46 20 56 2D 
2253   3170 30 36 43 20 
2253   3174 57 41 52 45 
2253   3178 5A 20 00 
2254   317B 42 00 20 20         .db TOPLINE - 80 - LINEH, 0,      "     GAMEZ, DEMOS  AND DOCS     ", 0
2254   317F 20 20 20 47 
2254   3183 41 4D 45 5A 
2254   3187 2C 20 44 45 
2254   318B 4D 4F 53 20 
2254   318F 20 41 4E 44 
2254   3193 20 44 4F 43 
2254   3197 53 20 20 20 
2254   319B 20 20 00 
2255   319E 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "       RECENT & HISTORICAL      ", 0
2255   31A2 20 20 20 20 
2255   31A6 20 52 45 43 
2255   31AA 45 4E 54 20 
2255   31AE 26 20 48 49 
2255   31B2 53 54 4F 52 
2255   31B6 49 43 41 4C 
2255   31BA 20 20 20 20 
2255   31BE 20 20 00 
2256   31C1             
2257   31C1                     ;.db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0
2258   31C1                     ;.db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0
2259   31C1 01 01 FD            .db 1, 1, 253
2260   31C4 01 01 FD            .db 1, 1, 253
2261   31C7                     
2262   31C7 50 00 20 20         .db TOPLINE - 80, 0,              "      COME AND LEARN ABOUT      ", 0
2262   31CB 20 20 20 20 
2262   31CF 43 4F 4D 45 
2262   31D3 20 41 4E 44 
2262   31D7 20 4C 45 41 
2262   31DB 52 4E 20 41 
2262   31DF 42 4F 55 54 
2262   31E3 20 20 20 20 
2262   31E7 20 20 00 
2263   31EA 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "         -- -- -- -- --         ", 0
2263   31EE 20 20 20 20 
2263   31F2 20 20 20 2D 
2263   31F6 2D 20 2D 2D 
2263   31FA 20 2D 2D 20 
2263   31FE 2D 2D 20 2D 
2263   3202 2D 20 20 20 
2263   3206 20 20 20 20 
2263   320A 20 20 00 
2264   320D 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "            -- -- --            ", 0
2264   3211 20 20 20 20 
2264   3215 20 20 20 20 
2264   3219 20 20 2D 2D 
2264   321D 20 2D 2D 20 
2264   3221 2D 2D 20 20 
2264   3225 20 20 20 20 
2264   3229 20 20 20 20 
2264   322D 20 20 00 
2265   3230 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "           VECTOR-06C           ", 0
2265   3234 20 20 20 20 
2265   3238 20 20 20 20 
2265   323C 20 56 45 43 
2265   3240 54 4F 52 2D 
2265   3244 30 36 43 20 
2265   3248 20 20 20 20 
2265   324C 20 20 20 20 
2265   3250 20 20 00 
2266   3253             
2267   3253                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2268   3253                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2269   3253 01 01 FD            .db 1, 1, 253
2270   3256 01 01 FD            .db 1, 1, 253
2271   3259             
2272   3259 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "                                ", 0   ; wipe previous
2272   325D 20 20 20 20 
2272   3261 20 20 20 20 
2272   3265 20 20 20 20 
2272   3269 20 20 20 20 
2272   326D 20 20 20 20 
2272   3271 20 20 20 20 
2272   3275 20 20 20 20 
2272   3279 20 20 00 
2273   327C 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "                                ", 0
2273   3280 20 20 20 20 
2273   3284 20 20 20 20 
2273   3288 20 20 20 20 
2273   328C 20 20 20 20 
2273   3290 20 20 20 20 
2273   3294 20 20 20 20 
2273   3298 20 20 20 20 
2273   329C 20 20 00 
2274   329F 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0
2274   32A3 20 20 20 20 
2274   32A7 20 20 20 20 
2274   32AB 20 20 20 20 
2274   32AF 20 20 20 20 
2274   32B3 20 20 20 20 
2274   32B7 20 20 20 20 
2274   32BB 20 20 20 20 
2274   32BF 20 20 00 
2275   32C2             
2276   32C2 50 00 20 20         .db TOPLINE - 80, 0,              "  CODE NEW DEMOS AND GAMES FOR  ", 0
2276   32C6 43 4F 44 45 
2276   32CA 20 4E 45 57 
2276   32CE 20 44 45 4D 
2276   32D2 4F 53 20 41 
2276   32D6 4E 44 20 47 
2276   32DA 41 4D 45 53 
2276   32DE 20 46 4F 52 
2276   32E2 20 20 00 
2277   32E5 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "           BEKTOP-06",20,"           ", 0
2277   32E9 20 20 20 20 
2277   32ED 20 20 20 20 
2277   32F1 20 42 45 4B 
2277   32F5 54 4F 50 2D 
2277   32F9 30 36 14 20 
2277   32FD 20 20 20 20 
2277   3301 20 20 20 20 
2277   3305 20 20 00 
2278   3308 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "   FOR ITS POWERFUL 8080A CPU   ", 0
2278   330C 20 46 4F 52 
2278   3310 20 49 54 53 
2278   3314 20 50 4F 57 
2278   3318 45 52 46 55 
2278   331C 4C 20 38 30 
2278   3320 38 30 41 20 
2278   3324 43 50 55 20 
2278   3328 20 20 00 
2279   332B 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "      (BEAUTIFUL MNEMONICS)     ", 0
2279   332F 20 20 20 20 
2279   3333 28 42 45 41 
2279   3337 55 54 49 46 
2279   333B 55 4C 20 4D 
2279   333F 4E 45 4D 4F 
2279   3343 4E 49 43 53 
2279   3347 29 20 20 20 
2279   334B 20 20 00 
2280   334E                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2281   334E                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2282   334E 01 01 FD            .db 1, 1, 253
2283   3351 01 01 FD            .db 1, 1, 253
2284   3354             
2285   3354 50 00 20 20         .db TOPLINE - 80, 0,              "                                ", 0
2285   3358 20 20 20 20 
2285   335C 20 20 20 20 
2285   3360 20 20 20 20 
2285   3364 20 20 20 20 
2285   3368 20 20 20 20 
2285   336C 20 20 20 20 
2285   3370 20 20 20 20 
2285   3374 20 20 00 
2286   3377 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "                                ", 0   ; wipe previous
2286   337B 20 20 20 20 
2286   337F 20 20 20 20 
2286   3383 20 20 20 20 
2286   3387 20 20 20 20 
2286   338B 20 20 20 20 
2286   338F 20 20 20 20 
2286   3393 20 20 20 20 
2286   3397 20 20 00 
2287   339A 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "                                ", 0
2287   339E 20 20 20 20 
2287   33A2 20 20 20 20 
2287   33A6 20 20 20 20 
2287   33AA 20 20 20 20 
2287   33AE 20 20 20 20 
2287   33B2 20 20 20 20 
2287   33B6 20 20 20 20 
2287   33BA 20 20 00 
2288   33BD 18 00 20 20         .db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2288   33C1 20 20 20 20 
2288   33C5 20 20 20 20 
2288   33C9 20 20 20 20 
2288   33CD 20 20 20 20 
2288   33D1 20 20 20 20 
2288   33D5 20 20 20 20 
2288   33D9 20 20 20 20 
2288   33DD 20 20 00 
2289   33E0             
2290   33E0 5E 00 20 20         .db TOPLINE - 80 + (LINEH*1), 0,  "     XCHG                       ", 0
2290   33E4 20 20 20 58 
2290   33E8 43 48 47 20 
2290   33EC 20 20 20 20 
2290   33F0 20 20 20 20 
2290   33F4 20 20 20 20 
2290   33F8 20 20 20 20 
2290   33FC 20 20 20 20 
2290   3400 20 20 00 
2291   3403 5E 00 20 20         .db TOPLINE - 80 + (LINEH*1), 0,  "                      DAD SP    ", 0
2291   3407 20 20 20 20 
2291   340B 20 20 20 20 
2291   340F 20 20 20 20 
2291   3413 20 20 20 20 
2291   3417 20 20 20 20 
2291   341B 44 41 44 20 
2291   341F 53 50 20 20 
2291   3423 20 20 00 
2292   3426 5E 00 20 20         .db TOPLINE - 80 + (LINEH*1), 0,  "            XTHL                ", 0
2292   342A 20 20 20 20 
2292   342E 20 20 20 20 
2292   3432 20 20 58 54 
2292   3436 48 4C 20 20 
2292   343A 20 20 20 20 
2292   343E 20 20 20 20 
2292   3442 20 20 20 20 
2292   3446 20 20 00 
2293   3449 5E 00 20 20         .db TOPLINE - 80 + (LINEH*1), 0,  "        SPHL                    ", 0
2293   344D 20 20 20 20 
2293   3451 20 20 53 50 
2293   3455 48 4C 20 20 
2293   3459 20 20 20 20 
2293   345D 20 20 20 20 
2293   3461 20 20 20 20 
2293   3465 20 20 20 20 
2293   3469 20 20 00 
2294   346C 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0     ; wipe "beautiful mnemonics"
2294   3470 20 20 20 20 
2294   3474 20 20 20 20 
2294   3478 20 20 20 20 
2294   347C 20 20 20 20 
2294   3480 20 20 20 20 
2294   3484 20 20 20 20 
2294   3488 20 20 20 20 
2294   348C 20 20 00 
2295   348F 5E 00 20 20         .db TOPLINE - 80 + (LINEH*1), 0,  "                                ", 0
2295   3493 20 20 20 20 
2295   3497 20 20 20 20 
2295   349B 20 20 20 20 
2295   349F 20 20 20 20 
2295   34A3 20 20 20 20 
2295   34A7 20 20 20 20 
2295   34AB 20 20 20 20 
2295   34AF 20 20 00 
2296   34B2 5E 00 20 20         .db TOPLINE - 80 + (LINEH*1), 0,  "                FHTAGN          ", 0
2296   34B6 20 20 20 20 
2296   34BA 20 20 20 20 
2296   34BE 20 20 20 20 
2296   34C2 20 20 46 48 
2296   34C6 54 41 47 4E 
2296   34CA 20 20 20 20 
2296   34CE 20 20 20 20 
2296   34D2 20 20 00 
2297   34D5 5E 00 20 20         .db TOPLINE - 80 + (LINEH*1), 0,  "                                ", 0
2297   34D9 20 20 20 20 
2297   34DD 20 20 20 20 
2297   34E1 20 20 20 20 
2297   34E5 20 20 20 20 
2297   34E9 20 20 20 20 
2297   34ED 20 20 20 20 
2297   34F1 20 20 20 20 
2297   34F5 20 20 00 
2298   34F8             
2299   34F8             
2300   34F8 A0 04 20 4B         .db TOPLINE -  0, 4, " KAPTOTEKA  BEKTOPA-06",20,"  ", 0
2300   34FC 41 50 54 4F 
2300   3500 54 45 4B 41 
2300   3504 20 20 42 45 
2300   3508 4B 54 4F 50 
2300   350C 41 2D 30 36 
2300   3510 14 20 20 00 
2301   3514             
2302   3514 50 00 20 20         .db TOPLINE - 80, 0,              "    WRITE MASSIVE TUNES  FOR    ", 0
2302   3518 20 20 57 52 
2302   351C 49 54 45 20 
2302   3520 4D 41 53 53 
2302   3524 49 56 45 20 
2302   3528 54 55 4E 45 
2302   352C 53 20 20 46 
2302   3530 4F 52 20 20 
2302   3534 20 20 00 
2303   3537 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "          THE AMAZING           ", 0
2303   353B 20 20 20 20 
2303   353F 20 20 20 20 
2303   3543 54 48 45 20 
2303   3547 41 4D 41 5A 
2303   354B 49 4E 47 20 
2303   354F 20 20 20 20 
2303   3553 20 20 20 20 
2303   3557 20 20 00 
2304   355A 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "         THE INCREDIBLE         ", 0
2304   355E 20 20 20 20 
2304   3562 20 20 20 54 
2304   3566 48 45 20 49 
2304   356A 4E 43 52 45 
2304   356E 44 49 42 4C 
2304   3572 45 20 20 20 
2304   3576 20 20 20 20 
2304   357A 20 20 00 
2305   357D 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "       THE SECOND TO NONE       ", 0
2305   3581 20 20 20 20 
2305   3585 20 54 48 45 
2305   3589 20 53 45 43 
2305   358D 4F 4E 44 20 
2305   3591 54 4F 20 4E 
2305   3595 4F 4E 45 20 
2305   3599 20 20 20 20 
2305   359D 20 20 00 
2306   35A0 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "           8253 (VI53)          ", 0
2306   35A4 20 20 20 20 
2306   35A8 20 20 20 20 
2306   35AC 20 38 32 35 
2306   35B0 33 20 28 56 
2306   35B4 49 35 33 29 
2306   35B8 20 20 20 20 
2306   35BC 20 20 20 20 
2306   35C0 20 20 00 
2307   35C3 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "         SOUND GENERATOR        ", 0
2307   35C7 20 20 20 20 
2307   35CB 20 20 20 53 
2307   35CF 4F 55 4E 44 
2307   35D3 20 47 45 4E 
2307   35D7 45 52 41 54 
2307   35DB 4F 52 20 20 
2307   35DF 20 20 20 20 
2307   35E3 20 20 00 
2308   35E6             
2309   35E6                     ;.db 1, 1, 254 ; launch fish
2310   35E6             
2311   35E6                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2312   35E6                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2313   35E6 01 01 FD            .db 1, 1, 253 ; delay
2314   35E9 01 01 FD            .db 1, 1, 253 ; delay
2315   35EC             
2316   35EC 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "                                ", 0   ; wipe previous
2316   35F0 20 20 20 20 
2316   35F4 20 20 20 20 
2316   35F8 20 20 20 20 
2316   35FC 20 20 20 20 
2316   3600 20 20 20 20 
2316   3604 20 20 20 20 
2316   3608 20 20 20 20 
2316   360C 20 20 00 
2317   360F 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "                                ", 0
2317   3613 20 20 20 20 
2317   3617 20 20 20 20 
2317   361B 20 20 20 20 
2317   361F 20 20 20 20 
2317   3623 20 20 20 20 
2317   3627 20 20 20 20 
2317   362B 20 20 20 20 
2317   362F 20 20 00 
2318   3632 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0
2318   3636 20 20 20 20 
2318   363A 20 20 20 20 
2318   363E 20 20 20 20 
2318   3642 20 20 20 20 
2318   3646 20 20 20 20 
2318   364A 20 20 20 20 
2318   364E 20 20 20 20 
2318   3652 20 20 00 
2319   3655             
2320   3655 50 00 20 20         .db TOPLINE - 80, 0,              "    WIN OLDSKOOL COMPOS WITH    ", 0
2320   3659 20 20 57 49 
2320   365D 4E 20 4F 4C 
2320   3661 44 53 4B 4F 
2320   3665 4F 4C 20 43 
2320   3669 4F 4D 50 4F 
2320   366D 53 20 57 49 
2320   3671 54 48 20 20 
2320   3675 20 20 00 
2321   3678 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "         -- -- -- -- --         ", 0
2321   367C 20 20 20 20 
2321   3680 20 20 20 2D 
2321   3684 2D 20 2D 2D 
2321   3688 20 2D 2D 20 
2321   368C 2D 2D 20 2D 
2321   3690 2D 20 20 20 
2321   3694 20 20 20 20 
2321   3698 20 20 00 
2322   369B 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "            -- -- --            ", 0
2322   369F 20 20 20 20 
2322   36A3 20 20 20 20 
2322   36A7 20 20 2D 2D 
2322   36AB 20 2D 2D 20 
2322   36AF 2D 2D 20 20 
2322   36B3 20 20 20 20 
2322   36B7 20 20 20 20 
2322   36BB 20 20 00 
2323   36BE 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "        BEKTOP-06",20," PRODS        ", 0
2323   36C2 20 20 20 20 
2323   36C6 20 20 42 45 
2323   36CA 4B 54 4F 50 
2323   36CE 2D 30 36 14 
2323   36D2 20 50 52 4F 
2323   36D6 44 53 20 20 
2323   36DA 20 20 20 20 
2323   36DE 20 20 00 
2324   36E1             
2325   36E1                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2326   36E1                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2327   36E1 01 01 FD            .db 1, 1, 253
2328   36E4 01 01 FD            .db 1, 1, 253
2329   36E7             
2330   36E7 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "                                ", 0   ; wipe previous
2330   36EB 20 20 20 20 
2330   36EF 20 20 20 20 
2330   36F3 20 20 20 20 
2330   36F7 20 20 20 20 
2330   36FB 20 20 20 20 
2330   36FF 20 20 20 20 
2330   3703 20 20 20 20 
2330   3707 20 20 00 
2331   370A 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "                                ", 0
2331   370E 20 20 20 20 
2331   3712 20 20 20 20 
2331   3716 20 20 20 20 
2331   371A 20 20 20 20 
2331   371E 20 20 20 20 
2331   3722 20 20 20 20 
2331   3726 20 20 20 20 
2331   372A 20 20 00 
2332   372D 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0
2332   3731 20 20 20 20 
2332   3735 20 20 20 20 
2332   3739 20 20 20 20 
2332   373D 20 20 20 20 
2332   3741 20 20 20 20 
2332   3745 20 20 20 20 
2332   3749 20 20 20 20 
2332   374D 20 20 00 
2333   3750             
2334   3750                     ;.db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0
2335   3750 01 01 FD            .db 1, 1, 253
2336   3753 50 00 20 20         .db TOPLINE - 80,             0,  "             CREDITS            ", 0
2336   3757 20 20 20 20 
2336   375B 20 20 20 20 
2336   375F 20 20 20 43 
2336   3763 52 45 44 49 
2336   3767 54 53 20 20 
2336   376B 20 20 20 20 
2336   376F 20 20 20 20 
2336   3773 20 20 00 
2337   3776 34 00 20 43         .db TOPLINE - 80 - (LINEH*2), 0,  " CODE, GFX, MUSIC ..... SVOFSKI ", 0
2337   377A 4F 44 45 2C 
2337   377E 20 47 46 58 
2337   3782 2C 20 4D 55 
2337   3786 53 49 43 20 
2337   378A 2E 2E 2E 2E 
2337   378E 2E 20 53 56 
2337   3792 4F 46 53 4B 
2337   3796 49 20 00 
2338   3799 26 00 20 4D         .db TOPLINE - 80 - (LINEH*3), 0,  " MAD CODE & BASS ....... IVAGOR ", 0
2338   379D 41 44 20 43 
2338   37A1 4F 44 45 20 
2338   37A5 26 20 42 41 
2338   37A9 53 53 20 2E 
2338   37AD 2E 2E 2E 2E 
2338   37B1 2E 2E 20 49 
2338   37B5 56 41 47 4F 
2338   37B9 52 20 00 
2339   37BC             
2340   37BC                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2341   37BC 01 01 FD            .db 1, 1, 253
2342   37BF             
2343   37BF 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "                                ", 0   ; wipe previous
2343   37C3 20 20 20 20 
2343   37C7 20 20 20 20 
2343   37CB 20 20 20 20 
2343   37CF 20 20 20 20 
2343   37D3 20 20 20 20 
2343   37D7 20 20 20 20 
2343   37DB 20 20 20 20 
2343   37DF 20 20 00 
2344   37E2 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "                                ", 0
2344   37E6 20 20 20 20 
2344   37EA 20 20 20 20 
2344   37EE 20 20 20 20 
2344   37F2 20 20 20 20 
2344   37F6 20 20 20 20 
2344   37FA 20 20 20 20 
2344   37FE 20 20 20 20 
2344   3802 20 20 00 
2345   3805 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0
2345   3809 20 20 20 20 
2345   380D 20 20 20 20 
2345   3811 20 20 20 20 
2345   3815 20 20 20 20 
2345   3819 20 20 20 20 
2345   381D 20 20 20 20 
2345   3821 20 20 20 20 
2345   3825 20 20 00 
2346   3828                     
2347   3828 42 00 20 45         .db TOPLINE - 80 - (LINEH*1), 0,  " ECHOING.MOD VARIATION FOR VI53 ", 0
2347   382C 43 48 4F 49 
2347   3830 4E 47 2E 4D 
2347   3834 4F 44 20 56 
2347   3838 41 52 49 41 
2347   383C 54 49 4F 4E 
2347   3840 20 46 4F 52 
2347   3844 20 56 49 35 
2347   3848 33 20 00 
2348   384B 34 00 20 42         .db TOPLINE - 80 - (LINEH*2), 0,  " BY SVOFSKI FEAT IVAGOR ON BEHS ", 0
2348   384F 59 20 53 56 
2348   3853 4F 46 53 4B 
2348   3857 49 20 46 45 
2348   385B 41 54 20 49 
2348   385F 56 41 47 4F 
2348   3863 52 20 4F 4E 
2348   3867 20 42 45 48 
2348   386B 53 20 00 
2349   386E 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "     - OG AUTHOR UNKNOWN -      ", 0
2349   3872 20 20 20 2D 
2349   3876 20 4F 47 20 
2349   387A 41 55 54 48 
2349   387E 4F 52 20 55 
2349   3882 4E 4B 4E 4F 
2349   3886 57 4E 20 2D 
2349   388A 20 20 20 20 
2349   388E 20 20 00 
2350   3891             
2351   3891                     ;.db TOPLINE - 80 - (LINEH*4), 0,  "                                ", 0
2352   3891 01 01 FD            .db 1, 1, 253
2353   3894             
2354   3894 A0 04 20 20         .db TOPLINE -  0, 4, "  KPOTOTEKA", 0
2354   3898 4B 50 4F 54 
2354   389C 4F 54 45 4B 
2354   38A0 41 00 
2355   38A2             
2356   38A2 50 00 20 20         .db TOPLINE - 80 - (LINEH*0), 0,  "                                ", 0
2356   38A6 20 20 20 20 
2356   38AA 20 20 20 20 
2356   38AE 20 20 20 20 
2356   38B2 20 20 20 20 
2356   38B6 20 20 20 20 
2356   38BA 20 20 20 20 
2356   38BE 20 20 20 20 
2356   38C2 20 20 00 
2357   38C5 42 00 20 20         .db TOPLINE - 80 - (LINEH*1), 0,  "                                ", 0   ; wipe previous
2357   38C9 20 20 20 20 
2357   38CD 20 20 20 20 
2357   38D1 20 20 20 20 
2357   38D5 20 20 20 20 
2357   38D9 20 20 20 20 
2357   38DD 20 20 20 20 
2357   38E1 20 20 20 20 
2357   38E5 20 20 00 
2358   38E8 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "                                ", 0
2358   38EC 20 20 20 20 
2358   38F0 20 20 20 20 
2358   38F4 20 20 20 20 
2358   38F8 20 20 20 20 
2358   38FC 20 20 20 20 
2358   3900 20 20 20 20 
2358   3904 20 20 20 20 
2358   3908 20 20 00 
2359   390B 26 00 20 20         .db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0
2359   390F 20 20 20 20 
2359   3913 20 20 20 20 
2359   3917 20 20 20 20 
2359   391B 20 20 20 20 
2359   391F 20 20 20 20 
2359   3923 20 20 20 20 
2359   3927 20 20 20 20 
2359   392B 20 20 00 
2360   392E             
2361   392E             
2362   392E 42 04 13 00         .db TOPLINE - 80 - (LINEH*1), 4,  19, 0 ; stars
2363   3932 50 14 11 00         .db TOPLINE - 80 - (LINEH*0), 20, 17, 0
2364   3936 26 0A 12 00         .db TOPLINE - 80 - (LINEH*3), 10, 18, 0
2365   393A E0 07 13 00         .db $e0, 7,                       19, 0
2366   393E E6 10 12 00         .db $e6, 16,                      18, 0
2367   3942 B8 1A 11 00         .db $b8, 26,                      17, 0
2368   3946             
2369   3946 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "      GREETINGS OUTLINE \\o/     ", 0
2369   394A 20 20 20 20 
2369   394E 47 52 45 45 
2369   3952 54 49 4E 47 
2369   3956 53 20 4F 55 
2369   395A 54 4C 49 4E 
2369   395E 45 20 5C 6F 
2369   3962 2F 20 20 20 
2369   3966 20 20 00 
2370   3969             
2371   3969 01 01 FD            .db 1, 1, 253
2372   396C 01 01 FE            .db 1, 1, 254 ; launch fish
2373   396F 01 01 FD            .db 1, 1, 253
2374   3972 01 01 FD            .db 1, 1, 253
2375   3975 01 01 FD            .db 1, 1, 253
2376   3978 01 01 FD            .db 1, 1, 253
2377   397B 01 01 FD            .db 1, 1, 253
2378   397E 01 01 FD            .db 1, 1, 253
2379   3981 01 01 FD            .db 1, 1, 253
2380   3984             
2381   3984 42 04 20 00         .db TOPLINE - 80 - (LINEH*1), 4,  " ", 0
2382   3988 50 14 20 00         .db TOPLINE - 80 - (LINEH*0), 20,  " ", 0
2383   398C 26 0A 20 00         .db TOPLINE - 80 - (LINEH*3), 10,  " ", 0
2384   3990 E0 07 20 00         .db $e0, 7,  " ", 0
2385   3994 E6 10 20 00         .db $e6, 16, " ", 0
2386   3998 B8 1A 20 00         .db $b8, 26,  " ", 0
2387   399C                     
2388   399C                     ;.db TOPLINE - 80 - (LINEH*0), 0,  "                                ", 0
2389   399C                     ;.db TOPLINE - 80 - (LINEH*0), 0,  "                                ", 0
2390   399C                     ;.db TOPLINE - 80 - (LINEH*0), 0,  "                                ", 0
2391   399C                     ;.db TOPLINE - 80 - (LINEH*1), 0,  "                                ", 0   ; wipe previous
2392   399C                     ;.db TOPLINE - 80 - (LINEH*3), 0,  "                                ", 0
2393   399C 34 00 20 20         .db TOPLINE - 80 - (LINEH*2), 0,  "                                ", 0
2393   39A0 20 20 20 20 
2393   39A4 20 20 20 20 
2393   39A8 20 20 20 20 
2393   39AC 20 20 20 20 
2393   39B0 20 20 20 20 
2393   39B4 20 20 20 20 
2393   39B8 20 20 20 20 
2393   39BC 20 20 00 
2394   39BF             
2395   39BF 01 01 FF            .db 1, 1, 255
2396   39C2             
2397   39C2                     .ds 32  ; there's a bug with alignment somewhere! (maybe not anymore)
2398   39E2             
2399   39E2 53 56 4F 46 msg_minus1: .db "SVOFSKI & IVAGOR", 0
2399   39E6 53 4B 49 20 
2399   39EA 26 20 49 56 
2399   39EE 41 47 4F 52 
2399   39F2 00 
2400   39F3             
2401   39F3             
2402   3A00                     .org 020h + ($ & 0ffe0h)  ; ALIGN 32
2403   3A00             zero_init_start:
2404   3A00             
2405   3A00 00 00       intcount:   .dw 0
2406   3A02 00          frametime:  .db 0 ; interrupts between oneframe
2407   3A03 00          frame_no:   .db 0
2408   3A04 00          anim_pos:   .db 0
2409   3A05             
2410   3A05             pal_0:
2411   3A05 00 00 00 00             .db 0, 0, 0, 0
2412   3A09 00 00 00 00             .db 0, 0, 0, 0
2413   3A0D 00 00 00 00             .db 0, 0, 0, 0
2414   3A11 00 00 00 00             .db 0, 0, 0, 0
2415   3A15 00 00       pal_a_ptr:  .dw 0
2416   3A17 00 00       pal_b_ptr:  .dw 0
2417   3A19             pal_fade_a: .ds 16
2418   3A29             pal_fade_b: .ds 16
2419   3A39             pal_zero_end:
2420   3A39             
2421   3A39 00          fade_in_flag:       .db 0
2422   3A3A 00          slowprint_enabled:  .db 0
2423   3A3B 00          slow_msg_state:     .db 0
2424   3A3C 00 00       slow_msg_ptr:       .dw 0
2425   3A3E 00 00       slow_msg_loop:      .dw 0
2426   3A40             
2427   3A40             ; fish vars
2428   3A40             ;fish_wraparound_flag:   .db 0
2429   3A40             ;msgseq_end_flag:        .db 0
2430   3A40                             ; ORDER IMPORTANT
2431   3A40 00          fish_col_frac:    .db 0
2432   3A41 00          fish_col:         .db 0
2433   3A42 00          fish_enabled:     .db 0
2434   3A43             
2435   3A43             
2436   3A60                     .org 020h + ($ & 0ffe0h)  ; ALIGN 32
2437   3A60             zero_init_end:
2438   3A60             
2439   3A60                     ; big logo
2440   3A60                     .include "blksbr.inc"
0001+  3A60             ; Opened image graphics/blksbr.png 128x32
0002+  3A60             ;                                                                                                                                  
0003+  3A60             ;                                                                                                                                  
0004+  3A60             ;              111111     1111       11111       111111                    1111111              11111 11111111         1111        
0005+  3A60             ;           1112222221   122221     1222221     12222221                  122222221 1111111111112222212222222111      122221       
0006+  3A60             ;     1111112222111121   121121     1211121     12111121                 1221111122122222222222221112111111122211    1221121       
0007+  3A60             ;    12222222111111121   1211221    1211121     12111121                122111111122121111111111111121211111112221   1211121       
0008+  3A60             ;    12111111111121221   1211121    1211121     1211121                1221111111112212111211221121221112222111121   1211121       
0009+  3A60             ;    1211211222222221    12111221   1211121    1221121                12212111111112212122122112222221212111221121   1211121       
0010+  3A60             ;    121222211111111    122111121   1212121    121121                112122121212122122222222222222212221   1211221  1212121       
0011+  3A60             ;    1212121            1211111121  1211121   1221221                12221222222322122221221111111112121    1222321  1221221       
0012+  3A60             ;    1222221            1211121221  1211121 11221221      1111      112212211112221222122221     1222221    1232221  1222221       
0013+  3A60             ;    1212121           122122221121 121222112212221      122221     1221221    1211222222211     1221221   11222121  121221        
0014+  3A60             ;    1222221   1111    122221222221 12221212222211       122221     1212221    111122221221      1212121  112221221  122221        
0015+  3A60             ;    1221221  122221   1212121221221122222221121     111111221111   122211      1 121222221 11111122121111221212221  122221        
0016+  3A60             ;    1212221 12212221  122222122222122212222221      1222222222221 1222221        122222211122222121222222222222211  122121        
0017+  3A60             ;    12222211221212211 212222112212212221212211      1222222222221 1222221        12222121122212221222122121222221   122221        
0018+  3A60             ;    122212122222222212221221 121222122222221221    1222222222221  1222221       12222222222222222212222222222221    12221         
0019+  3A60             ;    122222221112221212222221  122121122212222221   1222222222221  1222221       1222222222112222221222122222211     12221         
0020+  3A60             ;    12222221   1222212222221  1222222122222222221   11112221111   1222221       12222221111122222212222211111       12221         
0021+  3A60             ;    1222221    122221222221    1222212222222222221    122221      1222221       12222221   1222222122221            12221         
0022+  3A60             ;    1222221    122221222221    12222122222122222221   122221      11222221   11 12222221   1222222122221            12221         
0023+  3A60             ;    1222221  11222221222221     12222122221122222221   1111        122222211122112222221   1222222122221            1221          
0024+  3A60             ;    1222221112222221222221      122222122211122222221              122222222222112222221 112222222122221             11           
0025+  3A60             ;    1222222222222221222221      12222212221  122222221             1122222222222122222211122222221222221                          
0026+  3A60             ;    1222222222222212222221       1222221221   122222221             122222222222122222222222222221222221             111          
0027+  3A60             ;    122222222222212222221        1222222121    122222221             12222222222212222222222222111222221            12221         
0028+  3A60             ;    1222222221111 1222221         122222111     12222221              12222222221122222222222111 1222221           122221         
0029+  3A60             ;    1222111111    1112221          1111111       122211                112222221  111111111111   1222221           12221          
0030+  3A60             ;     111             111                          111                   1111111                   11111             111           
0031+  3A60             ;                                                                                                                                  
0032+  3A60             ;                                                                                                                                  
0033+  3A60             ;                                                                                                                                  
0034+  3A60             harzakc0:
0035+  3A60 09 2D 00 00 .db 9, 45 ,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0035+  3A64 00 00 00 00 
0035+  3A68 00 00 00 00 
0035+  3A6C 00 00 00 00 
0036+  3A70 09 28 00 00 .db 9, 40 ,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0036+  3A74 00 00 00 00 
0036+  3A78 00 00 00 00 
0036+  3A7C 00 00 00 00 
0036+  3A80 00 00 
0037+  3A82 08 28 00 0F .db 8, 40 ,$00,$0f,$c1,$e0,$3e,$03,$f0,$00,$00,$fe,$00,$07,$df,$e0,$0f,$00
0037+  3A86 C1 E0 3E 03 
0037+  3A8A F0 00 00 FE 
0037+  3A8E 00 07 DF E0 
0037+  3A92 0F 00 
0038+  3A94 08 28 00 70 .db 8, 40 ,$00,$70,$22,$10,$41,$04,$08,$00,$01,$01,$7f,$f8,$20,$38,$10,$80
0038+  3A98 22 10 41 04 
0038+  3A9C 08 00 01 01 
0038+  3AA0 7F F8 20 38 
0038+  3AA4 10 80 
0039+  3AA6 08 28 1F 87 .db 8, 40 ,$1f,$87,$a2,$d0,$5d,$05,$e8,$00,$02,$7c,$80,$03,$bf,$8c,$26,$80
0039+  3AAA A2 D0 5D 05 
0039+  3AAE E8 00 02 7C 
0039+  3AB2 80 03 BF 8C 
0039+  3AB6 26 80 
0040+  3AB8 08 28 20 3F .db 8, 40 ,$20,$3f,$a2,$c8,$5d,$05,$e8,$00,$04,$fe,$5f,$ff,$af,$e2,$2e,$80
0040+  3ABC A2 C8 5D 05 
0040+  3AC0 E8 00 04 FE 
0040+  3AC4 5F FF AF E2 
0040+  3AC8 2E 80 
0041+  3ACA 08 28 2F FD .db 8, 40 ,$2f,$fd,$22,$e8,$5d,$05,$d0,$00,$09,$ff,$2e,$cd,$38,$7a,$2e,$80
0041+  3ACE 22 E8 5D 05 
0041+  3AD2 D0 00 09 FF 
0041+  3AD6 2E CD 38 7A 
0041+  3ADA 2E 80 
0042+  3ADC 08 28 2D 80 .db 8, 40 ,$2d,$80,$42,$e4,$5d,$09,$a0,$00,$12,$ff,$29,$30,$2b,$9a,$2e,$80
0042+  3AE0 42 E4 5D 09 
0042+  3AE4 A0 00 12 FF 
0042+  3AE8 29 30 2B 9A 
0042+  3AEC 2E 80 
0043+  3AEE 08 28 28 7F .db 8, 40 ,$28,$7f,$84,$f4,$55,$0b,$40,$00,$34,$aa,$40,$00,$44,$59,$2a,$80
0043+  3AF2 84 F4 55 0B 
0043+  3AF6 40 00 34 AA 
0043+  3AFA 40 00 44 59 
0043+  3AFE 2A 80 
0044+  3B00 08 28 2A 80 .db 8, 40 ,$2a,$80,$05,$fa,$5d,$12,$40,$00,$22,$04,$84,$ff,$a8,$45,$24,$80
0044+  3B04 05 FA 5D 12 
0044+  3B08 40 00 22 04 
0044+  3B0C 84 FF A8 45 
0044+  3B10 24 80 
0045+  3B12 08 28 20 80 .db 8, 40 ,$20,$80,$05,$d2,$5d,$64,$81,$e0,$64,$f1,$10,$82,$08,$51,$20,$80
0045+  3B16 05 D2 5D 64 
0045+  3B1A 81 E0 64 F1 
0045+  3B1E 10 82 08 51 
0045+  3B22 20 80 
0046+  3B24 08 28 2A 80 .db 8, 40 ,$2a,$80,$09,$0d,$51,$91,$02,$10,$49,$0b,$01,$82,$48,$c5,$29,$00
0046+  3B28 09 0D 51 91 
0046+  3B2C 02 10 49 0B 
0046+  3B30 01 82 48 C5 
0046+  3B34 29 00 
0047+  3B36 08 28 20 8F .db 8, 40 ,$20,$8f,$08,$41,$45,$06,$02,$10,$51,$0f,$09,$02,$a9,$89,$21,$00
0047+  3B3A 08 41 45 06 
0047+  3B3E 02 10 51 0F 
0047+  3B42 09 02 A9 89 
0047+  3B46 21 00 
0048+  3B48 08 28 24 90 .db 8, 40 ,$24,$90,$8a,$a4,$c0,$68,$3f,$3c,$46,$05,$41,$7e,$5e,$51,$21,$00
0048+  3B4C 8A A4 C0 68 
0048+  3B50 3F 3C 46 05 
0048+  3B54 41 7E 5E 51 
0048+  3B58 21 00 
0049+  3B5A 08 28 28 A4 .db 8, 40 ,$28,$a4,$48,$20,$88,$10,$20,$02,$82,$01,$03,$82,$80,$03,$25,$00
0049+  3B5E 48 20 88 10 
0049+  3B62 20 02 82 01 
0049+  3B66 03 82 80 03 
0049+  3B6A 25 00 
0050+  3B6C 08 28 20 CA .db 8, 40 ,$20,$ca,$64,$32,$45,$30,$20,$02,$82,$01,$0b,$11,$12,$82,$21,$00
0050+  3B70 64 32 45 30 
0050+  3B74 20 02 82 01 
0050+  3B78 0B 11 12 82 
0050+  3B7C 21 00 
0051+  3B7E 08 28 22 80 .db 8, 40 ,$22,$80,$22,$54,$40,$48,$40,$04,$82,$02,$00,$00,$80,$04,$22,$00
0051+  3B82 22 54 40 48 
0051+  3B86 40 04 82 02 
0051+  3B8A 00 00 80 04 
0051+  3B8E 22 00 
0052+  3B90 08 28 20 38 .db 8, 40 ,$20,$38,$a0,$49,$62,$04,$40,$04,$82,$02,$00,$c0,$88,$18,$22,$00
0052+  3B94 A0 49 62 04 
0052+  3B98 40 04 82 02 
0052+  3B9C 00 C0 88 18 
0052+  3BA0 22 00 
0053+  3BA2 08 28 20 44 .db 8, 40 ,$20,$44,$20,$48,$10,$02,$3c,$78,$82,$02,$07,$c0,$83,$e0,$22,$00
0053+  3BA6 20 48 10 02 
0053+  3BAA 3C 78 82 02 
0053+  3BAE 07 C0 83 E0 
0053+  3BB2 22 00 
0054+  3BB4 08 28 20 84 .db 8, 40 ,$20,$84,$20,$84,$20,$01,$08,$40,$82,$02,$04,$40,$84,$00,$22,$00
0054+  3BB8 20 84 20 01 
0054+  3BBC 08 40 82 02 
0054+  3BC0 04 40 84 00 
0054+  3BC4 22 00 
0055+  3BC6 08 28 20 84 .db 8, 40 ,$20,$84,$20,$84,$20,$80,$88,$40,$c1,$1a,$04,$40,$84,$00,$22,$00
0055+  3BCA 20 84 20 80 
0055+  3BCE 88 40 C1 1A 
0055+  3BD2 04 40 84 00 
0055+  3BD6 22 00 
0056+  3BD8 08 28 20 98 .db 8, 40 ,$20,$98,$20,$82,$10,$c0,$47,$80,$40,$e6,$04,$40,$84,$00,$24,$00
0056+  3BDC 20 82 10 C0 
0056+  3BE0 47 80 40 E6 
0056+  3BE4 04 40 84 00 
0056+  3BE8 24 00 
0057+  3BEA 08 28 20 E0 .db 8, 40 ,$20,$e0,$41,$02,$08,$e0,$20,$00,$40,$06,$05,$80,$84,$00,$18,$00
0057+  3BEE 41 02 08 E0 
0057+  3BF2 20 00 40 06 
0057+  3BF6 05 80 84 00 
0057+  3BFA 18 00 
0058+  3BFC 08 28 20 00 .db 8, 40 ,$20,$00,$41,$02,$08,$90,$10,$00,$60,$02,$07,$01,$04,$00,$00,$00
0058+  3C00 41 02 08 90 
0058+  3C04 10 00 60 02 
0058+  3C08 07 01 04 00 
0058+  3C0C 00 00 
0059+  3C0E 08 28 20 00 .db 8, 40 ,$20,$00,$81,$01,$04,$88,$08,$00,$20,$02,$00,$01,$04,$00,$1c,$00
0059+  3C12 81 01 04 88 
0059+  3C16 08 00 20 02 
0059+  3C1A 00 01 04 00 
0059+  3C1E 1C 00 
0060+  3C20 08 28 20 01 .db 8, 40 ,$20,$01,$02,$01,$02,$84,$04,$00,$10,$01,$00,$07,$04,$00,$22,$00
0060+  3C24 02 01 02 84 
0060+  3C28 04 00 10 01 
0060+  3C2C 00 07 04 00 
0060+  3C30 22 00 
0061+  3C32 08 28 20 1E .db 8, 40 ,$20,$1e,$82,$00,$83,$82,$04,$00,$08,$03,$00,$1d,$04,$00,$42,$00
0061+  3C36 82 00 83 82 
0061+  3C3A 04 00 08 03 
0061+  3C3E 00 1D 04 00 
0061+  3C42 42 00 
0062+  3C44 08 28 23 F0 .db 8, 40 ,$23,$f0,$e2,$00,$7f,$01,$18,$00,$06,$04,$ff,$f1,$04,$00,$44,$00
0062+  3C48 E2 00 7F 01 
0062+  3C4C 18 00 06 04 
0062+  3C50 FF F1 04 00 
0062+  3C54 44 00 
0063+  3C56 08 28 1C 00 .db 8, 40 ,$1c,$00,$1c,$00,$00,$00,$e0,$00,$03,$f8,$00,$00,$f8,$00,$38,$00
0063+  3C5A 1C 00 00 00 
0063+  3C5E E0 00 03 F8 
0063+  3C62 00 00 F8 00 
0063+  3C66 38 00 
0064+  3C68 08 28 00 00 .db 8, 40 ,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0064+  3C6C 00 00 00 00 
0064+  3C70 00 00 00 00 
0064+  3C74 00 00 00 00 
0064+  3C78 00 00 
0065+  3C7A 08 28 00 00 .db 8, 40 ,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0065+  3C7E 00 00 00 00 
0065+  3C82 00 00 00 00 
0065+  3C86 00 00 00 00 
0065+  3C8A 00 00 
0066+  3C8C 18 50       .db 24, 80 
0067+  3C8E FF FF       .db 255, 255 ; end of plane data
0068+  3C90             harzakc1:
0069+  3C90 18 50       .db 24, 80 
0070+  3C92 09 2D 00 00 .db 9, 45 ,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0070+  3C96 00 00 00 00 
0070+  3C9A 00 00 00 00 
0070+  3C9E 00 00 00 00 
0071+  3CA2 09 2D 00 00 .db 9, 45 ,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0071+  3CA6 00 00 00 00 
0071+  3CAA 00 00 00 00 
0071+  3CAE 00 00 00 00 
0072+  3CB2 08 28 00 0F .db 8, 40 ,$00,$0f,$c1,$e0,$3e,$03,$f0,$00,$00,$fe,$00,$07,$df,$c0,$0f,$00
0072+  3CB6 C1 E0 3E 03 
0072+  3CBA F0 00 00 FE 
0072+  3CBE 00 07 DF C0 
0072+  3CC2 0F 00 
0073+  3CC4 08 28 00 78 .db 8, 40 ,$00,$78,$41,$20,$22,$02,$10,$00,$01,$83,$7f,$fc,$40,$70,$19,$00
0073+  3CC8 41 20 22 02 
0073+  3CCC 10 00 01 83 
0073+  3CD0 7F FC 40 70 
0073+  3CD4 19 00 
0074+  3CD6 08 28 1F C0 .db 8, 40 ,$1f,$c0,$41,$30,$22,$02,$10,$00,$03,$01,$a0,$00,$50,$1c,$11,$00
0074+  3CDA 41 30 22 02 
0074+  3CDE 10 00 03 01 
0074+  3CE2 A0 00 50 1C 
0074+  3CE6 11 00 
0075+  3CE8 08 28 10 02 .db 8, 40 ,$10,$02,$c1,$10,$22,$02,$20,$00,$06,$00,$d1,$32,$c7,$84,$11,$00
0075+  3CEC C1 10 22 02 
0075+  3CF0 20 00 06 00 
0075+  3CF4 D1 32 C7 84 
0075+  3CF8 11 00 
0076+  3CFA 08 28 12 7F .db 8, 40 ,$12,$7f,$81,$18,$22,$06,$40,$00,$0d,$00,$d6,$cf,$d4,$64,$11,$00
0076+  3CFE 81 18 22 06 
0076+  3D02 40 00 0D 00 
0076+  3D06 D6 CF D4 64 
0076+  3D0A 11 00 
0077+  3D0C 08 28 17 80 .db 8, 40 ,$17,$80,$03,$08,$2a,$04,$80,$00,$0b,$55,$bf,$ff,$b8,$26,$15,$00
0077+  3D10 03 08 2A 04 
0077+  3D14 80 00 0B 55 
0077+  3D18 BF FF B8 26 
0077+  3D1C 15 00 
0078+  3D1E 08 28 15 00 .db 8, 40 ,$15,$00,$02,$04,$22,$0d,$80,$00,$1d,$ff,$7b,$00,$50,$3e,$1b,$00
0078+  3D22 02 04 22 0D 
0078+  3D26 80 00 1D FF 
0078+  3D2A 7B 00 50 3E 
0078+  3D2E 1B 00 
0079+  3D30 08 28 1F 00 .db 8, 40 ,$1f,$00,$02,$2c,$22,$1b,$00,$00,$1b,$0e,$ef,$01,$f0,$3e,$1f,$00
0079+  3D34 02 2C 22 1B 
0079+  3D38 00 00 1B 0E 
0079+  3D3C EF 01 F0 3E 
0079+  3D40 1F 00 
0080+  3D42 08 28 15 00 .db 8, 40 ,$15,$00,$06,$f2,$2e,$6e,$01,$e0,$36,$04,$fe,$01,$b0,$3a,$16,$00
0080+  3D46 06 F2 2E 6E 
0080+  3D4A 01 E0 36 04 
0080+  3D4E FE 01 B0 3A 
0080+  3D52 16 00 
0081+  3D54 08 28 1F 00 .db 8, 40 ,$1f,$00,$07,$be,$3a,$f8,$01,$e0,$2e,$00,$f6,$01,$50,$76,$1e,$00
0081+  3D58 07 BE 3A F8 
0081+  3D5C 01 E0 2E 00 
0081+  3D60 F6 01 50 76 
0081+  3D64 1E 00 
0082+  3D66 08 28 1B 0F .db 8, 40 ,$1b,$0f,$05,$5b,$3f,$90,$00,$c0,$38,$00,$be,$01,$a1,$ae,$1e,$00
0082+  3D6A 05 5B 3F 90 
0082+  3D6E 00 C0 38 00 
0082+  3D72 BE 01 A1 AE 
0082+  3D76 1E 00 
0083+  3D78 08 28 17 1B .db 8, 40 ,$17,$1b,$87,$df,$77,$e0,$1f,$fc,$7c,$00,$fc,$7d,$7f,$fc,$1a,$00
0083+  3D7C 87 DF 77 E0 
0083+  3D80 1F FC 7C 00 
0083+  3D84 FC 7D 7F FC 
0083+  3D88 1A 00 
0084+  3D8A 08 28 1F 35 .db 8, 40 ,$1f,$35,$8b,$cd,$ba,$c0,$1f,$fc,$7c,$00,$f4,$ee,$ed,$7c,$1e,$00
0084+  3D8E 8B CD BA C0 
0084+  3D92 1F FC 7C 00 
0084+  3D96 F4 EE ED 7C 
0084+  3D9A 1E 00 
0085+  3D9C 08 28 1D 7F .db 8, 40 ,$1d,$7f,$dd,$8b,$bf,$b0,$3f,$f8,$7c,$01,$ff,$ff,$7f,$f8,$1c,$00
0085+  3DA0 DD 8B BF B0 
0085+  3DA4 3F F8 7C 01 
0085+  3DA8 FF FF 7F F8 
0085+  3DAC 1C 00 
0086+  3DAE 08 28 1F C7 .db 8, 40 ,$1f,$c7,$5f,$86,$9d,$f8,$3f,$f8,$7c,$01,$ff,$3f,$77,$e0,$1c,$00
0086+  3DB2 5F 86 9D F8 
0086+  3DB6 3F F8 7C 01 
0086+  3DBA FF 3F 77 E0 
0086+  3DBE 1C 00 
0087+  3DC0 08 28 1F 83 .db 8, 40 ,$1f,$83,$df,$87,$ef,$fc,$03,$80,$7c,$01,$f8,$3f,$7c,$00,$1c,$00
0087+  3DC4 DF 87 EF FC 
0087+  3DC8 03 80 7C 01 
0087+  3DCC F8 3F 7C 00 
0087+  3DD0 1C 00 
0088+  3DD2 08 28 1F 03 .db 8, 40 ,$1f,$03,$df,$03,$df,$fe,$07,$80,$7c,$01,$f8,$3f,$78,$00,$1c,$00
0088+  3DD6 DF 03 DF FE 
0088+  3DDA 07 80 7C 01 
0088+  3DDE F8 3F 78 00 
0088+  3DE2 1C 00 
0089+  3DE4 08 28 1F 03 .db 8, 40 ,$1f,$03,$df,$03,$df,$7f,$07,$80,$3e,$01,$f8,$3f,$78,$00,$1c,$00
0089+  3DE8 DF 03 DF 7F 
0089+  3DEC 07 80 3E 01 
0089+  3DF0 F8 3F 78 00 
0089+  3DF4 1C 00 
0090+  3DF6 08 28 1F 07 .db 8, 40 ,$1f,$07,$df,$01,$ef,$3f,$80,$00,$3f,$19,$f8,$3f,$78,$00,$18,$00
0090+  3DFA DF 01 EF 3F 
0090+  3DFE 80 00 3F 19 
0090+  3E02 F8 3F 78 00 
0090+  3E06 18 00 
0091+  3E08 08 28 1F 1F .db 8, 40 ,$1f,$1f,$be,$01,$f7,$1f,$c0,$00,$3f,$f9,$f8,$7f,$78,$00,$00,$00
0091+  3E0C BE 01 F7 1F 
0091+  3E10 C0 00 3F F9 
0091+  3E14 F8 7F 78 00 
0091+  3E18 00 00 
0092+  3E1A 08 28 1F FF .db 8, 40 ,$1f,$ff,$be,$01,$f7,$0f,$e0,$00,$1f,$fd,$f8,$fe,$f8,$00,$00,$00
0092+  3E1E BE 01 F7 0F 
0092+  3E22 E0 00 1F FD 
0092+  3E26 F8 FE F8 00 
0092+  3E2A 00 00 
0093+  3E2C 08 28 1F FF .db 8, 40 ,$1f,$ff,$7e,$00,$fb,$07,$f0,$00,$1f,$fd,$ff,$fe,$f8,$00,$00,$00
0093+  3E30 7E 00 FB 07 
0093+  3E34 F0 00 1F FD 
0093+  3E38 FF FE F8 00 
0093+  3E3C 00 00 
0094+  3E3E 08 28 1F FE .db 8, 40 ,$1f,$fe,$fc,$00,$fd,$03,$f8,$00,$0f,$fe,$ff,$f8,$f8,$00,$1c,$00
0094+  3E42 FC 00 FD 03 
0094+  3E46 F8 00 0F FE 
0094+  3E4A FF F8 F8 00 
0094+  3E4E 1C 00 
0095+  3E50 08 28 1F E0 .db 8, 40 ,$1f,$e0,$7c,$00,$7c,$01,$f8,$00,$07,$fc,$ff,$e0,$f8,$00,$3c,$00
0095+  3E54 7C 00 7C 01 
0095+  3E58 F8 00 07 FC 
0095+  3E5C FF E0 F8 00 
0095+  3E60 3C 00 
0096+  3E62 08 28 1C 00 .db 8, 40 ,$1c,$00,$1c,$00,$00,$00,$e0,$00,$01,$f8,$00,$00,$f8,$00,$38,$00
0096+  3E66 1C 00 00 00 
0096+  3E6A E0 00 01 F8 
0096+  3E6E 00 00 F8 00 
0096+  3E72 38 00 
0097+  3E74 08 28 00 00 .db 8, 40 ,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0097+  3E78 00 00 00 00 
0097+  3E7C 00 00 00 00 
0097+  3E80 00 00 00 00 
0097+  3E84 00 00 
0098+  3E86 08 28 00 00 .db 8, 40 ,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0098+  3E8A 00 00 00 00 
0098+  3E8E 00 00 00 00 
0098+  3E92 00 00 00 00 
0098+  3E96 00 00 
0099+  3E98 18 50       .db 24, 80 
0100+  3E9A 18 50       .db 24, 80 
0101+  3E9C FF FF       .db 255, 255 ; end of plane data
2441   3E9E             
2442   3E9E                     ; big time textuality
2443   3E9E                     .include "font8x8.inc"
0001+  3E9E                 ; —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–∏–º–≤–æ–ª–∞
0002+  3E9E                 ; H = —Å—Ç–æ–ª–±–µ—Ü, L = —Å—Ç—Ä–æ–∫–∞ ($F8 = –≤–µ—Ä—Ö–Ω—è—è)
0003+  3E9E             gotoxy:
0004+  3E9E 22 D4 3E        shld _puts_de
0005+  3EA1 C9              ret
0006+  3EA2             
0007+  3EA2             wipestr:
0008+  3EA2 F5              push psw
0009+  3EA3 E5              push h
0010+  3EA4                 ; —Å—Ç–µ—Ä–µ—Ç—å —Å—Ç—Ä–æ–∫—É –ø–æ–ª–Ω–æ—Å—Ç—å—é
0011+  3EA4 3A 08 3F        lda _putchar_msb
0012+  3EA7 67              mov h, a
0013+  3EA8 3A D4 3E        lda _puts_de
0014+  3EAB 6F              mov l, a
0015+  3EAC             
0016+  3EAC 0E 20           mvi c, 32
0017+  3EAE 45              mov b, l
0018+  3EAF AF              xra a
0019+  3EB0             
0020+  3EB0             wipestr_l1:
0021+  3EB0 77              mov m, a \ dcr l \ mov m, a \ dcr l \ mov m, a \ dcr l \ mov m, a \ dcr l 
0021+  3EB1 2D          
0021+  3EB2 77          
0021+  3EB3 2D          
0021+  3EB4 77          
0021+  3EB5 2D          
0021+  3EB6 77          
0021+  3EB7 2D          
0022+  3EB8 77              mov m, a \ dcr l \ mov m, a \ dcr l \ mov m, a \ dcr l \ mov m, a
0022+  3EB9 2D          
0022+  3EBA 77          
0022+  3EBB 2D          
0022+  3EBC 77          
0022+  3EBD 2D          
0022+  3EBE 77          
0023+  3EBF 68              mov l, b
0024+  3EC0 24              inr h
0025+  3EC1 0D              dcr c
0026+  3EC2 C2 B0 3E        jnz wipestr_l1
0027+  3EC5             
0028+  3EC5 E1              pop h
0029+  3EC6 F1              pop psw
0030+  3EC7 C9              ret
0031+  3EC8             
0032+  3EC8                 ; –í—ã–≤–µ—Å—Ç–∏ 0-—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω—É—é —Å—Ç—Ä–æ–∫—É –≤ HL –Ω–∞ —ç–∫—Ä–∞–Ω
0033+  3EC8             puts:
0034+  3EC8 22 D2 3E        shld _puts_sptr
0035+  3ECB             _puts_1:
0036+  3ECB CD D6 3E        call _putchar
0037+  3ECE C2 CB 3E        jnz _puts_1
0038+  3ED1 C9              ret
0039+  3ED2             
0040+  3ED2 00 00       _puts_sptr:   .dw 0
0041+  3ED4 00 00       _puts_de:     .dw 0
0042+  3ED6             
0043+  3ED6                 ; –ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª
0044+  3ED6             _putchar:
0045+  3ED6 2A D2 3E        lhld _puts_sptr
0046+  3ED9 7E              mov a, m
0047+  3EDA B7              ora a
0048+  3EDB C8              rz
0049+  3EDC 4F              mov c, a
0050+  3EDD 23              inx h
0051+  3EDE 22 D2 3E        shld _puts_sptr
0052+  3EE1 EB              xchg
0053+  3EE2 2A D4 3E        lhld _puts_de
0054+  3EE5 24              inr h
0055+  3EE6 22 D4 3E        shld _puts_de
0056+  3EE9 25              dcr h
0057+  3EEA EB              xchg
0058+  3EEB             _putchar_c:
0059+  3EEB F3              di
0060+  3EEC 21 00 00        lxi h,0
0061+  3EEF 39              dad sp
0062+  3EF0 22 1F 3F        shld _pch_sp+1
0063+  3EF3             
0064+  3EF3                 ; –ù–∞–π—Ç–∏ –∞–¥—Ä–µ—Å —Å–ø—Ä–∞–π—Ç–∞ —Å–∏–º–≤–æ–ª–∞
0065+  3EF3                 ; bc = (c-32)*8
0066+  3EF3 79              mov a,c
0067+  3EF4                 ;sui 32
0068+  3EF4                 ;mov c, a
0069+  3EF4 07              rlc
0070+  3EF5 07              rlc
0071+  3EF6 07              rlc
0072+  3EF7 E6 07           ani 7
0073+  3EF9 47              mov b,a
0074+  3EFA 79              mov a,c
0075+  3EFB 07              rlc
0076+  3EFC 07              rlc
0077+  3EFD 07              rlc
0078+  3EFE E6 F8           ani $f8
0079+  3F00 4F              mov c,a
0080+  3F01 21 23 3F        lxi h, _font_table
0081+  3F04 09              dad b
0082+  3F05 F9              sphl        ; sp -> char
0083+  3F06             
0084+  3F06             _putchar_msb .equ $+2
0085+  3F06 21 00 A0        lxi h, $a000
0086+  3F09 19              dad d        ; hl -> destination
0087+  3F0A             
0088+  3F0A                 ; –í—ã–¥–∞–≤–∏—Ç—å –±–∏—Ç—ã –Ω–∞ —ç–∫—Ä–∞–Ω
0089+  3F0A C1              pop b\ mov m, c\ dcr l\ mov m, b\ dcr l
0089+  3F0B 71          
0089+  3F0C 2D          
0089+  3F0D 70          
0089+  3F0E 2D          
0090+  3F0F C1              pop b\ mov m, c\ dcr l\ mov m, b\ dcr l
0090+  3F10 71          
0090+  3F11 2D          
0090+  3F12 70          
0090+  3F13 2D          
0091+  3F14 C1              pop b\ mov m, c\ dcr l\ mov m, b\ dcr l
0091+  3F15 71          
0091+  3F16 2D          
0091+  3F17 70          
0091+  3F18 2D          
0092+  3F19 C1              pop b\ mov m, c\ dcr l\ mov m, b\ dcr l
0092+  3F1A 71          
0092+  3F1B 2D          
0092+  3F1C 70          
0092+  3F1D 2D          
0093+  3F1E             
0094+  3F1E             _pch_sp:
0095+  3F1E 31 00 00        lxi sp, 0
0096+  3F21 FB              ei
0097+  3F22 C9              ret
0098+  3F23             
0099+  3F23             _font_table:
0100+  3F23                 .include "readable.inc"
0001++ 3F23 00 00 00 00 .db $00, $00, $00, $00, $00, $00, $10, $00,
0001++ 3F27 00 00 10 00 
0002++ 3F2B 7E 81 A5 81 .db $7e, $81, $a5, $81, $9d, $b9, $81, $7e,
0002++ 3F2F 9D B9 81 7E 
0003++ 3F33 7E FF DB FF .db $7e, $ff, $db, $ff, $e3, $c7, $ff, $7e,
0003++ 3F37 E3 C7 FF 7E 
0004++ 3F3B 6C FE FE FE .db $6c, $fe, $fe, $fe, $7c, $38, $10, $00,
0004++ 3F3F 7C 38 10 00 
0005++ 3F43 10 38 7C FE .db $10, $38, $7c, $fe, $7c, $38, $10, $00,
0005++ 3F47 7C 38 10 00 
0006++ 3F4B 38 7C 38 FE .db $38, $7c, $38, $fe, $fe, $10, $10, $7c,
0006++ 3F4F FE 10 10 7C 
0007++ 3F53 00 18 3C 7E .db $00, $18, $3c, $7e, $ff, $7e, $18, $7e,
0007++ 3F57 FF 7E 18 7E 
0008++ 3F5B 00 00 18 3C .db $00, $00, $18, $3c, $3c, $18, $00, $00,
0008++ 3F5F 3C 18 00 00 
0009++ 3F63 FF FF E7 C3 .db $ff, $ff, $e7, $c3, $c3, $e7, $ff, $ff,
0009++ 3F67 C3 E7 FF FF 
0010++ 3F6B 00 3C 66 42 .db $00, $3c, $66, $42, $42, $66, $3c, $00,
0010++ 3F6F 42 66 3C 00 
0011++ 3F73 FF C3 99 BD .db $ff, $c3, $99, $bd, $bd, $99, $c3, $ff,
0011++ 3F77 BD 99 C3 FF 
0012++ 3F7B 0F 07 0F 7D .db $0f, $07, $0f, $7d, $cc, $cc, $cc, $78,
0012++ 3F7F CC CC CC 78 
0013++ 3F83 3C 66 66 66 .db $3c, $66, $66, $66, $3c, $18, $7e, $18,
0013++ 3F87 3C 18 7E 18 
0014++ 3F8B 3F 33 3F 30 .db $3f, $33, $3f, $30, $30, $70, $f0, $e0,
0014++ 3F8F 30 70 F0 E0 
0015++ 3F93 7F 63 7F 63 .db $7f, $63, $7f, $63, $63, $67, $e6, $c0,
0015++ 3F97 63 67 E6 C0 
0016++ 3F9B 99 5A 3C E7 .db $99, $5a, $3c, $e7, $e7, $3c, $5a, $99,
0016++ 3F9F E7 3C 5A 99 
0017++ 3FA3 80 E0 F8 FE .db $80, $e0, $f8, $fe, $f8, $e0, $80, $00,
0017++ 3FA7 F8 E0 80 00 
0018++ 3FAB             ;.db $02, $0e, $3e, $fe, $3e, $0e, $02, $00,
0019++ 3FAB 04          .db 00000100b     ; dec 17, star leaning right
0020++ 3FAC 6C          .db 01101100b     
0021++ 3FAD 3C          .db 00111100b
0022++ 3FAE 1F          .db 00011111b
0023++ 3FAF 3C          .db 00111100b
0024++ 3FB0 6C          .db 01101100b
0025++ 3FB1 04          .db 00000100b
0026++ 3FB2 04          .db 00000100b
0027++ 3FB3             ;.db $18, $3c, $7e, $18, $18, $7e, $3c, $18,  dec 18
0028++ 3FB3 10          .db 00010000b     ; dec 18, star middle
0029++ 3FB4 10          .db 00010000b
0030++ 3FB5 FE          .db 11111110b
0031++ 3FB6 7C          .db 01111100b
0032++ 3FB7 3C          .db 00111100b
0033++ 3FB8 6C          .db 01101100b
0034++ 3FB9 44          .db 01000100b
0035++ 3FBA 00          .db 00000000b
0036++ 3FBB             ;.db $66, $66, $66, $66, $66, $00, $66, $00, decimal 19
0037++ 3FBB 20          .db 00100000b     ; dec 19, star leaning left
0038++ 3FBC 36          .db 00110110b
0039++ 3FBD 3C          .db 00111100b
0040++ 3FBE F8          .db 11111000b
0041++ 3FBF 3C          .db 00111100b
0042++ 3FC0 36          .db 00110110b
0043++ 3FC1 20          .db 00100000b
0044++ 3FC2 20          .db 00100000b
0045++ 3FC3             ; _xxxxxx ≈í
0046++ 3FC3             ; xx xx  
0047++ 3FC3             ; xx xx
0048++ 3FC3             ; xx xxx
0049++ 3FC3             ; xx xx
0050++ 3FC3             ; xx xx
0051++ 3FC3             ;  xx xxx
0052++ 3FC3             ;.db $7f, $db, $db, $7b, $1b, $1b, $1b, $00, ;; –ü–´
0053++ 3FC3             ;.db $6e, $d8, $d8, $de, $d8, $d8, $6e, $00 ; -- OE
0054++ 3FC3             
0055++ 3FC3             
0056++ 3FC3             ; xx..xx..
0057++ 3FC3             ; xx..xx..
0058++ 3FC3             ; xx..xx..
0059++ 3FC3             ; xx..xx..
0060++ 3FC3             ; xx..xx..
0061++ 3FC3             ; xx..xx..
0062++ 3FC3             ; xxxxxxx.
0063++ 3FC3             ; .....xx.
0064++ 3FC3 CC CC CC CC .db $cc, $cc, $cc, $cc, $cc, $cc, $fe, $06    ; decimal 20
0064++ 3FC7 CC CC FE 06 
0065++ 3FCB 3F 60 7C 66 .db $3f, $60, $7c, $66, $66, $3e, $06, $fc,
0065++ 3FCF 66 3E 06 FC 
0066++ 3FD3 00 00 00 00 .db $00, $00, $00, $00, $7e, $7e, $7e, $00,
0066++ 3FD7 7E 7E 7E 00 
0067++ 3FDB 18 3C 7E 18 .db $18, $3c, $7e, $18, $7e, $3c, $18, $ff,
0067++ 3FDF 7E 3C 18 FF 
0068++ 3FE3 18 3C 7E 18 .db $18, $3c, $7e, $18, $18, $18, $18, $00,
0068++ 3FE7 18 18 18 00 
0069++ 3FEB 18 18 18 18 .db $18, $18, $18, $18, $7e, $3c, $18, $00,
0069++ 3FEF 7E 3C 18 00 
0070++ 3FF3 00 18 0C FE .db $00, $18, $0c, $fe, $0c, $18, $00, $00,
0070++ 3FF7 0C 18 00 00 
0071++ 3FFB 00 30 60 FE .db $00, $30, $60, $fe, $60, $30, $00, $00,
0071++ 3FFF 60 30 00 00 
0072++ 4003 00 00 C0 C0 .db $00, $00, $c0, $c0, $c0, $fe, $00, $00,
0072++ 4007 C0 FE 00 00 
0073++ 400B 00 24 66 FF .db $00, $24, $66, $ff, $66, $24, $00, $00,
0073++ 400F 66 24 00 00 
0074++ 4013 00 18 3C 7E .db $00, $18, $3c, $7e, $ff, $ff, $00, $00,
0074++ 4017 FF FF 00 00 
0075++ 401B 00 FF FF 7E .db $00, $ff, $ff, $7e, $3c, $18, $00, $00,
0075++ 401F 3C 18 00 00 
0076++ 4023 00 00 00 00 .db $00, $00, $00, $00, $00, $00, $00, $00,
0076++ 4027 00 00 00 00 
0077++ 402B 18 18 18 18 .db $18, $18, $18, $18, $18, $00, $18, $00,
0077++ 402F 18 00 18 00 
0078++ 4033 6C 6C 6C 00 .db $6c, $6c, $6c, $00, $00, $00, $00, $00,
0078++ 4037 00 00 00 00 
0079++ 403B 6C 6C FE 6C .db $6c, $6c, $fe, $6c, $fe, $6c, $6c, $00,
0079++ 403F FE 6C 6C 00 
0080++ 4043 18 7E C0 7C .db $18, $7e, $c0, $7c, $06, $fc, $18, $00,
0080++ 4047 06 FC 18 00 
0081++ 404B 00 C6 CC 18 .db $00, $c6, $cc, $18, $30, $66, $c6, $00,
0081++ 404F 30 66 C6 00 
0082++ 4053 38 6C 38 76 .db $38, $6c, $38, $76, $dc, $cc, $76, $00,
0082++ 4057 DC CC 76 00 
0083++ 405B 30 30 60 00 .db $30, $30, $60, $00, $00, $00, $00, $00,
0083++ 405F 00 00 00 00 
0084++ 4063 0C 18 30 30 .db $0c, $18, $30, $30, $30, $18, $0c, $00,
0084++ 4067 30 18 0C 00 
0085++ 406B 30 18 0C 0C .db $30, $18, $0c, $0c, $0c, $18, $30, $00,
0085++ 406F 0C 18 30 00 
0086++ 4073 00 66 3C FF .db $00, $66, $3c, $ff, $3c, $66, $00, $00,
0086++ 4077 3C 66 00 00 
0087++ 407B 00 18 18 7E .db $00, $18, $18, $7e, $18, $18, $00, $00,
0087++ 407F 18 18 00 00 
0088++ 4083 00 00 00 00 .db $00, $00, $00, $00, $00, $18, $18, $30,
0088++ 4087 00 18 18 30 
0089++ 408B 00 00 00 7E .db $00, $00, $00, $7e, $00, $00, $00, $00,
0089++ 408F 00 00 00 00 
0090++ 4093 00 00 00 00 .db $00, $00, $00, $00, $00, $18, $18, $00,
0090++ 4097 00 18 18 00 
0091++ 409B 06 0C 18 30 .db $06, $0c, $18, $30, $60, $c0, $80, $00,
0091++ 409F 60 C0 80 00 
0092++ 40A3 7C CE DE F6 .db $7c, $ce, $de, $f6, $e6, $c6, $7c, $00,
0092++ 40A7 E6 C6 7C 00 
0093++ 40AB 18 38 18 18 .db $18, $38, $18, $18, $18, $18, $7e, $00,
0093++ 40AF 18 18 7E 00 
0094++ 40B3 7C C6 06 7C .db $7c, $c6, $06, $7c, $c0, $c0, $fe, $00,
0094++ 40B7 C0 C0 FE 00 
0095++ 40BB FC 06 06 3C .db $fc, $06, $06, $3c, $06, $06, $fc, $00,
0095++ 40BF 06 06 FC 00 
0096++ 40C3 0C CC CC CC .db $0c, $cc, $cc, $cc, $fe, $0c, $0c, $00,
0096++ 40C7 FE 0C 0C 00 
0097++ 40CB FE C0 FC 06 .db $fe, $c0, $fc, $06, $06, $c6, $7c, $00,
0097++ 40CF 06 C6 7C 00 
0098++ 40D3 7C C0 C0 FC .db $7c, $c0, $c0, $fc, $c6, $c6, $7c, $00,
0098++ 40D7 C6 C6 7C 00 
0099++ 40DB FE 06 06 0C .db $fe, $06, $06, $0c, $18, $30, $30, $00,
0099++ 40DF 18 30 30 00 
0100++ 40E3 7C C6 C6 7C .db $7c, $c6, $c6, $7c, $c6, $c6, $7c, $00,
0100++ 40E7 C6 C6 7C 00 
0101++ 40EB 7C C6 C6 7E .db $7c, $c6, $c6, $7e, $06, $06, $7c, $00,
0101++ 40EF 06 06 7C 00 
0102++ 40F3 00 18 18 00 .db $00, $18, $18, $00, $00, $18, $18, $00,
0102++ 40F7 00 18 18 00 
0103++ 40FB 00 18 18 00 .db $00, $18, $18, $00, $00, $18, $18, $30,
0103++ 40FF 00 18 18 30 
0104++ 4103 0C 18 30 60 .db $0c, $18, $30, $60, $30, $18, $0c, $00,
0104++ 4107 30 18 0C 00 
0105++ 410B 00 00 7E 00 .db $00, $00, $7e, $00, $7e, $00, $00, $00,
0105++ 410F 7E 00 00 00 
0106++ 4113 30 18 0C 06 .db $30, $18, $0c, $06, $0c, $18, $30, $00,
0106++ 4117 0C 18 30 00 
0107++ 411B 3C 66 0C 18 .db $3c, $66, $0c, $18, $18, $00, $18, $00,
0107++ 411F 18 00 18 00 
0108++ 4123 7C C6 DE DE .db $7c, $c6, $de, $de, $de, $c0, $7e, $00,
0108++ 4127 DE C0 7E 00 
0109++ 412B 38 6C C6 C6 .db $38, $6c, $c6, $c6, $fe, $c6, $c6, $00,
0109++ 412F FE C6 C6 00 
0110++ 4133 FC C6 C6 FC .db $fc, $c6, $c6, $fc, $c6, $c6, $fc, $00,
0110++ 4137 C6 C6 FC 00 
0111++ 413B 7C C6 C0 C0 .db $7c, $c6, $c0, $c0, $c0, $c6, $7c, $00,
0111++ 413F C0 C6 7C 00 
0112++ 4143 F8 CC C6 C6 .db $f8, $cc, $c6, $c6, $c6, $cc, $f8, $00,
0112++ 4147 C6 CC F8 00 
0113++ 414B FE C0 C0 F8 .db $fe, $c0, $c0, $f8, $c0, $c0, $fe, $00,
0113++ 414F C0 C0 FE 00 
0114++ 4153 FE C0 C0 F8 .db $fe, $c0, $c0, $f8, $c0, $c0, $c0, $00,
0114++ 4157 C0 C0 C0 00 
0115++ 415B 7C C6 C0 C0 .db $7c, $c6, $c0, $c0, $ce, $c6, $7c, $00,
0115++ 415F CE C6 7C 00 
0116++ 4163 C6 C6 C6 FE .db $c6, $c6, $c6, $fe, $c6, $c6, $c6, $00,
0116++ 4167 C6 C6 C6 00 
0117++ 416B 7E 18 18 18 .db $7e, $18, $18, $18, $18, $18, $7e, $00,
0117++ 416F 18 18 7E 00 
0118++ 4173 06 06 06 06 .db $06, $06, $06, $06, $06, $c6, $7c, $00,
0118++ 4177 06 C6 7C 00 
0119++ 417B C6 CC D8 F0 .db $c6, $cc, $d8, $f0, $d8, $cc, $c6, $00,
0119++ 417F D8 CC C6 00 
0120++ 4183 C0 C0 C0 C0 .db $c0, $c0, $c0, $c0, $c0, $c0, $fe, $00,
0120++ 4187 C0 C0 FE 00 
0121++ 418B C6 EE FE FE .db $c6, $ee, $fe, $fe, $d6, $c6, $c6, $00,
0121++ 418F D6 C6 C6 00 
0122++ 4193 C6 E6 F6 DE .db $c6, $e6, $f6, $de, $ce, $c6, $c6, $00,
0122++ 4197 CE C6 C6 00 
0123++ 419B 7C C6 C6 C6 .db $7c, $c6, $c6, $c6, $c6, $c6, $7c, $00,
0123++ 419F C6 C6 7C 00 
0124++ 41A3 FC C6 C6 FC .db $fc, $c6, $c6, $fc, $c0, $c0, $c0, $00,
0124++ 41A7 C0 C0 C0 00 
0125++ 41AB 7C C6 C6 C6 .db $7c, $c6, $c6, $c6, $d6, $de, $7c, $06,
0125++ 41AF D6 DE 7C 06 
0126++ 41B3 FC C6 C6 FC .db $fc, $c6, $c6, $fc, $d8, $cc, $c6, $00,
0126++ 41B7 D8 CC C6 00 
0127++ 41BB 7C C6 C0 7C .db $7c, $c6, $c0, $7c, $06, $c6, $7c, $00,
0127++ 41BF 06 C6 7C 00 
0128++ 41C3 FF 18 18 18 .db $ff, $18, $18, $18, $18, $18, $18, $00,
0128++ 41C7 18 18 18 00 
0129++ 41CB C6 C6 C6 C6 .db $c6, $c6, $c6, $c6, $c6, $c6, $fe, $00,
0129++ 41CF C6 C6 FE 00 
0130++ 41D3 C6 C6 C6 C6 .db $c6, $c6, $c6, $c6, $c6, $7c, $38, $00,
0130++ 41D7 C6 7C 38 00 
0131++ 41DB C6 C6 C6 C6 .db $c6, $c6, $c6, $c6, $d6, $fe, $6c, $00,
0131++ 41DF D6 FE 6C 00 
0132++ 41E3 C6 C6 6C 38 .db $c6, $c6, $6c, $38, $6c, $c6, $c6, $00,
0132++ 41E7 6C C6 C6 00 
0133++ 41EB C6 C6 C6 7C .db $c6, $c6, $c6, $7c, $18, $30, $e0, $00,
0133++ 41EF 18 30 E0 00 
0134++ 41F3 FE 06 0C 18 .db $fe, $06, $0c, $18, $30, $60, $fe, $00,
0134++ 41F7 30 60 FE 00 
0135++ 41FB 3C 30 30 30 .db $3c, $30, $30, $30, $30, $30, $3c, $00,
0135++ 41FF 30 30 3C 00 
0136++ 4203 C0 60 30 18 .db $c0, $60, $30, $18, $0c, $06, $02, $00,
0136++ 4207 0C 06 02 00 
0137++ 420B 3C 0C 0C 0C .db $3c, $0c, $0c, $0c, $0c, $0c, $3c, $00,
0137++ 420F 0C 0C 3C 00 
0138++ 4213 10 38 6C C6 .db $10, $38, $6c, $c6, $00, $00, $00, $00,
0138++ 4217 00 00 00 00 
0139++ 421B 00 00 00 00 .db $00, $00, $00, $00, $00, $00, $00, $ff,
0139++ 421F 00 00 00 FF 
0140++ 4223 18 18 0C 00 .db $18, $18, $0c, $00, $00, $00, $00, $00,
0140++ 4227 00 00 00 00 
0141++ 422B 00 00 7C 06 .db $00, $00, $7c, $06, $7e, $c6, $7e, $00,
0141++ 422F 7E C6 7E 00 
0142++ 4233 C0 C0 C0 FC .db $c0, $c0, $c0, $fc, $c6, $c6, $fc, $00,
0142++ 4237 C6 C6 FC 00 
0143++ 423B 00 00 7C C6 .db $00, $00, $7c, $c6, $c0, $c6, $7c, $00,
0143++ 423F C0 C6 7C 00 
0144++ 4243 06 06 06 7E .db $06, $06, $06, $7e, $c6, $c6, $7e, $00,
0144++ 4247 C6 C6 7E 00 
0145++ 424B 00 00 7C C6 .db $00, $00, $7c, $c6, $fe, $c0, $7c, $00,
0145++ 424F FE C0 7C 00 
0146++ 4253 1C 36 30 78 .db $1c, $36, $30, $78, $30, $30, $78, $00,
0146++ 4257 30 30 78 00 
0147++ 425B 00 00 7E C6 .db $00, $00, $7e, $c6, $c6, $7e, $06, $fc,
0147++ 425F C6 7E 06 FC 
0148++ 4263 C0 C0 FC C6 .db $c0, $c0, $fc, $c6, $c6, $c6, $c6, $00,
0148++ 4267 C6 C6 C6 00 
0149++ 426B 18 00 38 18 .db $18, $00, $38, $18, $18, $18, $3c, $00,
0149++ 426F 18 18 3C 00 
0150++ 4273 06 00 06 06 .db $06, $00, $06, $06, $06, $06, $c6, $7c,
0150++ 4277 06 06 C6 7C 
0151++ 427B C0 C0 CC D8 .db $c0, $c0, $cc, $d8, $f8, $cc, $c6, $00,
0151++ 427F F8 CC C6 00 
0152++ 4283 38 18 18 18 .db $38, $18, $18, $18, $18, $18, $3c, $00,
0152++ 4287 18 18 3C 00 
0153++ 428B 00 00 CC FE .db $00, $00, $cc, $fe, $fe, $d6, $d6, $00,
0153++ 428F FE D6 D6 00 
0154++ 4293 00 00 FC C6 .db $00, $00, $fc, $c6, $c6, $c6, $c6, $00,
0154++ 4297 C6 C6 C6 00 
0155++ 429B 00 00 7C C6 .db $00, $00, $7c, $c6, $c6, $c6, $7c, $00,
0155++ 429F C6 C6 7C 00 
0156++ 42A3 00 00 FC C6 .db $00, $00, $fc, $c6, $c6, $fc, $c0, $c0,
0156++ 42A7 C6 FC C0 C0 
0157++ 42AB 00 00 7E C6 .db $00, $00, $7e, $c6, $c6, $7e, $06, $06,
0157++ 42AF C6 7E 06 06 
0158++ 42B3 00 00 FC C6 .db $00, $00, $fc, $c6, $c0, $c0, $c0, $00,
0158++ 42B7 C0 C0 C0 00 
0159++ 42BB 00 00 7E C0 .db $00, $00, $7e, $c0, $7c, $06, $fc, $00,
0159++ 42BF 7C 06 FC 00 
0160++ 42C3 18 18 7E 18 .db $18, $18, $7e, $18, $18, $18, $0e, $00,
0160++ 42C7 18 18 0E 00 
0161++ 42CB 00 00 C6 C6 .db $00, $00, $c6, $c6, $c6, $c6, $7e, $00,
0161++ 42CF C6 C6 7E 00 
0162++ 42D3 00 00 C6 C6 .db $00, $00, $c6, $c6, $c6, $7c, $38, $00,
0162++ 42D7 C6 7C 38 00 
0163++ 42DB 00 00 C6 C6 .db $00, $00, $c6, $c6, $d6, $fe, $6c, $00,
0163++ 42DF D6 FE 6C 00 
0164++ 42E3 00 00 C6 6C .db $00, $00, $c6, $6c, $38, $6c, $c6, $00,
0164++ 42E7 38 6C C6 00 
0165++ 42EB 00 00 C6 C6 .db $00, $00, $c6, $c6, $c6, $7e, $06, $fc,
0165++ 42EF C6 7E 06 FC 
0166++ 42F3 00 00 FE 0C .db $00, $00, $fe, $0c, $38, $60, $fe, $00,
0166++ 42F7 38 60 FE 00 
0167++ 42FB 0E 18 18 70 .db $0e, $18, $18, $70, $18, $18, $0e, $00,
0167++ 42FF 18 18 0E 00 
0168++ 4303 18 18 18 00 .db $18, $18, $18, $00, $18, $18, $18, $00,
0168++ 4307 18 18 18 00 
0169++ 430B 70 18 18 0E .db $70, $18, $18, $0e, $18, $18, $70, $00,
0169++ 430F 18 18 70 00 
0170++ 4313 76 DC 00 00 .db $76, $dc, $00, $00, $00, $00, $00, $00,
0170++ 4317 00 00 00 00 
0171++ 431B 00 10 38 6C .db $00, $10, $38, $6c, $c6, $c6, $fe, $00,
0171++ 431F C6 C6 FE 00 
0172++ 4323 7C C6 C0 C0 .db $7c, $c6, $c0, $c0, $c0, $d6, $7c, $30,
0172++ 4327 C0 D6 7C 30 
0173++ 432B C6 00 C6 C6 .db $c6, $00, $c6, $c6, $c6, $c6, $7e, $00,
0173++ 432F C6 C6 7E 00 
0174++ 4333 0E 00 7C C6 .db $0e, $00, $7c, $c6, $fe, $c0, $7c, $00,
0174++ 4337 FE C0 7C 00 
0175++ 433B 7E 81 3C 06 .db $7e, $81, $3c, $06, $7e, $c6, $7e, $00,
0175++ 433F 7E C6 7E 00 
0176++ 4343 66 00 7C 06 .db $66, $00, $7c, $06, $7e, $c6, $7e, $00,
0176++ 4347 7E C6 7E 00 
0177++ 434B E0 00 7C 06 .db $e0, $00, $7c, $06, $7e, $c6, $7e, $00,
0177++ 434F 7E C6 7E 00 
0178++ 4353 18 18 7C 06 .db $18, $18, $7c, $06, $7e, $c6, $7e, $00,
0178++ 4357 7E C6 7E 00 
0179++ 435B 00 00 7C C6 .db $00, $00, $7c, $c6, $c0, $d6, $7c, $30,
0179++ 435F C0 D6 7C 30 
0180++ 4363 7E 81 7C C6 .db $7e, $81, $7c, $c6, $fe, $c0, $7c, $00,
0180++ 4367 FE C0 7C 00 
0181++ 436B 66 00 7C C6 .db $66, $00, $7c, $c6, $fe, $c0, $7c, $00,
0181++ 436F FE C0 7C 00 
0182++ 4373 E0 00 7C C6 .db $e0, $00, $7c, $c6, $fe, $c0, $7c, $00,
0182++ 4377 FE C0 7C 00 
0183++ 437B 66 00 38 18 .db $66, $00, $38, $18, $18, $18, $3c, $00,
0183++ 437F 18 18 3C 00 
0184++ 4383 7C 82 38 18 .db $7c, $82, $38, $18, $18, $18, $3c, $00,
0184++ 4387 18 18 3C 00 
0185++ 438B 70 00 38 18 .db $70, $00, $38, $18, $18, $18, $3c, $00,
0185++ 438F 18 18 3C 00 
0186++ 4393 C6 10 7C C6 .db $c6, $10, $7c, $c6, $fe, $c6, $c6, $00,
0186++ 4397 FE C6 C6 00 
0187++ 439B 38 38 00 7C .db $38, $38, $00, $7c, $c6, $fe, $c6, $00,
0187++ 439F C6 FE C6 00 
0188++ 43A3 0E 00 FE C0 .db $0e, $00, $fe, $c0, $f8, $c0, $fe, $00,
0188++ 43A7 F8 C0 FE 00 
0189++ 43AB 00 00 7F 0C .db $00, $00, $7f, $0c, $7f, $cc, $7f, $00,
0189++ 43AF 7F CC 7F 00 
0190++ 43B3 3F 6C CC FF .db $3f, $6c, $cc, $ff, $cc, $cc, $cf, $00,
0190++ 43B7 CC CC CF 00 
0191++ 43BB 7C 82 7C C6 .db $7c, $82, $7c, $c6, $c6, $c6, $7c, $00,
0191++ 43BF C6 C6 7C 00 
0192++ 43C3 66 00 7C C6 .db $66, $00, $7c, $c6, $c6, $c6, $7c, $00,
0192++ 43C7 C6 C6 7C 00 
0193++ 43CB E0 00 7C C6 .db $e0, $00, $7c, $c6, $c6, $c6, $7c, $00,
0193++ 43CF C6 C6 7C 00 
0194++ 43D3 7C 82 00 C6 .db $7c, $82, $00, $c6, $c6, $c6, $7e, $00,
0194++ 43D7 C6 C6 7E 00 
0195++ 43DB E0 00 C6 C6 .db $e0, $00, $c6, $c6, $c6, $c6, $7e, $00,
0195++ 43DF C6 C6 7E 00 
0196++ 43E3 66 00 66 66 .db $66, $00, $66, $66, $66, $3e, $06, $7c,
0196++ 43E7 66 3E 06 7C 
0197++ 43EB C6 7C C6 C6 .db $c6, $7c, $c6, $c6, $c6, $c6, $7c, $00,
0197++ 43EF C6 C6 7C 00 
0198++ 43F3 C6 00 C6 C6 .db $c6, $00, $c6, $c6, $c6, $c6, $fe, $00,
0198++ 43F7 C6 C6 FE 00 
0199++ 43FB 18 18 7E D8 .db $18, $18, $7e, $d8, $d8, $d8, $7e, $18,
0199++ 43FF D8 D8 7E 18 
0200++ 4403 38 6C 60 F0 .db $38, $6c, $60, $f0, $60, $66, $fc, $00,
0200++ 4407 60 66 FC 00 
0201++ 440B 66 66 3C 18 .db $66, $66, $3c, $18, $7e, $18, $7e, $18,
0201++ 440F 7E 18 7E 18 
0202++ 4413 F8 CC CC FA .db $f8, $cc, $cc, $fa, $c6, $cf, $c6, $c3,
0202++ 4417 C6 CF C6 C3 
0203++ 441B 0E 1B 18 3C .db $0e, $1b, $18, $3c, $18, $18, $d8, $70,
0203++ 441F 18 18 D8 70 
0204++ 4423 0E 00 7C 06 .db $0e, $00, $7c, $06, $7e, $c6, $7e, $00,
0204++ 4427 7E C6 7E 00 
0205++ 442B 1C 00 38 18 .db $1c, $00, $38, $18, $18, $18, $3c, $00,
0205++ 442F 18 18 3C 00 
0206++ 4433 0E 00 7C C6 .db $0e, $00, $7c, $c6, $c6, $c6, $7c, $00,
0206++ 4437 C6 C6 7C 00 
0207++ 443B 0E 00 C6 C6 .db $0e, $00, $c6, $c6, $c6, $c6, $7e, $00,
0207++ 443F C6 C6 7E 00 
0208++ 4443 00 FE 00 FC .db $00, $fe, $00, $fc, $c6, $c6, $c6, $00,
0208++ 4447 C6 C6 C6 00 
0209++ 444B FE 00 C6 E6 .db $fe, $00, $c6, $e6, $f6, $de, $ce, $00,
0209++ 444F F6 DE CE 00 
0210++ 4453 3C 6C 6C 3E .db $3c, $6c, $6c, $3e, $00, $7e, $00, $00,
0210++ 4457 00 7E 00 00 
0211++ 445B 3C 66 66 3C .db $3c, $66, $66, $3c, $00, $7e, $00, $00,
0211++ 445F 00 7E 00 00 
0212++ 4463 18 00 18 18 .db $18, $00, $18, $18, $30, $66, $3c, $00,
0212++ 4467 30 66 3C 00 
0213++ 446B 00 00 00 FC .db $00, $00, $00, $fc, $c0, $c0, $00, $00,
0213++ 446F C0 C0 00 00 
0214++ 4473 00 00 00 FC .db $00, $00, $00, $fc, $0c, $0c, $00, $00,
0214++ 4477 0C 0C 00 00 
0215++ 447B C6 CC D8 3F .db $c6, $cc, $d8, $3f, $63, $cf, $8c, $0f,
0215++ 447F 63 CF 8C 0F 
0216++ 4483 C3 C6 CC DB .db $c3, $c6, $cc, $db, $37, $6d, $cf, $03,
0216++ 4487 37 6D CF 03 
0217++ 448B 18 00 18 18 .db $18, $00, $18, $18, $18, $18, $18, $00,
0217++ 448F 18 18 18 00 
0218++ 4493 00 33 66 CC .db $00, $33, $66, $cc, $66, $33, $00, $00,
0218++ 4497 66 33 00 00 
0219++ 449B 00 CC 66 33 .db $00, $cc, $66, $33, $66, $cc, $00, $00,
0219++ 449F 66 CC 00 00 
0220++ 44A3 22 88 22 88 .db $22, $88, $22, $88, $22, $88, $22, $88,
0220++ 44A7 22 88 22 88 
0221++ 44AB 55 AA 55 AA .db $55, $aa, $55, $aa, $55, $aa, $55, $aa,
0221++ 44AF 55 AA 55 AA 
0222++ 44B3 DD 77 DD 77 .db $dd, $77, $dd, $77, $dd, $77, $dd, $77,
0222++ 44B7 DD 77 DD 77 
0223++ 44BB 18 18 18 18 .db $18, $18, $18, $18, $18, $18, $18, $18,
0223++ 44BF 18 18 18 18 
0224++ 44C3 18 18 18 18 .db $18, $18, $18, $18, $f8, $18, $18, $18,
0224++ 44C7 F8 18 18 18 
0225++ 44CB 18 18 F8 18 .db $18, $18, $f8, $18, $f8, $18, $18, $18,
0225++ 44CF F8 18 18 18 
0226++ 44D3 36 36 36 36 .db $36, $36, $36, $36, $f6, $36, $36, $36,
0226++ 44D7 F6 36 36 36 
0227++ 44DB 00 00 00 00 .db $00, $00, $00, $00, $fe, $36, $36, $36,
0227++ 44DF FE 36 36 36 
0228++ 44E3 00 00 F8 18 .db $00, $00, $f8, $18, $f8, $18, $18, $18,
0228++ 44E7 F8 18 18 18 
0229++ 44EB 36 36 F6 06 .db $36, $36, $f6, $06, $f6, $36, $36, $36,
0229++ 44EF F6 36 36 36 
0230++ 44F3 36 36 36 36 .db $36, $36, $36, $36, $36, $36, $36, $36,
0230++ 44F7 36 36 36 36 
0231++ 44FB 00 00 FE 06 .db $00, $00, $fe, $06, $f6, $36, $36, $36,
0231++ 44FF F6 36 36 36 
0232++ 4503 36 36 F6 06 .db $36, $36, $f6, $06, $fe, $00, $00, $00,
0232++ 4507 FE 00 00 00 
0233++ 450B 36 36 36 36 .db $36, $36, $36, $36, $fe, $00, $00, $00,
0233++ 450F FE 00 00 00 
0234++ 4513 18 18 F8 18 .db $18, $18, $f8, $18, $f8, $00, $00, $00,
0234++ 4517 F8 00 00 00 
0235++ 451B 00 00 00 00 .db $00, $00, $00, $00, $f8, $18, $18, $18,
0235++ 451F F8 18 18 18 
0236++ 4523 18 18 18 18 .db $18, $18, $18, $18, $1f, $00, $00, $00,
0236++ 4527 1F 00 00 00 
0237++ 452B 18 18 18 18 .db $18, $18, $18, $18, $ff, $00, $00, $00,
0237++ 452F FF 00 00 00 
0238++ 4533 00 00 00 00 .db $00, $00, $00, $00, $ff, $18, $18, $18,
0238++ 4537 FF 18 18 18 
0239++ 453B 18 18 18 18 .db $18, $18, $18, $18, $1f, $18, $18, $18,
0239++ 453F 1F 18 18 18 
0240++ 4543 00 00 00 00 .db $00, $00, $00, $00, $ff, $00, $00, $00,
0240++ 4547 FF 00 00 00 
0241++ 454B 18 18 18 18 .db $18, $18, $18, $18, $ff, $18, $18, $18,
0241++ 454F FF 18 18 18 
0242++ 4553 18 18 1F 18 .db $18, $18, $1f, $18, $1f, $18, $18, $18,
0242++ 4557 1F 18 18 18 
0243++ 455B 36 36 36 36 .db $36, $36, $36, $36, $37, $36, $36, $36,
0243++ 455F 37 36 36 36 
0244++ 4563 36 36 37 30 .db $36, $36, $37, $30, $3f, $00, $00, $00,
0244++ 4567 3F 00 00 00 
0245++ 456B 00 00 3F 30 .db $00, $00, $3f, $30, $37, $36, $36, $36,
0245++ 456F 37 36 36 36 
0246++ 4573 36 36 F7 00 .db $36, $36, $f7, $00, $ff, $00, $00, $00,
0246++ 4577 FF 00 00 00 
0247++ 457B 00 00 FF 00 .db $00, $00, $ff, $00, $f7, $36, $36, $36,
0247++ 457F F7 36 36 36 
0248++ 4583 36 36 37 30 .db $36, $36, $37, $30, $37, $36, $36, $36,
0248++ 4587 37 36 36 36 
0249++ 458B 00 00 FF 00 .db $00, $00, $ff, $00, $ff, $00, $00, $00,
0249++ 458F FF 00 00 00 
0250++ 4593 36 36 F7 00 .db $36, $36, $f7, $00, $f7, $36, $36, $36,
0250++ 4597 F7 36 36 36 
0251++ 459B 18 18 FF 00 .db $18, $18, $ff, $00, $ff, $00, $00, $00,
0251++ 459F FF 00 00 00 
0252++ 45A3 36 36 36 36 .db $36, $36, $36, $36, $ff, $00, $00, $00,
0252++ 45A7 FF 00 00 00 
0253++ 45AB 00 00 FF 00 .db $00, $00, $ff, $00, $ff, $18, $18, $18,
0253++ 45AF FF 18 18 18 
0254++ 45B3 00 00 00 00 .db $00, $00, $00, $00, $ff, $36, $36, $36,
0254++ 45B7 FF 36 36 36 
0255++ 45BB 36 36 36 36 .db $36, $36, $36, $36, $3f, $00, $00, $00,
0255++ 45BF 3F 00 00 00 
0256++ 45C3 18 18 1F 18 .db $18, $18, $1f, $18, $1f, $00, $00, $00,
0256++ 45C7 1F 00 00 00 
0257++ 45CB 00 00 1F 18 .db $00, $00, $1f, $18, $1f, $18, $18, $18,
0257++ 45CF 1F 18 18 18 
0258++ 45D3 00 00 00 00 .db $00, $00, $00, $00, $3f, $36, $36, $36,
0258++ 45D7 3F 36 36 36 
0259++ 45DB 36 36 36 36 .db $36, $36, $36, $36, $ff, $36, $36, $36,
0259++ 45DF FF 36 36 36 
0260++ 45E3 18 18 FF 18 .db $18, $18, $ff, $18, $ff, $18, $18, $18,
0260++ 45E7 FF 18 18 18 
0261++ 45EB 18 18 18 18 .db $18, $18, $18, $18, $f8, $00, $00, $00,
0261++ 45EF F8 00 00 00 
0262++ 45F3 00 00 00 00 .db $00, $00, $00, $00, $1f, $18, $18, $18,
0262++ 45F7 1F 18 18 18 
0263++ 45FB FF FF FF FF .db $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff,
0263++ 45FF FF FF FF FF 
0264++ 4603 00 00 00 00 .db $00, $00, $00, $00, $ff, $ff, $ff, $ff,
0264++ 4607 FF FF FF FF 
0265++ 460B F0 F0 F0 F0 .db $f0, $f0, $f0, $f0, $f0, $f0, $f0, $f0,
0265++ 460F F0 F0 F0 F0 
0266++ 4613 0F 0F 0F 0F .db $0f, $0f, $0f, $0f, $0f, $0f, $0f, $0f,
0266++ 4617 0F 0F 0F 0F 
0267++ 461B FF FF FF FF .db $ff, $ff, $ff, $ff, $00, $00, $00, $00,
0267++ 461F 00 00 00 00 
0268++ 4623 00 00 76 DC .db $00, $00, $76, $dc, $c8, $dc, $76, $00,
0268++ 4627 C8 DC 76 00 
0269++ 462B 38 6C 6C 78 .db $38, $6c, $6c, $78, $6c, $66, $6c, $60,
0269++ 462F 6C 66 6C 60 
0270++ 4633 00 FE C6 C0 .db $00, $fe, $c6, $c0, $c0, $c0, $c0, $00,
0270++ 4637 C0 C0 C0 00 
0271++ 463B 00 00 FE 6C .db $00, $00, $fe, $6c, $6c, $6c, $6c, $00,
0271++ 463F 6C 6C 6C 00 
0272++ 4643 FE 60 30 18 .db $fe, $60, $30, $18, $30, $60, $fe, $00,
0272++ 4647 30 60 FE 00 
0273++ 464B 00 00 7E D8 .db $00, $00, $7e, $d8, $d8, $d8, $70, $00,
0273++ 464F D8 D8 70 00 
0274++ 4653 00 66 66 66 .db $00, $66, $66, $66, $66, $7c, $60, $c0,
0274++ 4657 66 7C 60 C0 
0275++ 465B 00 76 DC 18 .db $00, $76, $dc, $18, $18, $18, $18, $00,
0275++ 465F 18 18 18 00 
0276++ 4663 7E 18 3C 66 .db $7e, $18, $3c, $66, $66, $3c, $18, $7e,
0276++ 4667 66 3C 18 7E 
0277++ 466B 3C 66 C3 FF .db $3c, $66, $c3, $ff, $c3, $66, $3c, $00,
0277++ 466F C3 66 3C 00 
0278++ 4673 3C 66 C3 C3 .db $3c, $66, $c3, $c3, $66, $66, $e7, $00,
0278++ 4677 66 66 E7 00 
0279++ 467B 0E 18 0C 7E .db $0e, $18, $0c, $7e, $c6, $c6, $7c, $00,
0279++ 467F C6 C6 7C 00 
0280++ 4683 00 00 7E DB .db $00, $00, $7e, $db, $db, $7e, $00, $00,
0280++ 4687 DB 7E 00 00 
0281++ 468B 06 0C 7E DB .db $06, $0c, $7e, $db, $db, $7e, $60, $c0,
0281++ 468F DB 7E 60 C0 
0282++ 4693 38 60 C0 F8 .db $38, $60, $c0, $f8, $c0, $60, $38, $00,
0282++ 4697 C0 60 38 00 
0283++ 469B 78 CC CC CC .db $78, $cc, $cc, $cc, $cc, $cc, $cc, $00,
0283++ 469F CC CC CC 00 
0284++ 46A3 00 7E 00 7E .db $00, $7e, $00, $7e, $00, $7e, $00, $00,
0284++ 46A7 00 7E 00 00 
0285++ 46AB 18 18 7E 18 .db $18, $18, $7e, $18, $18, $00, $7e, $00,
0285++ 46AF 18 00 7E 00 
0286++ 46B3 60 30 18 30 .db $60, $30, $18, $30, $60, $00, $fc, $00,
0286++ 46B7 60 00 FC 00 
0287++ 46BB 18 30 60 30 .db $18, $30, $60, $30, $18, $00, $fc, $00,
0287++ 46BF 18 00 FC 00 
0288++ 46C3 0E 1B 1B 18 .db $0e, $1b, $1b, $18, $18, $18, $18, $18,
0288++ 46C7 18 18 18 18 
0289++ 46CB 18 18 18 18 .db $18, $18, $18, $18, $18, $d8, $d8, $70,
0289++ 46CF 18 D8 D8 70 
0290++ 46D3 18 18 00 7E .db $18, $18, $00, $7e, $00, $18, $18, $00,
0290++ 46D7 00 18 18 00 
0291++ 46DB 00 76 DC 00 .db $00, $76, $dc, $00, $76, $dc, $00, $00,
0291++ 46DF 76 DC 00 00 
0292++ 46E3 38 6C 6C 38 .db $38, $6c, $6c, $38, $00, $00, $00, $00,
0292++ 46E7 00 00 00 00 
0293++ 46EB 00 00 00 18 .db $00, $00, $00, $18, $18, $00, $00, $00,
0293++ 46EF 18 00 00 00 
0294++ 46F3 00 00 00 00 .db $00, $00, $00, $00, $18, $00, $00, $00,
0294++ 46F7 18 00 00 00 
0295++ 46FB 0F 0C 0C 0C .db $0f, $0c, $0c, $0c, $ec, $6c, $3c, $1c,
0295++ 46FF EC 6C 3C 1C 
0296++ 4703 78 6C 6C 6C .db $78, $6c, $6c, $6c, $6c, $00, $00, $00,
0296++ 4707 6C 00 00 00 
0297++ 470B 7C 0C 7C 60 .db $7c, $0c, $7c, $60, $7c, $00, $00, $00,
0297++ 470F 7C 00 00 00 
0298++ 4713 00 00 3C 3C .db $00, $00, $3c, $3c, $3c, $3c, $00, $00,
0298++ 4717 3C 3C 00 00 
0299++ 471B 00 10 00 00 .db $00, $10, $00, $00, $00, $00, $00, $00
0299++ 471F 00 00 00 00 
0300++ 4723             
0301++ 4723             ; vim: filetype=asm
0101+  4723             ; vim: filetype=asm
2444   4723             
2445   4723                     .include "fish.inc"
0001+  4723             ; Opened image graphics/outline1.png 16x16
0002+  4723             ;     212   222222 
0003+  4723             ;     212  22111122
0004+  4723             ;     2222221122212
0005+  4723             ;  222 211211222212
0006+  4723             ;  1122211212222122
0007+  4723             ;  2221122112221212
0008+  4723             ;    2112112121212 
0009+  4723             ;    222112111222  
0010+  4723             ;   22111212121122 
0011+  4723             ;  221122111111112 
0012+  4723             ;  2112222121122222
0013+  4723             ;  2122221211211112
0014+  4723             ;  2122212211211222
0015+  4723             ;  2122121221212112
0016+  4723             ;  2211212 22212122
0017+  4723             ;   22222    22222 
0018+  4723             fisha0:
0019+  4723 08 00 08 3C 	.db  $08,$00,$08,$3c,$00,$62,$06,$c2,$c6,$84,$19,$8a,$1b,$54,$06,$e0,$1d,$58,$33,$fc,$61,$60,$42,$de,$44,$d8,$4a,$56,$34,$14,$00,$00
0019+  4727 00 62 06 C2 
0019+  472B C6 84 19 8A 
0019+  472F 1B 54 06 E0 
0019+  4733 1D 58 33 FC 
0019+  4737 61 60 42 DE 
0019+  473B 44 D8 4A 56 
0019+  473F 34 14 00 00 
0020+  4743             fisha1:
0021+  4743 14 7E 14 C3 	.db  $14,$7e,$14,$c3,$1f,$9d,$e9,$3d,$39,$7b,$e6,$75,$24,$aa,$39,$1c,$62,$a6,$cc,$02,$9e,$9f,$bd,$21,$bb,$27,$b5,$a9,$ca,$eb,$7c,$3e
0021+  4747 1F 9D E9 3D 
0021+  474B 39 7B E6 75 
0021+  474F 24 AA 39 1C 
0021+  4753 62 A6 CC 02 
0021+  4757 9E 9F BD 21 
0021+  475B BB 27 B5 A9 
0021+  475F CA EB 7C 3E 
0022+  4763             ; Opened image graphics/outline2.png 16x16
0023+  4763             ;     212          
0024+  4763             ;     212  22222   
0025+  4763             ;     22222211122  
0026+  4763             ;  222 21121121122 
0027+  4763             ;  112221121222112 
0028+  4763             ;  222112211222122 
0029+  4763             ;    2112112121212 
0030+  4763             ;    222112111212  
0031+  4763             ;   22111212121122 
0032+  4763             ;   21122111111112 
0033+  4763             ;   212222121122222
0034+  4763             ;   211221211211112
0035+  4763             ;   221112111211222
0036+  4763             ;    22121221212112
0037+  4763             ;     2222 22212122
0038+  4763             ;            22222 
0039+  4763             fishb0:
0040+  4763 08 00 08 00 	.db  $08,$00,$08,$00,$00,$70,$06,$d8,$c6,$8c,$19,$88,$1b,$54,$06,$e8,$1d,$58,$33,$fc,$21,$60,$32,$de,$1d,$d8,$0a,$56,$00,$14,$00,$00
0040+  4767 00 70 06 D8 
0040+  476B C6 8C 19 88 
0040+  476F 1B 54 06 E8 
0040+  4773 1D 58 33 FC 
0040+  4777 21 60 32 DE 
0040+  477B 1D D8 0A 56 
0040+  477F 00 14 00 00 
0041+  4783             fishb1:
0042+  4783 14 00 14 F8 	.db  $14,$00,$14,$f8,$1f,$8c,$e9,$26,$39,$72,$e6,$76,$24,$aa,$39,$14,$62,$a6,$4c,$02,$5e,$9f,$4d,$21,$62,$27,$35,$a9,$1e,$eb,$00,$3e
0042+  4787 1F 8C E9 26 
0042+  478B 39 72 E6 76 
0042+  478F 24 AA 39 14 
0042+  4793 62 A6 4C 02 
0042+  4797 5E 9F 4D 21 
0042+  479B 62 27 35 A9 
0042+  479F 1E EB 00 3E 
2446   47A3             fishz0: .ds 32   ; empty sprite for wiping
2447   47C3                     .include "drawfish.inc"
0001+  47C3             ;drawfish: 
0002+  47C3             ;                lxi h, $d000 + FISH_Y
0003+  47C3             ;                lxi d, fishb0
0004+  47C3             ;                call drawspr
0005+  47C3             ;                lxi h, $f000 + FISH_Y
0006+  47C3             ;                lxi d, fishb1
0007+  47C3             ;                call drawspr
0008+  47C3             ;                ret
0009+  47C3             
0010+  47C3             maybe_wipe_fish:
0011+  47C3                             ;mvi a, $ff
0012+  47C3                             ;sta fish_wraparound_flag
0013+  47C3                             ;lda msgseq_end_flag
0014+  47C3                             ;ora a
0015+  47C3                             ;rz
0016+  47C3 AF                          xra a
0017+  47C4 32 42 3A                    sta fish_enabled
0018+  47C7                             ; time to let go of the fish
0019+  47C7 11 A3 47                    lxi d, fishz0
0020+  47CA 26 80                       mvi h, FISH_BP;$c0
0021+  47CC 2E 60                       mvi l, FISH_Y
0022+  47CE             
0023+  47CE 01 08 02                    lxi b, $0208
0024+  47D1             mwf_l2:
0025+  47D1 AF                          xra a
0026+  47D2             mwf_l1:
0027+  47D2 77                          mov m, a \ inr h \ mov m, a \ dcr l
0027+  47D3 24          
0027+  47D4 77          
0027+  47D5 2D          
0028+  47D6 77                          mov m, a \ dcr h \ mov m, a \ dcr l
0028+  47D7 25          
0028+  47D8 77          
0028+  47D9 2D          
0029+  47DA 0D                          dcr c
0030+  47DB C2 D2 47                    jnz mwf_l1
0031+  47DE 3E 20                       mvi a, $20
0032+  47E0 84                          add h
0033+  47E1 67                          mov h, a
0034+  47E2 2E 60                       mvi l, FISH_Y
0035+  47E4 05                          dcr b
0036+  47E5 C2 D1 47                    jnz mwf_l2
0037+  47E8             
0038+  47E8 C3 7D 0A                    jmp fade_to_blue 
0039+  47EB                           
0040+  47EB                             ;ret
0041+  47EB             
0042+  47EB             drawfish_a:
0043+  47EB 7E                          mov a, m
0044+  47EC FE 1E                       cpi $1e
0045+  47EE F2 C3 47                    jp maybe_wipe_fish
0046+  47F1                             ;rp
0047+  47F1             
0048+  47F1 11 23 47                    lxi d, fisha0
0049+  47F4 3E 80                       mvi a, FISH_BP
0050+  47F6 86                          add m
0051+  47F7 3C                          inr a
0052+  47F8 67                          mov h, a
0053+  47F9 2E 60                       mvi l, FISH_Y
0054+  47FB E5                          push h
0055+  47FC CD 29 48                    call drawspr
0056+  47FF E1                          pop h
0057+  4800 3E 20                       mvi a, $20
0058+  4802 84                          add h
0059+  4803 67                          mov h, a
0060+  4804 11 43 47                    lxi d, fisha1
0061+  4807 C3 29 48                    jmp drawspr
0062+  480A             
0063+  480A             drawfish_b:
0064+  480A 7E                          mov a, m
0065+  480B FE 1E                       cpi $1e
0066+  480D F2 C3 47                    jp maybe_wipe_fish
0067+  4810             
0068+  4810 11 63 47                    lxi d, fishb0
0069+  4813 3E 80                       mvi a, FISH_BP
0070+  4815 86                          add m
0071+  4816 3C                          inr a
0072+  4817 67                          mov h, a
0073+  4818 2E 60                       mvi l, FISH_Y
0074+  481A E5                          push h
0075+  481B CD 29 48                    call drawspr
0076+  481E E1                          pop h
0077+  481F 3E 20                       mvi a, $20
0078+  4821 84                          add h
0079+  4822 67                          mov h, a
0080+  4823 11 83 47                    lxi d, fishb1
0081+  4826 C3 29 48                    jmp drawspr
0082+  4829                             
0083+  4829             drawspr:
0084+  4829 0E 02                       mvi c, 2
0085+  482B             drawspr_l1
0086+  482B 1A                          ldax d \ mov m, a \ inx d \ inr h
0086+  482C 77          
0086+  482D 13          
0086+  482E 24          
0087+  482F 1A                          ldax d \ mov m, a \ inx d \ dcr h \ dcr l
0087+  4830 77          
0087+  4831 13          
0087+  4832 25          
0087+  4833 2D          
0088+  4834 1A                          ldax d \ mov m, a \ inx d \ inr h
0088+  4835 77          
0088+  4836 13          
0088+  4837 24          
0089+  4838 1A                          ldax d \ mov m, a \ inx d \ dcr h \ dcr l
0089+  4839 77          
0089+  483A 13          
0089+  483B 25          
0089+  483C 2D          
0090+  483D 1A                          ldax d \ mov m, a \ inx d \ inr h
0090+  483E 77          
0090+  483F 13          
0090+  4840 24          
0091+  4841 1A                          ldax d \ mov m, a \ inx d \ dcr h \ dcr l
0091+  4842 77          
0091+  4843 13          
0091+  4844 25          
0091+  4845 2D          
0092+  4846 1A                          ldax d \ mov m, a \ inx d \ inr h
0092+  4847 77          
0092+  4848 13          
0092+  4849 24          
0093+  484A 1A                          ldax d \ mov m, a \ inx d \ dcr h \ dcr l
0093+  484B 77          
0093+  484C 13          
0093+  484D 25          
0093+  484E 2D          
0094+  484F 1A                          ldax d \ mov m, a \ inx d \ inr h
0094+  4850 77          
0094+  4851 13          
0094+  4852 24          
0095+  4853 1A                          ldax d \ mov m, a \ inx d \ dcr h \ dcr l
0095+  4854 77          
0095+  4855 13          
0095+  4856 25          
0095+  4857 2D          
0096+  4858 1A                          ldax d \ mov m, a \ inx d \ inr h
0096+  4859 77          
0096+  485A 13          
0096+  485B 24          
0097+  485C 1A                          ldax d \ mov m, a \ inx d \ dcr h \ dcr l
0097+  485D 77          
0097+  485E 13          
0097+  485F 25          
0097+  4860 2D          
0098+  4861 1A                          ldax d \ mov m, a \ inx d \ inr h
0098+  4862 77          
0098+  4863 13          
0098+  4864 24          
0099+  4865 1A                          ldax d \ mov m, a \ inx d \ dcr h \ dcr l
0099+  4866 77          
0099+  4867 13          
0099+  4868 25          
0099+  4869 2D          
0100+  486A 1A                          ldax d \ mov m, a \ inx d \ inr h
0100+  486B 77          
0100+  486C 13          
0100+  486D 24          
0101+  486E 1A                          ldax d \ mov m, a \ inx d \ dcr h \ dcr l
0101+  486F 77          
0101+  4870 13          
0101+  4871 25          
0101+  4872 2D          
0102+  4873             
0103+  4873 0D                          dcr c
0104+  4874 C2 2B 48                    jnz drawspr_l1
0105+  4877             
0106+  4877 C9                          ret
0107+  4878                             
0108+  4878                             ; fish swimming
0109+  4878             dumbshift:
0110+  4878 3A 41 3A                    lda fish_col
0111+  487B C6 80                       adi FISH_BP;$c0
0112+  487D 47                          mov b, a
0113+  487E 3C                          inr a
0114+  487F E6 1F                       ani $1f
0115+  4881 C6 80                       adi FISH_BP;$c0
0116+  4883 57                          mov d, a
0117+  4884             
0118+  4884 3C                          inr a 
0119+  4885 E6 1F                       ani $1f
0120+  4887 C6 80                       adi FISH_BP;$c0
0121+  4889 67                          mov h, a
0122+  488A             
0123+  488A 3E 60                       mvi a, FISH_Y
0124+  488C 6F                          mov l, a \ mov e, a \ mov c, a
0124+  488D 5F          
0124+  488E 4F          
0125+  488F CD C0 48                    call oneshift
0126+  4892             
0127+  4892 3A 41 3A                    lda fish_col
0128+  4895 C6 A0                       adi (FISH_BP + $20)
0129+  4897 47                          mov b, a \ inr a \ ani $1f \ adi (FISH_BP + $20) \ mov d, a
0129+  4898 3C          
0129+  4899 E6 1F       
0129+  489B C6 A0       
0129+  489D 57          
0130+  489E 3C                                     inr a \ ani $1f \ adi (FISH_BP + $20) \ mov h, a
0130+  489F E6 1F       
0130+  48A1 C6 A0       
0130+  48A3 67          
0131+  48A4             
0132+  48A4 3E 60                       mvi a, FISH_Y
0133+  48A6 6F                          mov l, a \ mov e, a \ mov c, a
0133+  48A7 5F          
0133+  48A8 4F          
0134+  48A9 CD C0 48                    call oneshift
0135+  48AC             
0136+  48AC 21 40 3A                    lxi h, fish_col_frac
0137+  48AF 7E                          mov a, m
0138+  48B0 07                          rlc
0139+  48B1 77                          mov m, a
0140+  48B2 D0                          rnc
0141+  48B3             
0142+  48B3 23                          inx h       ; hl = &fish_col
0143+  48B4 7E                          mov a, m
0144+  48B5 3D                          dcr a       ; previous column
0145+  48B6 E6 1F                       ani $1f
0146+  48B8 77                          mov m, a
0147+  48B9             
0148+  48B9                             ; switch sprite
0149+  48B9 1F                          rar ; lsb
0150+  48BA DA EB 47                    jc  drawfish_a
0151+  48BD C3 0A 48                    jmp drawfish_b
0152+  48C0                             ;ret
0153+  48C0             
0154+  48C0             oneshift:
0155+  48C0 B7                          ora a \ mov a, m \ ral \ mov m, a 
0155+  48C1 7E          
0155+  48C2 17          
0155+  48C3 77          
0156+  48C4 1A                                     ldax d \ ral \ stax d
0156+  48C5 17          
0156+  48C6 12          
0157+  48C7 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0157+  48C8 17          
0157+  48C9 02          
0157+  48CA 2D          
0157+  48CB 1D          
0157+  48CC 0D          
0158+  48CD B7                          ora a \ mov a, m \ ral \ mov m, a 
0158+  48CE 7E          
0158+  48CF 17          
0158+  48D0 77          
0159+  48D1 1A                                     ldax d \ ral \ stax d
0159+  48D2 17          
0159+  48D3 12          
0160+  48D4 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0160+  48D5 17          
0160+  48D6 02          
0160+  48D7 2D          
0160+  48D8 1D          
0160+  48D9 0D          
0161+  48DA B7                          ora a \ mov a, m \ ral \ mov m, a 
0161+  48DB 7E          
0161+  48DC 17          
0161+  48DD 77          
0162+  48DE 1A                                     ldax d \ ral \ stax d
0162+  48DF 17          
0162+  48E0 12          
0163+  48E1 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0163+  48E2 17          
0163+  48E3 02          
0163+  48E4 2D          
0163+  48E5 1D          
0163+  48E6 0D          
0164+  48E7 B7                          ora a \ mov a, m \ ral \ mov m, a 
0164+  48E8 7E          
0164+  48E9 17          
0164+  48EA 77          
0165+  48EB 1A                                     ldax d \ ral \ stax d
0165+  48EC 17          
0165+  48ED 12          
0166+  48EE 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0166+  48EF 17          
0166+  48F0 02          
0166+  48F1 2D          
0166+  48F2 1D          
0166+  48F3 0D          
0167+  48F4 B7                          ora a \ mov a, m \ ral \ mov m, a 
0167+  48F5 7E          
0167+  48F6 17          
0167+  48F7 77          
0168+  48F8 1A                                     ldax d \ ral \ stax d
0168+  48F9 17          
0168+  48FA 12          
0169+  48FB 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0169+  48FC 17          
0169+  48FD 02          
0169+  48FE 2D          
0169+  48FF 1D          
0169+  4900 0D          
0170+  4901 B7                          ora a \ mov a, m \ ral \ mov m, a 
0170+  4902 7E          
0170+  4903 17          
0170+  4904 77          
0171+  4905 1A                                     ldax d \ ral \ stax d
0171+  4906 17          
0171+  4907 12          
0172+  4908 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0172+  4909 17          
0172+  490A 02          
0172+  490B 2D          
0172+  490C 1D          
0172+  490D 0D          
0173+  490E B7                          ora a \ mov a, m \ ral \ mov m, a 
0173+  490F 7E          
0173+  4910 17          
0173+  4911 77          
0174+  4912 1A                                     ldax d \ ral \ stax d
0174+  4913 17          
0174+  4914 12          
0175+  4915 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0175+  4916 17          
0175+  4917 02          
0175+  4918 2D          
0175+  4919 1D          
0175+  491A 0D          
0176+  491B B7                          ora a \ mov a, m \ ral \ mov m, a 
0176+  491C 7E          
0176+  491D 17          
0176+  491E 77          
0177+  491F 1A                                     ldax d \ ral \ stax d
0177+  4920 17          
0177+  4921 12          
0178+  4922 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0178+  4923 17          
0178+  4924 02          
0178+  4925 2D          
0178+  4926 1D          
0178+  4927 0D          
0179+  4928 B7                          ora a \ mov a, m \ ral \ mov m, a 
0179+  4929 7E          
0179+  492A 17          
0179+  492B 77          
0180+  492C 1A                                     ldax d \ ral \ stax d
0180+  492D 17          
0180+  492E 12          
0181+  492F 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0181+  4930 17          
0181+  4931 02          
0181+  4932 2D          
0181+  4933 1D          
0181+  4934 0D          
0182+  4935 B7                          ora a \ mov a, m \ ral \ mov m, a 
0182+  4936 7E          
0182+  4937 17          
0182+  4938 77          
0183+  4939 1A                                     ldax d \ ral \ stax d
0183+  493A 17          
0183+  493B 12          
0184+  493C 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0184+  493D 17          
0184+  493E 02          
0184+  493F 2D          
0184+  4940 1D          
0184+  4941 0D          
0185+  4942 B7                          ora a \ mov a, m \ ral \ mov m, a 
0185+  4943 7E          
0185+  4944 17          
0185+  4945 77          
0186+  4946 1A                                     ldax d \ ral \ stax d
0186+  4947 17          
0186+  4948 12          
0187+  4949 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0187+  494A 17          
0187+  494B 02          
0187+  494C 2D          
0187+  494D 1D          
0187+  494E 0D          
0188+  494F B7                          ora a \ mov a, m \ ral \ mov m, a 
0188+  4950 7E          
0188+  4951 17          
0188+  4952 77          
0189+  4953 1A                                     ldax d \ ral \ stax d
0189+  4954 17          
0189+  4955 12          
0190+  4956 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0190+  4957 17          
0190+  4958 02          
0190+  4959 2D          
0190+  495A 1D          
0190+  495B 0D          
0191+  495C B7                          ora a \ mov a, m \ ral \ mov m, a 
0191+  495D 7E          
0191+  495E 17          
0191+  495F 77          
0192+  4960 1A                                     ldax d \ ral \ stax d
0192+  4961 17          
0192+  4962 12          
0193+  4963 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0193+  4964 17          
0193+  4965 02          
0193+  4966 2D          
0193+  4967 1D          
0193+  4968 0D          
0194+  4969 B7                          ora a \ mov a, m \ ral \ mov m, a 
0194+  496A 7E          
0194+  496B 17          
0194+  496C 77          
0195+  496D 1A                                     ldax d \ ral \ stax d
0195+  496E 17          
0195+  496F 12          
0196+  4970 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0196+  4971 17          
0196+  4972 02          
0196+  4973 2D          
0196+  4974 1D          
0196+  4975 0D          
0197+  4976 B7                          ora a \ mov a, m \ ral \ mov m, a 
0197+  4977 7E          
0197+  4978 17          
0197+  4979 77          
0198+  497A 1A                                     ldax d \ ral \ stax d
0198+  497B 17          
0198+  497C 12          
0199+  497D 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0199+  497E 17          
0199+  497F 02          
0199+  4980 2D          
0199+  4981 1D          
0199+  4982 0D          
0200+  4983 B7                          ora a \ mov a, m \ ral \ mov m, a 
0200+  4984 7E          
0200+  4985 17          
0200+  4986 77          
0201+  4987 1A                                     ldax d \ ral \ stax d
0201+  4988 17          
0201+  4989 12          
0202+  498A 0A                                     ldax b \ ral \ stax b \ dcr l \ dcr e \ dcr c
0202+  498B 17          
0202+  498C 02          
0202+  498D 2D          
0202+  498E 1D          
0202+  498F 0D          
0203+  4990                             
0204+  4990 C9                          ret
0205+  4991             
0206+  4991             ; vim: filetype=asm
2448   4991             
2449   4FFF                     .org PLAYER_BASE-1
2450   4FFF 00                  .db 0
2451   5000             
2452   5000             player_init .equ PLAYER_BASE+0
2453   5000             player_tick .equ PLAYER_BASE+3
2454   5000             songe       .equ PLAYER_BASE+6
2455   5000             
2456   5000                     .end
2457   5000                     
2458   5000                     
2459   5000             ; code snippets cemetery
2460   5000             
2461   5000                     ; xor-swap, register-saving but too slow
2462   5000                     ; xra m           ; X = Y xor X  (X = *hl)
2463   5000                     ; mov m, a
2464   5000                     ; dcx h
2465   5000                     ; xra m
2466   5000                     ; mov m, a        ; Y = X xor Y 
2467   5000                     ; inx h
2468   5000                     ; xra m
2469   5000                     ; mov m, a        ; = 64/swap
2470   5000                     
2471   5000                     
2472   5000             
2473   5000                     ; ora a           ; $00 -> Z=1                    -> continue
2474   5000                     ;                 ; $80 -> Z=0, S=1, P=0          -> A (fill)
2475   5000                     ;                 ; $C0 -> Z=0, S=1, P=1          -> continue
2476   5000                     ;                 ; $40 -> Z=0, S=0, P=0          -> B (wipe)
2477   5000             
2478   5000                     ; add a           ; CY = state_a, S = state_b
2479   5000                     ;                 ; $80 -> C=1, Z=1, P=1, S=0
2480   5000                     ;                 ; $00 -> C=0, Z=1, P=1, S=0     ~ !state_a & !state_b
2481   5000                     ;                 ; $40 -> C=0, Z=0, P=0, S=1
2482   5000                     ;                 ; $C0 -> C=1, Z=0, P=0, S=1     ~ state_a & state_b
2483   5000                     
tasm: Number of errors = 0
